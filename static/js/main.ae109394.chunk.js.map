{"version":3,"sources":["../node_modules/gofsh/dist/optimizer sync","utils/AppRouter.js","serviceWorker.js","index.js","components/ShareLink.js","components/CodeMirrorComponent.js","utils/BitlyWorker.js","components/DeleteConfirmationModal.js","components/JSONOutput.js","components/FSHOutput.js","components/ConsoleComponent.js","utils/logger.js","utils/Load.js","utils/Processing.js","utils/helpers.js","utils/FSHHelpers.js","components/FSHControls.js","style/FSH-online-logo.png","components/TopBar.js","App.js"],"names":["webpackEmptyContext","req","e","Error","code","keys","resolve","module","exports","id","AppRouter","props","_jsxs","Switch","children","_jsx","Route","path","component","App","exact","Boolean","window","location","hostname","match","ReactDOM","render","React","StrictMode","HashRouter","basename","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message","useStyles","makeStyles","theme","iconButton","color","palette","common","white","padding","textArea","width","text","primary","fontWeight","copyBox","backgroundColor","lightGrey","borderRadius","display","justifyContent","alignItems","paddingLeft","textOverflow","ShareLink","classes","openShare","setOpenShare","useState","shareError","setShareError","openGist","setOpenGist","openGistError","setOpenGistError","copyTip","setCopyTip","fshCopied","fshCopyButton","setFshCopied","link","setLink","gistLink","setGistLink","showCreateGistButton","setshowCreateGistButton","handleOpenGist","handleCloseGist","handleCloseGistError","handleCloseShare","_Fragment","Tooltip","title","placement","arrow","IconButton","name","className","onClick","async","_props$config","_props$config2","_props$config3","_props$config4","encoded","_props$config5","_props$config6","_props$config7","_props$config8","config","canonical","version","fhirVersion","length","dependencies","deflateSync","JSON","stringify","c","v","f","d","shareText","toString","longLink","bitlyLink","generateLink","errorNeeded","bitlySlice","slice","LinkIcon","fontSize","style","transform","Dialog","open","onClose","maxWidth","fullWidth","DialogTitle","DialogContent","DialogContentText","Box","overflow","CopyToClipboard","onCopy","FileCopy","DialogActions","Button","align","flex","hidden","red","Link","href","target","TextField","label","onChange","event","_event$target$value$m","gistId","value","bottom","right","handleFSHcopy","handleGenerateGistLink","autoFocus","require","CodeMirror","defineSimpleMode","meta","lineComment","start","regex","token","push","sol","next","closingParen","pop","comment","drawerWidth","box","height","header","fontFamily","background","darkerGrey","transition","transitions","create","easing","sharp","duration","leavingScreen","headerShift","easeOut","enteringScreen","marginRight","headerLabel","lineHeight","float","whiteSpace","headerActionGroup","paddingRight","headerActions","drawer","flexShrink","drawerPaper","border","top","drawerPaperExpandedConsole","drawerHeader","minHeight","drawerHeaderIcon","success","main","light","minWidth","content","flexGrow","contentShift","CodeMirrorComponent","expandedConsoleContext","useContext","ExpandedConsoleContext","drawerOpen","setDrawerOpen","handleDrawerOpen","handleDrawerClose","renderActionIcon","Icon","arguments","undefined","upperFirst","clsx","renderDrawer","mode","isExamples","copy","save","SaveAlt","delete","Delete","ChevronLeft","ReactCodeMirror","initialText","options","placeholder","scrollbarStyle","autoCloseBrackets","lineNumbers","foldGutter","readOnly","gutters","extraKeys","Tab","cm","replaceSelection","foldCode","getCursor","editor","data","updateTextValue","Drawer","variant","anchor","paper","ChevronRight","bitly","BitlyClient","process","Promise","shorten","result","expandLink","encodedFsh","bitlyURL","expand","DeleteConfirmationModal","isOpen","handleCloseModal","item","handleDelete","fileTreeContent","overflowY","button","dark","list","paddingBottom","listItemError","paddingTop","margin","listItem","lightestGrey","marginTop","marginBottom","listItemSelected","editorGrey","darkestGrey","listHeader","listIcon","verticalAlign","listIconError","blankIcon","checkFshType","def","resourceType","derivation","kind","type","includes","checkIdToDisplay","substring","lastIndexOf","getIterablePackage","defsPackage","profiles","extensions","logicals","resources","instances","valueSets","codeSystems","map","JSONOutput","setInitialText","fhirDefinitions","setFhirDefinitions","setShowNewText","propsUpdateText","currentDef","setCurrentDef","defsWithErrors","setDefsWithErrors","openDeleteConfirmation","setOpenDeleteConfirmation","useEffect","showNewText","isEqual","packageJSON","parse","iterablePackage","isWaiting","addDefinition","updatedDefs","handleCloseAndDelete","index","splice","newCurrentDef","newCurrentDefText","newErrors","indexOf","shiftedErrors","i","handleCloseDeleteConfirmation","renderFileTreeView","order","grouped","groupBy","val","Object","sort","a","b","key","List","aId","bId","toLowerCase","currentIndex","isError","ListItem","ErrorOutline","displayValue","latestJSON","startIcon","Add","handleOpenDeleteConfirmation","handleSave","defaultName","_resourceObj","_resourceObj2","resourceObj","FileSaver","saveAs","Blob","renderDeleteModal","defToDelete","FSHOutput","openDeleteModal","setOpenDeleteModal","handleOpenDeleteModal","consoleControls","boxSizing","textTransform","problemsButton","expandIcon","pre","circle","marginLeft","Console","problemsView","setProblemsView","problemCount","setExpandConsole","toggleExpandConsole","expandConsole","ExpandMore","ExpandLess","setMessagesConsole","borderBottom","setProblemsConsole","problemColor","borderColor","problemMessages","consoleMessages","fshOnlineLogger","sushiUtils","logger","setCurrentLogger","loggerName","gofshUtils","unzipDependencies","dependency","returnPackage","resourceArr","emptyDependencies","https","get","res","extract","tarStream","on","stream","buf","chunk","resource","resume","statusCode","pipe","zlib","createGunzip","info","loadDependenciesInStorage","database","reject","transaction","oncomplete","onerror","objectStore","keyPath","forEach","put","loadAsFHIRDefs","FHIRdefs","displayLoaded","getData","openCursor","onsuccess","iterator","add","continue","FHIRDefinitions","fhirdefs","FSHTank","sushiImport","importText","loadAndCleanDatabase","defs","resolvedDependencies","all","packageId","updatedVersion","isAutomatic","body","_parsedBody$distTags","_parsedBody$distTags$","parsedBody","latest","getLatestVersionNumber","latestId","replaceLatestVersion","dep","filter","resolveDependencies","helperUpdate","databaseName","helperReturn","shouldUpdate","OpenIDBRequest","indexedDB","existingObjectStores","objectStoreNames","contains","close","onupgradeneeded","checkForDatabaseUpgrade","loadExternalDependenciesReturn","loadExternalDependencies","mergedEmpties","flatten","getAll","deleteObjectStore","cleanDatabase","shouldUnzip","newDependencies","unzipReturn","createObjectStore","sliceDependency","split","trimmedDep","trim","RawFSH","exportFHIR","sushiExport","sushiStats","utils","stats","gofshStats","getRandomPun","Type","runGoFSH","input","_configuration$config","_configuration$config2","reset","docs","isProcessableContent","processor","WildFHIR","lake","LakeOfFHIR","fisher","MasterFisher","fhirProcessor","FHIRProcessor","goFSHDependencies","replace","configuration","processConfig","join","dependenciesToAdd","addCoreFHIRVersionAndAutomaticDependencies","pkg","getResources","indent","fsh","gofshExport","FSHExporter","apiExport","proNum","pad","extNum","logNum","resNum","vsNum","csNum","instNum","invNum","invariants","mapNum","mappings","errNumMsg","numError","wrnNumMsg","padStart","numWarn","aWittyMessageInvolvingABadFishPun","padEnd","results","log","r","printGoFSHresults","runSUSHI","tank","rawFSHes","fillTank","structDef","fishForFHIR","Resource","outPackage","count","_instanceMeta","usage","profileNum","extentNum","logiclNum","resourcNum","valueSetsNumber","codeSystemsNum","instancesNumber","errorNumMsg","wrNumMsg","printSUSHIResults","p","toJSON","l","coreFHIRVersion","coreFHIRPackage","getCoreFHIRPackageIdentifier","hasDependency","AUTOMATIC_DEPENDENCIES","fhirVersions","some","startsWith","dependencyToAdd","dependenciesList","currentDependency","ignoreVersion","test","spacing","rightControls","position","leftControls","left","secondaryButton","lighterBlue","progressContainer","progress","buttonLeft","buttonRight","runIcon","dialogPaper","maxHeight","dialogActions","dialogActionsMessage","fontStyle","replacer","FSHControls","openExamples","setOpenExamples","openConfig","setOpenConfig","setCanonical","setVersion","setFhirVersion","setDependencies","isGoFSHIndented","setIsGoFSHIndented","isSUSHIRunning","setIsSUSHIRunning","isGoFSHRunning","setIsGoFSHRunning","isFetchingExample","setIsFetchingExample","currentExample","setCurrentExample","currentExampleName","setCurrentExampleName","_props$config3$fhirVe","at","handleCloseExamples","handleCloseConfig","onConfigChange","renderTree","nodes","TreeItem","nodeId","node","exampleMetadata","description","treeItem","renderItem","Grid","container","xs","resetLogMessages","onSUSHIClick","parsedDependencies","FSHOnly","fshText","jsonOutput","testid","CircularProgress","PlayArrow","onGoFSHClick","gofshInputStrings","gofshText","igResource","url","handleOpenExamples","LibraryBooksIcon","saveAll","handleOpenConfig","Settings","helperText","defaultValue","newCanonical","newVersion","select","newFhirVersion","MenuItem","dependencyString","FormControlLabel","control","Checkbox","checked","isIndented","FormHelperText","scroll","TreeView","treeView","defaultCollapseIcon","ExpandMoreIcon","defaultExpandIcon","ChevronRightIcon","onNodeSelect","endsWith","utf8Decoder","TextDecoder","responseReader","fetch","response","getReader","fshString","read","decode","exampleConfig","category","clipboard","writeText","AssignmentOutlinedIcon","root","blue","boxShadow","logo","toolbarBox","exitIcon","docButton","lightBlue","versionText","TopBar","AppBar","Toolbar","flexDirection","alignSelf","src","alt","m","StylesProvider","injectFirst","Typography","ExitToApp","fullHeightGrid","editorPane","resize","cursor","colors","resizeBlue","resizeCursor","collapsedMain","expandedMain","collapsedConsole","expandedConsole","darkerBlue","grey","createTheme","typography","overrides","MuiTooltip","tooltip","MuiButton","MuiIconButton","githubURL","defaultInfoMessage","defaultProblemMessage","infoMessages","convertManifest","childrenArr","element","replaceAll","getManifestFromGit","manifestJSON","json","createContext","urlParam","showNewFHIRText","setShowNewFHIRText","inputFSHText","setInputFSHText","inputFHIRText","setInputFHIRText","isWaitingForFHIROutput","setIsWaitingForFHIROutput","isWaitingForFSHOutput","setIsWaitingForFSHOutput","setExampleConfig","exampleFilePaths","setExampleFilePaths","leftWidth","setLeftWidth","isDragging","setIsDragging","configToShare","setConfigToShare","sharedConfig","setSharedConfig","onMouseUp","preventDefault","debouncedMove","clientX","newPercentage","innerWidth","getFileName","nameMap","nameWithCount","set","encodedFSH","promisedURL","sliced64","long_url","inflateSync","Buffer","from","decodeFSH","params","splitIndex","parsedConfig","fshContent","rawConfig","gistContent","values","files","truncated","raw_url","getGistContent","waitForFSH","fetchExamples","ThemeProvider","sushiOutput","fshOutput","Map","zip","JSZip","file","defWithId","defWithUntitledId","partition","_def$def","_def$id","_def$def2","generateAsync","blob","Provider","onTouchMove","touches","debounce","onMouseMove","onMouseLeave","flexBasis","onTouchStart","onTouchEnd","onMouseDown","onDoubleClick","ConsoleComponent"],"mappings":"kGAAA,SAASA,EAAoBC,GAC5B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBF,EAAM,KAEjD,MADAC,EAAEE,KAAO,mBACHF,CACP,CACAF,EAAoBK,KAAO,WAAa,MAAO,EAAI,EACnDL,EAAoBM,QAAUN,EAC9BO,EAAOC,QAAUR,EACjBA,EAAoBS,GAAK,I,oMCJV,SAASC,EAAUC,GAChC,OACEC,eAACC,IAAM,CAAAC,SAAA,CACLC,cAACC,IAAK,CAACC,KAAK,eAAeC,UAAWC,MACtCJ,cAACC,IAAK,CAACC,KAAK,YAAYC,UAAWC,MACnCJ,cAACC,IAAK,CAACC,KAAK,GAAGG,OAAK,EAACF,UAAWC,QAGtC,CCAoBE,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MAAM,2D,aCVnCC,IAASC,OACPZ,cAACa,IAAMC,WAAU,CAAAf,SACfC,cAACe,IAAU,CAACC,SAAS,IAAGjB,SACtBC,cAACL,EAAS,QAGdsB,SAASC,eAAe,SD+GpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAMC,IACLA,EAAaC,YAAY,IAE1BC,OAAOC,IACNC,QAAQD,MAAMA,EAAME,QAAQ,G,4VE7GpC,MAAMC,EAAYC,aAAYC,IAAK,CACjCC,WAAY,CACVC,MAAOF,EAAMG,QAAQC,OAAOC,MAC5BC,QAAS,OAEXC,SAAU,CACRC,MAAO,OACPN,MAAOF,EAAMG,QAAQM,KAAKC,QAC1BC,WAAY,QAEdC,QAAS,CACPC,gBAAiBb,EAAMG,QAAQC,OAAOU,UACtCC,aAAc,EACdC,QAAS,OACTC,eAAgB,gBAChBC,WAAY,SACZC,YAAa,KACbC,aAAc,gBAIH,SAASC,EAAUxD,GAChC,MAAMyD,EAAUxB,KACTyB,EAAWC,GAAgBC,oBAAS,IACpCC,EAAYC,GAAiBF,oBAAS,IACtCG,EAAUC,GAAeJ,oBAAS,IAClCK,EAAeC,GAAoBN,oBAAS,IAC5CO,EAASC,GAAcR,mBAAS,uBAChC,UAAES,EAAS,cAAEC,GAAiBC,GAAgBX,mBAAS,CAC5DS,WAAW,EACXC,cAAe,2BAEVE,EAAMC,GAAWb,sBACjBc,EAAUC,GAAef,sBACzBgB,EAAsBC,GAA2BjB,oBAAS,GAc3DkB,EAAiBA,KACrBnB,GAAa,GACbK,GAAY,GACZW,EAAY,IACZJ,EAAa,CAAEF,WAAW,EAAOC,cAAe,yBAA0B,EAGtES,EAAkBA,KACtBf,GAAY,GACZF,GAAc,EAAM,EAehBkB,EAAuBA,KAC3Bd,GAAiB,EAAM,EAuCnBe,EAAmBA,KACvBtB,GAAa,GACbG,GAAc,EAAM,EAOtB,OACE7D,eAAAiF,WAAA,CAAA/E,SAAA,CACEC,cAAC+E,IAAO,CAACC,MAAM,YAAYC,UAAU,MAAMC,OAAK,EAAAnF,SAC9CC,cAACmF,IAAU,CAACC,KAAK,YAAYC,UAAWhC,EAAQrB,WAAYsD,QAhD1CC,UAAa,IAADC,EAAAC,EAAAC,EAAAC,EAClC,IAAIC,EAMD,IAADC,EAAAC,EAAAC,EAAAC,EAJY,QAAZR,EAAA5F,EAAMqG,cAAM,IAAAT,GAAZA,EAAcU,WACF,QADWT,EACvB7F,EAAMqG,cAAM,IAAAR,GAAZA,EAAcU,UACF,QAAZT,EAAA9F,EAAMqG,cAAM,IAAAP,OAAA,EAAZA,EAAcU,YAAYC,QAAS,GACvB,QADwBV,EACpC/F,EAAMqG,cAAM,IAAAN,GAAZA,EAAcW,aAEdV,EAAUW,sBACRC,KAAKC,UAAU,CACbC,EAAe,QAAdb,EAAEjG,EAAMqG,cAAM,IAAAJ,OAAA,EAAZA,EAAcK,UACjBS,EAAe,QAAdb,EAAElG,EAAMqG,cAAM,IAAAH,OAAA,EAAZA,EAAcK,QACjBS,EAAe,QAAdb,EAAEnG,EAAMqG,cAAM,IAAAF,OAAA,EAAZA,EAAcK,YACjBS,EAAe,QAAdb,EAAEpG,EAAMqG,cAAM,IAAAD,OAAA,EAAZA,EAAcM,eAEjB,KACA1G,EAAMkH,WACRC,SAAS,UAEXnB,EAAUW,sBAAY3G,EAAMkH,WAAWC,SAAS,UAElD,MAAMC,EAAY,2CAA0CpB,IACtDqB,QAAkBC,YAAaF,GACrC,IAA8B,IAA1BC,EAAUE,YAvDdzD,GAAc,GACdgB,QAwDO,CAEL,MAAM0C,EAAaH,EAAU7C,KAAKiD,MAAM,IAExChD,EADqB,2CAA0C+C,KAE/D7D,GAAa,GACbS,EAAW,qBACXS,GAAwB,EAC1B,GAeyF1E,SACnFC,cAACsH,IAAQ,CAACC,SAAS,QAAQC,MAAO,CAAEC,UAAW,wBAGnD5H,eAAC6H,IAAM,CAACC,KAAMrE,EAAWsE,QAAS/C,EAAkB,kBAAgB,oBAAoBgD,SAAS,KAAKC,WAAS,EAAA/H,SAAA,CAC7GC,cAAC+H,IAAW,CAACrI,GAAG,oBAAmBK,SAAC,UACpCF,eAACmI,IAAa,CAAAjI,SAAA,CACZC,cAACiI,IAAiB,CAAAlI,SAAC,iDACnBF,eAACqI,IAAG,CAAC7C,UAAWhC,EAAQV,QAAQ5C,SAAA,CAC9BC,cAACkI,IAAG,CAACL,SAAS,MAAM1E,aAAa,WAAWgF,SAAS,SAAQpI,SAC1DqE,IAEHpE,cAAC+E,IAAO,CAACC,MAAOjB,EAASkB,UAAU,MAAMC,OAAK,EAAAnF,SAC5CC,cAACoI,kBAAe,CAAC5F,KAAM4B,EAAMiE,OAAQA,IAAMrE,EAAW,eAAejE,SACnEC,cAACmF,IAAU,CAACqC,MAAO,CAAE1E,aAAc,MAAO/C,SACxCC,cAACsI,IAAQ,gBAMnBzI,eAAC0I,IAAa,CAAAxI,SAAA,CACXyE,GACCxE,cAACwI,IAAM,CAAClD,QAASZ,EAAgBzC,MAAM,UAAUuF,MAAO,CAAEiB,MAAO,QAAS1I,SAAC,0BAI7EC,cAACkI,IAAG,CAACV,MAAO,CAAEkB,KAAM,QAASC,QAAQ,KACrC3I,cAACwI,IAAM,CAAClD,QAAST,EAAkB5C,MAAM,UAASlC,SAAC,eAKvDF,eAAC6H,IAAM,CAACC,KAAMhE,EAAUiE,QAASjD,EAAiB,kBAAgB,qBAAqBkD,SAAS,KAAKC,WAAS,EAAA/H,SAAA,CAC5GC,cAAC+H,IAAW,CAACrI,GAAG,qBAAoBK,SAAC,oBACpC0D,GACCzD,cAACgI,IAAa,CAACR,MAAO,CAAEvF,MAAOF,IAAMG,QAAQC,OAAOyG,KAAM7I,SAAC,gFAI7DF,eAACmI,IAAa,CAAAjI,SAAA,CAAC,WACJ,IACTC,cAAC6I,IAAI,CAACnJ,GAAG,UAAUoJ,KAAK,2BAA2BC,OAAO,SAAQhJ,SAAC,SAE3D,IAAI,mEAEZC,cAACgJ,IAAS,CAACtJ,GAAG,cAAcuJ,MAAM,WAAWnB,WAAS,EAACoB,SAtIvCC,IAAW,IAADC,EAChC,MAAMC,EAAmE,QAA7DD,EAAGD,EAAMJ,OAAOO,MAAM5I,MAAM,yCAAiC,IAAA0I,OAAA,EAA1DA,EAA6D,GACxEC,GACF9E,EAAa,0CAAyC8E,IACxD,OAoIIxJ,eAAC0I,IAAa,CAACf,MAAO,CAAE+B,OAAQ,EAAGC,MAAO,GAAIzJ,SAAA,CAC5CC,cAACwI,IAAM,CAAClD,QAASX,EAAiB1C,MAAM,UAASlC,SAAC,WAGlDC,cAACkI,IAAG,CAACV,MAAO,CAAEkB,KAAM,QAASC,QAAQ,KACrC3I,cAACoI,kBAAe,CAAC5F,KAAM5C,EAAMkH,UAAWuB,OA5D1BoB,KACpBtF,EAAa,CAAEF,WAAW,EAAMC,cAAe,2BAA4B,EA2DNsD,MAAO,CAAEiB,MAAO,QAAS1I,SACtFC,cAACwI,IAAM,CAACvG,MAAOgC,EAAY,YAAc,UAAUlE,SAAEmE,MAEvDlE,cAACwI,IAAM,CAACvG,MAAM,UAAUqD,QAxHDoE,KACzBpF,GACFK,IACAN,EAAQC,GACRf,GAAa,GACbS,EAAW,qBACXS,GAAwB,IAExBX,GAAiB,EACnB,EA+G+D0D,MAAO,CAAEiB,MAAO,QAAS1I,SAAC,kCAKvFF,eAAC6H,IAAM,CAACC,KAAM9D,EAAe+D,QAAShD,EAAsB,kBAAgB,qBAAqBiD,SAAS,KAAI9H,SAAA,CAC5GC,cAAC+H,IAAW,CAACrI,GAAG,qBAAoBK,SAAC,6BACrCC,cAACgI,IAAa,CAAAjI,SACZC,cAACiI,IAAiB,CAAAlI,SAAC,6EAErBC,cAACuI,IAAa,CAAAxI,SACZC,cAACwI,IAAM,CAAClD,QAASV,EAAsB3C,MAAM,UAAU0H,WAAS,EAAA5J,SAAC,0BAO3E,C,mCC5MA6J,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KACRA,EAAQ,KAIRC,IAAWC,iBAAiB,MAAO,CACjCC,KAAM,CACJC,YAAa,MAEfC,MAAO,CAEL,CACEC,MAAO,0BACPC,MAAO,QAET,CACED,MACE,oOACFC,MAAO,WAET,CAIED,MACE,qMACFC,MAAO,OAET,CACED,MAAO,gEACPC,MAAO,OAET,CACED,MAAO,iDACPE,KAAM,eACND,MAAO,QAET,CACED,MAAO,eACPC,MAAO,OAET,CACED,MAAO,kGACPC,MAAO,QAET,CAEED,MAAO,2BACPC,MAAO,UAET,CAEED,MAAO,8BACPC,MAAO,UAET,CACED,MAAO,qBACPC,MAAO,UAET,CACED,MAAO,UACPC,MAAO,UAET,CACED,MAAO,OACPC,MAAO,UAMT,CAAED,MAAO,WAAYC,MAAO,WAC5B,CAAED,MAAO,SAAUC,MAAO,UAAWE,KAAK,GAE1C,CAAEH,MAAO,OAAQC,MAAO,UAAWG,KAAM,YAE3CC,aAAc,CACZ,CACEL,MAAO,KACPM,KAAK,EACLL,MAAO,SAGXM,QAAS,CACP,CAAEP,MAAO,UAAWC,MAAO,UAAWG,KAAM,SAC5C,CAAEJ,MAAO,KAAMC,MAAO,cAI1B,MAAMO,EAAc,IAEd7I,EAAYC,aAAYC,IAAK,CACjC4I,IAAK,CACHC,OAAQ,QAEVC,OAAQ,CACNC,WAAY,YACZ7I,MAAOF,EAAMG,QAAQC,OAAOC,MAC5B2I,WAAYhJ,EAAMG,QAAQC,OAAO6I,WACjC3I,QAAS,MACTa,YAAa,OACb0H,OAAQ,OACR7H,QAAS,OACTC,eAAgB,gBAChBiI,WAAYlJ,EAAMmJ,YAAYC,OAAO,CAAC,SAAU,SAAU,CACxDC,OAAQrJ,EAAMmJ,YAAYE,OAAOC,MACjCC,SAAUvJ,EAAMmJ,YAAYI,SAASC,iBAGzCC,YAAa,CACXjJ,MAAQ,4BACR0I,WAAYlJ,EAAMmJ,YAAYC,OAAO,CAAC,SAAU,SAAU,CACxDC,OAAQrJ,EAAMmJ,YAAYE,OAAOK,QACjCH,SAAUvJ,EAAMmJ,YAAYI,SAASI,iBAEvCC,YAAajB,GAEfkB,YAAa,CACXC,WAAY,OACZC,MAAO,OAGPC,WAAY,SACZ5D,SAAU,SACVhF,aAAc,YAEhB6I,kBAAmB,CACjBC,aAAc,QAEhBC,cAAe,CACbjJ,WAAY,SACZF,QAAS,QAEXf,WAAY,CACVC,MAAOF,EAAMG,QAAQC,OAAOC,MAC5BC,QAAS,OAEX8J,OAAQ,CACN5J,MAAOmI,EACP0B,WAAY,GAEdC,YAAa,CACX9J,MAAOmI,EACP4B,OAAQ,OAER1B,OAAQ,6BACR2B,IAAK,SAEPC,2BAA4B,CAC1B5B,OAAQ,+BAEV6B,aAAc,CACZ1J,QAAS,OACTE,WAAY,SACZD,eAAgB,aAEhBf,MAAOF,EAAMG,QAAQC,OAAOC,MAC5B2I,WAAYhJ,EAAMG,QAAQC,OAAO6I,WACjCJ,OAAQ,OACR8B,UAAW,QAEbC,iBAAkB,CAChBtK,QAAS,MACTJ,MAAOF,EAAMG,QAAQC,OAAOC,MAC5B2I,WAAYhJ,EAAMG,QAAQ0K,QAAQC,KAClC,UAAW,CACT9B,WAAYhJ,EAAMG,QAAQ0K,QAAQE,OAEpChK,aAAc,EACd8H,OAAQ,OACRrI,MAAO,OACPwK,SAAU,QAEZC,QAAS,CACPC,SAAU,EACV1K,MAAO,OACP0I,WAAYlJ,EAAMmJ,YAAYC,OAAO,CAAC,SAAU,SAAU,CACxDC,OAAQrJ,EAAMmJ,YAAYE,OAAOC,MACjCC,SAAUvJ,EAAMmJ,YAAYI,SAASC,iBAGzC2B,aAAc,CACZ3K,MAAQ,qBACR0I,WAAYlJ,EAAMmJ,YAAYC,OAAO,CAAC,SAAU,SAAU,CACxDC,OAAQrJ,EAAMmJ,YAAYE,OAAOK,QACjCH,SAAUvJ,EAAMmJ,YAAYI,SAASI,iBAEvCC,YAAa,OAIF,SAASwB,EAAoBvN,GAC1C,MAAMyD,EAAUxB,IACVuL,EAAyBC,qBAAWC,MACnCC,EAAYC,GAAiBhK,oBAAS,GAEvCiK,EAAmBA,KACvBD,GAAc,EAAK,EAGfE,EAAoBA,KACxBF,GAAc,EAAM,EAQtB,MAAMG,EAAmB,SAACC,EAAM3E,EAAO3D,GAAyB,IAAhBkC,EAAKqG,UAAAxH,OAAA,QAAAyH,IAAAD,UAAA,GAAAA,UAAA,GAAG,CAAC,EACvD,OACE7N,cAAC+E,IAAO,CAACC,MAAO+I,qBAAW9E,GAAQhE,UAAU,MAAMC,OAAK,EAAAnF,SACtDC,cAACmF,IAAU,CAACC,KAAM6D,EAAO5D,UAAWhC,EAAQrB,WAAY,aAAYiH,EAAO3D,QAASA,EAAQvF,SAC1FC,cAAC4N,EAAI,CAACrG,SAAS,QAAQC,MAAOA,OAItC,EAgDA,OACE3H,eAACqI,IAAG,CAAC7C,UAAWhC,EAAQsH,IAAI5K,SAAA,CAC1BF,eAAA,OACEwF,UAAW2I,YAAK3K,EAAQwH,OAAQ,CAC9B,CAACxH,EAAQmI,aAAc5L,EAAMqO,cAAgBV,IAC5CxN,SAAA,CAEHC,cAAA,OAAKgF,MAAOpF,EAAMwF,KAAMC,UAAWhC,EAAQuI,YAAY7L,SACpDH,EAAMwF,OAnDXvF,eAAA,OAAKwF,UAAWhC,EAAQ6I,cAAcnM,SAAA,CACpCF,eAAA,OAAKwF,UAAWhC,EAAQ2I,kBAAkBjM,SAAA,CACxB,QAAfH,EAAMsO,OAAmBtO,EAAMuO,YAAcnO,cAACoD,EAAS,CAAC0D,UAAWlH,EAAM0J,MAAOrD,OAAQrG,EAAMqG,SAC9FrG,EAAMwO,MAAQT,EAAiBrF,IAAU,QAAQ,SACjD1I,EAAMyO,MAAQV,EAAiBW,IAAS,OAAQ1O,EAAMyO,MACtDzO,EAAM2O,QAAUZ,EAAiBa,IAAQ,SAAU5O,EAAM2O,WAE3D3O,EAAMqO,eAAiBV,GACtBvN,cAACmF,IAAU,CAACC,KAAK,SAASC,UAAWhC,EAAQsJ,iBAAkB,aAAW,SAASrH,QAASmI,EAAiB1N,SAC3GC,cAACyO,IAAW,YA8ClBzO,cAAC0O,eAAe,CACdrJ,UAAW2I,YAAK,oBAAqBpO,EAAMqO,cAAgB5K,EAAQ2J,QAAS,CAC1E,CAAC3J,EAAQ6J,cAAetN,EAAMqO,cAAgBV,IAEhDjE,MAAO1J,EAAM+O,YACbC,QAAS,CACPV,KAAMtO,EAAMsO,KACZnM,MAAO,WACP8M,YAAajP,EAAMiP,YACnBC,eAAgB,UAChBC,mBAAmB,EACnBC,aAAa,EACbC,YAAY,EACZC,SAAUtP,EAAMuO,WAChBgB,QAAS,CAAC,yBAA0B,yBACpCC,UAAW,CACTC,IAAMC,IAGJA,EAAGC,iBAAiB,KAAK,EAE3B,SAAU,gBACV,QAAS,gBACT,SAAWD,IACTA,EAAGE,SAASF,EAAGG,YAAY,IAIjCvG,SAAUA,CAACwG,EAAQC,EAAMrG,KApG/B,IAAoB9G,IAqGD8G,EApGjB1J,EAAMgQ,gBAAgBpN,EAoGC,IAGpB5C,EAAMqO,cArEPpO,eAACgQ,IAAM,CACLxK,UAAWhC,EAAQ8I,OACnB,cAAa,gBACb2D,QAAQ,aACRC,OAAO,QACPpI,KAAM4F,EACNlK,QAAS,CACP2M,MAAOhC,YAAK3K,EAAQgJ,YAAae,GAA0B/J,EAAQmJ,6BACnEzM,SAAA,CAEFC,cAAA,OAAKqF,UAAWhC,EAAQoJ,aAAa1M,SACnCC,cAACwI,IAAM,CACLpD,KAAK,WACL,aAAW,WACXC,UAAWhC,EAAQsJ,iBACnBrH,QAASoI,EAAkB3N,SAE3BC,cAACiQ,IAAY,QAGhBrQ,EAAMqO,oBAoDf,C,mCC9UA,0EACMiC,EAAQ,IAAIC,EADEvG,EAAQ,KAASuG,aACPC,4CAEvB7K,eAAe2B,EAAaF,GACjC,OAAO,IAAIqJ,SAAS9Q,IAClB2Q,EACGI,QAAQtJ,GACR1F,MAAK,SAAUiP,GACdhR,EAAQ,CAAE6E,KAAMmM,EAAOnM,KAAM+C,aAAa,GAC5C,IACC1F,OAAM,SAAUC,GAObnC,EAAQ,CAAE6E,UAAM0J,EAAW3G,aAAa,GAE5C,GAAE,GAER,CAEO5B,eAAeiL,EAAWC,GAC/B,MAAMC,EAAY,kBAAiBD,EAAWjO,OAC9C,OAAO,IAAI6N,SAAS9Q,IAClB2Q,EACGS,OAAOD,GACPpP,MAAK,SAAUiP,GACdhR,EAAQgR,EACV,IACC9O,OAAM,SAAUC,GACfC,QAAQD,MAAMA,EAChB,GAAE,GAER,C,mCCnCA,6GAGe,SAASkP,EAAwBhR,GAC9C,OACEC,eAAC6H,IAAM,CAACC,KAAM/H,EAAMiR,OAAQjJ,QAAShI,EAAMkR,iBAAkB,kBAAgB,6BAA4B/Q,SAAA,CACvGF,eAACkI,IAAW,CAACrI,GAAG,mCAAkCK,SAAA,CAAC,UAAQH,EAAMoF,SACjEhF,cAACgI,IAAa,CAAAjI,SACZF,eAACoI,IAAiB,CAAAlI,SAAA,CAAC,mCACgBH,EAAMmR,KAAK,uCAGhDlR,eAAC0I,IAAa,CAAAxI,SAAA,CACZC,cAACwI,IAAM,CAAClD,QAAS1F,EAAMkR,iBAAkB7O,MAAM,UAAU0H,WAAS,EAAA5J,SAAC,WAGnEC,cAACwI,IAAM,CAAClD,QAAS1F,EAAMoR,aAAc/O,MAAM,YAAWlC,SAAC,gBAM/D,C,mCCtBA,yKAUA,MAAM8B,EAAYC,aAAYC,IAAK,CACjCkP,gBAAiB,CACfC,UAAW,SACXtG,OAAQ,QAEVuG,OAAQ,CACNlP,MAAOF,EAAMG,QAAQC,OAAOC,MAC5B2I,WAAYhJ,EAAMG,QAAQ0K,QAAQC,KAClC,UAAW,CACT9B,WAAYhJ,EAAMG,QAAQ0K,QAAQwE,MAEpC9E,OAAQ,kBACR/E,SAAU,OACVhF,MAAO,QAET8O,KAAM,CACJhP,QAAS,MACTa,YAAa,MACboO,cAAe,MACf/J,SAAU,QAEZgK,cAAe,CACbC,WAAY,MACZF,cAAe,MACfG,OAAQ,GAEVC,SAAU,CACR3G,WAAYhJ,EAAMG,QAAQC,OAAOwP,aACjCH,WAAY,MACZF,cAAe,MACfM,UAAW,MACXC,aAAc,MACd3O,YAAa,MAEbuO,OAAQ,EACR,UAAW,CACT1G,WAAYhJ,EAAMG,QAAQC,OAAOU,WAInCE,QAAS,QACTgJ,WAAY,SACZ5D,SAAU,SACVhF,aAAc,YAEhB2O,iBAAkB,CAChB/G,WAAYhJ,EAAMG,QAAQC,OAAO4P,WACjC9P,MAAOF,EAAMG,QAAQC,OAAOC,MAC5B,UAAW,CACT2I,WAAYhJ,EAAMG,QAAQC,OAAO6P,cAGrCC,WAAY,CACV5P,QAAS,MACTa,YAAa,QAEfgP,SAAU,CACRjQ,MAAOF,EAAMG,QAAQ0K,QAAQC,KAC7BsF,cAAe,SACf5K,SAAU,OACVrE,YAAa,MACb+I,aAAc,OAEhBmG,cAAe,CACbnQ,MAAOF,EAAMG,QAAQC,OAAOyG,KAE9ByJ,UAAW,CACTnP,YAAa,YAIXoP,EAAgBC,IAOpB,GAAyB,aAArBA,EAAIC,cAAoD,eAArBD,EAAIC,aACzC,OAAOD,EAAIC,aACN,GAAyB,wBAArBD,EAAIC,aACb,GAAuB,mBAAnBD,EAAIE,WAAiC,CACvC,GAAiB,aAAbF,EAAIG,KACN,MAAO,WACF,GAAiB,YAAbH,EAAIG,KACb,MAAO,eAEX,MAAO,GAAuB,eAAnBH,EAAIE,WAA6B,CAC1C,GAAiB,iBAAbF,EAAIG,MAAwC,cAAbH,EAAII,KACrC,MAAO,YACF,GAAI,CAAC,WAAY,eAAgB,iBAAkB,WAAWC,SAASL,EAAIG,MAChF,MAAO,SAEX,CAKF,OAAwB,MAApBH,EAAIC,aACC,WAIF,IAAI,EAGPK,EAAoBN,GACpBA,EAAI7S,GACC6S,EAAI7S,GAET6S,EAAIC,aAIE,eAAcD,EAAIC,aAAaM,UAAUP,EAAIC,aAAaO,YAAY,KAAO,KAGhF,WAKHC,EAAsBC,GACT,IACZA,EAAYC,YACZD,EAAYE,cACZF,EAAYG,YACZH,EAAYI,aACZJ,EAAYK,aACZL,EAAYM,aACZN,EAAYO,aAEDC,KAAKlB,IAAG,CACtBC,aAAcF,EAAaC,GAC3B7S,GAAImT,EAAiBN,GACrBA,IAAK/L,KAAKC,UAAU8L,EAAK,KAAM,OAIpB,SAASmB,EAAW9T,GACjC,MAAMyD,EAAUxB,KACT8M,EAAagF,GAAkBnQ,mBAAS,KACxCoQ,EAAiBC,GAAsBrQ,mBAAS,CAAC,CAAEgP,aAAc,KAAM9S,GAAI,WAAY6S,IAAK,SAC7F,eAAEuB,EAAgBlE,gBAAiBmE,GAAoBnU,GACtDoU,EAAYC,GAAiBzQ,mBAAS,IACtC0Q,EAAgBC,GAAqB3Q,mBAAS,KAC9C4Q,EAAwBC,GAA6B7Q,oBAAS,GAErE8Q,qBAAU,KAER,GAAI1U,EAAM2U,cAAgBC,kBAAQ5U,EAAM4C,KAAM,CAAC,KAAM,CAEnD,IAAIiS,EADJX,GAAe,GAEf,IACEW,EAAcjO,KAAKkO,MAAM9U,EAAM4C,KACjC,CAAE,MAAOrD,GACPsV,EAAc,CACZvB,SAAU,GACVC,WAAY,GACZC,SAAU,GACVC,UAAW,GACXC,UAAW,GACXC,UAAW,GACXC,YAAa,GAEjB,CACA,MAAMmB,EAAkB3B,EAAmByB,GAC3CZ,EAAmBc,GACnBV,EAAc,GACdN,EAAegB,EAAgBtO,OAAS,EAAIsO,EAAgB,GAAGpC,IAAM,IACrEwB,EAAgBY,EAClB,MAAW/U,EAAMgV,YACfjB,EAAe,MACfE,EAAmB,IACrB,GACC,CAACjU,EAAM4C,KAAM5C,EAAM2U,YAAa3U,EAAMgV,UAAWb,EAAiBD,IAErE,MAyDMe,EAAgBA,KACpB,MAAMC,EAAc,IAAIlB,GACxBkB,EAAY1K,KAAK,CAAEoI,aAAc,KAAM9S,GAAI,WAAY6S,IAAK,OAC5D0B,EAAca,EAAYzO,OAAS,GACnCwN,EAAmBiB,GACnBnB,EAAe,MACf/T,EAAMgQ,gBAAgBkF,EAAY,EAG9BC,EAAuBA,KAC3B,MAAMC,EAAQhB,EACRc,EAAc,IAAIlB,GASxB,GARAkB,EAAYG,OAAOD,EAAO,GACC,IAAvBF,EAAYzO,QAEdyO,EAAY1K,KAAK,CAAEoI,aAAc,KAAM9S,GAAI,WAAY6S,IAAK,OAE9DsB,EAAmBiB,GAGfE,GAAShB,EAAY,CACvB,IAAIkB,EAAgB,EAChBF,EAAQhB,IACVkB,EAAgBlB,EAAa,GAE/BC,EAAciB,GACd,MAAMC,EAAoBL,EAAYzO,OAAS,EAAIyO,EAAYI,GAAe3C,IAAM,KACpFoB,EAAewB,EACjB,CAGA,MAAMC,EAAY,IAAIlB,GAClBA,EAAetB,SAASoC,IAE1BI,EAAUH,OAAOf,EAAemB,QAAQL,GAAQ,GAGlD,MAAMM,EAAgBF,EAAU3B,KAAK8B,GAAOA,EAAIP,EAAQO,EAAIA,EAAI,IAChEpB,EAAkBmB,GAElBjB,GAA0B,GAC1BzU,EAAMgQ,gBAAgBkF,EAAY,EAO9BU,EAAgCA,KACpCnB,GAA0B,EAAM,EAoC5BoB,EAAqBA,KACzB,MAAMC,EAAQ,CACZ,WACA,aACA,iBACA,YACA,YACA,cACA,YACA,gBAEIC,EAAUC,kBAAQhC,GAAkBiC,GACpCA,GAAOA,EAAIrD,aAAsB,GAAEqD,EAAIrD,gBACpC,iBAGT,OAAOsD,OAAOxW,KAAKqW,GAChBI,MAAK,CAACC,EAAGC,IAAMP,EAAML,QAAQW,GAAKN,EAAML,QAAQY,KAChDxC,KAAKyC,GAEFrW,eAACsW,IAAI,CAAChW,UAAU,MAAgBkF,UAAWhC,EAAQgO,KAAKtR,SAAA,CACtDC,cAAA,OAAKqF,UAAWhC,EAAQ4O,WAAWlS,SAAEmW,IACpCP,EAAQO,GACNH,MAAK,CAACC,EAAGC,KACR,MAAMG,EAAMJ,EAAEtW,GAAKsW,EAAEtW,GAAK,WACpB2W,EAAMJ,EAAEvW,GAAKuW,EAAEvW,GAAK,WAC1B,OAAO0W,EAAIE,cAAgBD,EAAIC,eAAiB,EAAIF,EAAIE,cAAgBD,EAAIC,cAAgB,EAAI,CAAC,IAElG7C,KAAI,CAAClB,EAAKgD,KACT,MAAMgB,EAAe3C,EAAgByB,QAAQ9C,GACvCiE,EAAUtC,EAAetB,SAAS2D,GACxC,OACE1W,eAAC4W,IAAQ,CACPtF,QAAM,EAENnM,OAAU,OAAHuN,QAAG,IAAHA,OAAG,EAAHA,EAAK7S,KAAM,WAClB,cAAc,GAAEwW,UAChB7Q,UAAW2I,YACT3K,EAAQqO,SACR8E,GAAWnT,EAAQkO,cACnBgF,IAAiBvC,GAAc3Q,EAAQyO,kBAEzCxM,QAASA,KACP2O,EAAcsC,GACd5C,EAAepB,EAAIA,IAAI,EACvBxS,SAAA,CAEDmU,EAAetB,SAAS2D,GACvBvW,cAAC+E,IAAO,CAACC,MAAM,eAAeC,UAAU,MAAMC,OAAK,EAAAnF,SACjDC,cAAC0W,IAAY,CAACrR,UAAW2I,YAAK3K,EAAQ6O,SAAU7O,EAAQ+O,mBAG1DpS,cAAA,QAAMqF,UAAWhC,EAAQgP,aAEvB,OAAHE,QAAG,IAAHA,OAAG,EAAHA,EAAK7S,KAAM,aApBP6V,EAqBI,MAnCQW,IAwC7B,EAcAS,EAAe/C,EAAgBvN,OAAS,EAAIuN,EAAgBI,GAAYzB,IAAM,KAC9EnN,EAAQ,GAAEwO,EAAgBvN,OAAS,EAAIuN,EAAgBI,GAAYtU,GAAK,aAE9E,OACEG,eAAAiF,WAAA,CAAA/E,SAAA,CACEC,cAACmN,IAAmB,CAClB/H,KAAO,cAAaA,IACpBkE,MAAOqN,EACPhI,YAAaA,EACbiB,gBAjOmBpN,IAEvB,GAAI5C,EAAMgV,UAAW,OAGrB,MAAME,EAAc,IAAIlB,GAGxB,IAEE,MAAMgD,EAAsB,KAATpU,EAAc,CAAC,EAAIgE,KAAKkO,MAAMlS,GAEjD,GAAI0R,EAAetB,SAASoB,GAAa,CACvC,MAAMoB,EAAY,IAAIlB,GACtBkB,EAAUH,OAAOf,EAAemB,QAAQrB,GAAa,GACrDG,EAAkBiB,EACpB,CAGKxB,EAAgBI,KACnBc,EAAYd,GAAc,CACxBxB,aAAcF,EAAasE,GAC3BlX,GAAImT,EAAiB+D,KAKpBhD,EAAgBI,IAAe4C,EAAWpE,eAAiBoB,EAAgBI,GAAYxB,eAC1FsC,EAAYd,GAAYxB,aAAeF,EAAasE,IAIjDhD,EAAgBI,IAAe4C,EAAWlX,KAAOkU,EAAgBI,GAAYtU,KAChFoV,EAAYd,GAAYtU,GAAKmT,EAAiB+D,GAElD,CAAE,MAAOzX,GAEP,IAAK+U,EAAetB,SAASoB,GAAa,CACxC,MAAMoB,EAAY,IAAIlB,GACtBkB,EAAUhL,KAAK4J,GACfG,EAAkBiB,EACpB,CACF,CAGIN,EAAYd,KACdc,EAAYd,GAAYzB,IAAM/P,GAEhCqR,EAAmBiB,GACnBlV,EAAMgQ,gBAAgBkF,GAGF,OAAhBnG,GACFgF,EAAenR,EACjB,EA4KI0L,KAAM,mBACNW,YACEjP,EAAMgV,UACF,aACA,wGAEN3G,aA3BeA,IAEjBpO,eAAAiF,WAAA,CAAA/E,SAAA,CACEC,cAACwI,IAAM,CAACnD,UAAWhC,EAAQ8N,OAAQ0F,UAAW7W,cAAC8W,IAAG,IAAKxR,QAASuP,EAAc9U,SAAC,oBAG/EC,cAAA,OAAKqF,UAAWhC,EAAQ4N,gBAAgBlR,SAAE0V,SAsB1CtH,YAAY,EACZI,OArI+BwI,KACnC1C,GAA0B,EAAK,EAqI3BhG,KAAMA,IA9HO2I,EAACzE,EAAK0E,KAAiB,IAADC,EAAAC,EACvC,IAAIC,EACJ,IACEA,EAAc5Q,KAAKkO,MAAMnC,EAC3B,CAAE,MACiE,CAEnE8E,IAAUC,OACR,IAAIC,KAAK,CAAChF,IACC,QAAX2E,EAAAE,SAAW,IAAAF,GAAXA,EAAa1E,cAA2B,QAAf2E,EAAIC,SAAW,IAAAD,GAAXA,EAAazX,GACrC,GAAE0X,EAAY5E,gBAAgB4E,EAAY1X,UAC1C,GAAE0F,SACR,EAkHe4R,CAAWL,KAExBvC,GAjHqBoD,MACxB,MAAMC,EAAc7D,EAAgBI,GACpC,IAAKyD,EACH,OAEF,MAAM9E,EAAO8E,EAAYjF,cAAgB,eACnC9S,EAAK+X,EAAY/X,IAAM,WAC7B,OACEM,cAAC4Q,IAAuB,CACtB5L,MAAO,YACP+L,KAAO,GAAE4B,KAAQjT,IACjBmR,OAAQuD,EACRtD,iBAAkB0E,EAClBxE,aAAc+D,GACd,EAmGyByC,KAGjC,C,mCC3aA,wFAKe,SAASE,EAAU9X,GAChC,MAAO+X,EAAiBC,GAAsBpU,oBAAS,GAEjDqU,EAAwBA,KAC5BD,GAAoBD,EAAgB,EAYtC,OACE9X,eAAAiF,WAAA,CAAA/E,SAAA,CACEC,cAACmN,IAAmB,CAClB/H,KAAM,MACN+I,YAAY,EACZ7E,MAAO1J,EAAM4C,KACbmM,YAAa/O,EAAM+O,YACnBiB,gBAAiBhQ,EAAMgQ,gBACvB1B,KAAM,MACNW,YAAajP,EAAMgV,UAAY,aAAe,4BAC9CrG,OAAQsJ,EACRxJ,KAfa2I,KACjBK,IAAUC,OAAO,IAAIC,KAAK,CAAC3X,EAAM4C,OAAQ,UAAU,EAe/CyD,OAAQrG,EAAMqG,SAEf0R,GACC3X,cAAC4Q,IAAuB,CACtB5L,MAAO,iBACP+L,KAAM,UACNF,OAAQ8G,EACR7G,iBAAkB+G,EAClB7G,aA7BqB+D,KAC3B6C,GAAmB,GACnBhY,EAAM+T,eAAe,GAAG,MAgC5B,C,mCC9CA,6GAKA,MAAM9R,EAAYC,aAAYC,IAAK,CACjC+V,gBAAiB,CACf/M,WAAYhJ,EAAMG,QAAQC,OAAO6P,YACjCpH,OAAQ,OACRmN,UAAW,aACXhV,QAAS,QACTE,WAAY,SACZD,eAAgB,QAElB2H,IAAK,CACHzH,YAAa,OACbjB,MAAOF,EAAMG,QAAQC,OAAOC,MAC5B2I,WAAYhJ,EAAMG,QAAQC,OAAO6P,YACjCpH,OAAQ,oBACRzC,SAAU,SACV4P,UAAW,cAEb5G,OAAQ,CACNxF,YAAa,OACb1J,MAAOF,EAAMG,QAAQC,OAAOC,MAC5B4V,cAAe,OACf3V,QAAS,GAEX4V,eAAgB,CACd5V,QAAS,EACTJ,MAAOF,EAAMG,QAAQC,OAAOC,MAC5B4V,cAAe,QAEjBE,WAAY,CACV3V,MAAO,OACPN,MAAOF,EAAMG,QAAQC,OAAOC,MAC5BC,QAAS,GAEX8V,IAAK,CACH1G,OAAQ,OAEV2G,OAAQ,CACN,gBAAiB,MACjB,eAAgB,QAChB,eAAgB,MAChB,YAAa,OACbxN,OAAQ,OACR1H,YAAa,EACb+I,aAAc,EACdlB,WAAY,UACZ,cAAe,SACfhI,QAAS,OACTsV,WAAY,EACZ,kBAAmB,SACnBhW,QAAS,OAIE,SAASiW,EAAQ1Y,GAC9B,MAAMyD,EAAUxB,KACT0W,EAAcC,GAAmBhV,oBAAS,IAC3C,aAAEiV,EAAY,iBAAEC,GAAqB9Y,EAE3C0U,qBAAU,KAIJmE,GACFC,GAAiB,EACnB,GACC,CAACD,EAAcC,IAgBlB,OACE7Y,eAAAiF,WAAA,CAAA/E,SAAA,CACEF,eAACqI,IAAG,CAAC7C,UAAWhC,EAAQyU,gBAAgB/X,SAAA,CACtCC,cAACmF,IAAU,CACTG,QAlBoBqT,KAC1B/Y,EAAM8Y,kBAAkB9Y,EAAMgZ,cAAc,EAkBtC,aAAYhZ,EAAMgZ,cAAgB,mBAAqB,iBACvDvT,UAAWhC,EAAQ6U,WAAWnY,SAE7BH,EAAMgZ,cAAgB5Y,cAAC6Y,IAAU,IAAM7Y,cAAC8Y,IAAU,MAErD9Y,cAACwI,IAAM,CAAClD,QApBayT,KACzBP,GAAgB,GAChB5Y,EAAM8Y,kBAAiB,EAAK,EAkBarT,UAAWhC,EAAQ8N,OAAOpR,SAC7DC,cAAA,KACEwH,MAAO,CACLwR,aAAcpZ,EAAMgZ,gBAAkBL,EAAe,kBAAoB,OACzE9G,OAAQ,KACR1R,SACH,cAIHF,eAAC2I,IAAM,CAAClD,QAzBa2T,KACzBT,GAAgB,GAChB5Y,EAAM8Y,kBAAiB,EAAK,EAuBarT,UAAWhC,EAAQ4U,eAAelY,SAAA,CACrEC,cAAA,KACEwH,MAAO,CACLwR,aACEpZ,EAAMgZ,eAAiBL,EAClB,aAAa3Y,EAAM6Y,aAAyB7Y,EAAMsZ,aAAhB,UACnC,OACNzH,OAAQ,KACR1R,SACH,aAGDC,cAAA,OACEqF,UAAWhC,EAAQ+U,OACnB5Q,MAAO,CAAE2R,YAAc,GAAGvZ,EAAM6Y,aAAyB7Y,EAAMsZ,aAAhB,WAAiCnZ,SAE/EH,EAAM6Y,qBAIbzY,cAACkI,IAAG,CAACV,MAAO,CAAEzE,QAASnD,EAAMgZ,cAAgB,QAAU,QAAUvT,UAAWhC,EAAQsH,IAAI5K,SACrFwY,EACG3Y,EAAMwZ,gBAAgB3F,KAAI,CAAC7R,EAAS2T,IAEhCvV,cAAA,OAAaqF,UAAWhC,EAAQ8U,IAAIpY,SACjC6B,GADO2T,KAKd3V,EAAMyZ,gBAAgB5F,KAAI,CAAC7R,EAAS2T,IAEhCvV,cAAA,OAAaqF,UAAWhC,EAAQ8U,IAAIpY,SACjC6B,GADO2T,SAQ1B,C,gZC3IO,IAAI+D,EAAkBC,QAAWC,OACjC,SAASC,EAAiBC,GACZ,UAAfA,EACFJ,EAAkBC,QAAWC,OACL,UAAfE,IACTJ,EAAkBK,QAAWH,OAEjC,CCRO,SAASI,EAAkBvG,EAAWwG,EAAYna,GACvD,IAAIoa,EAAgB,CAAEC,YAAa1G,EAAW2G,kBAAmB,IACjE,OAAO,IAAI3J,SAAS9Q,IAClB0a,IACGC,IAAK,6BAA4BL,KAAcna,KAAM,SAAUya,GAC9D,MAAMC,EAAUC,IAAUD,UAE1BA,EAAQE,GAAG,SAAS,SAAUzP,EAAQ0P,EAAQjQ,GAC5C,IAAIkQ,EAAM,GACVD,EAAOD,GAAG,QAAQ,SAAUG,GAC1BD,GAAOC,EAAM1T,UACf,IACAwT,EAAOD,GAAG,OAAO,WACf,IACE,MAAMI,EAAWlU,KAAKkO,MAAM8F,GACxBE,EAASlI,cACXsH,EAAcC,YAAY3P,KAAKsQ,EAEnC,CAAE,MAAO,CACTpQ,GACF,IACAiQ,EAAOI,QACT,IACAP,EAAQE,GAAG,UAAU,WACnB/a,EAAQua,EACV,IACIK,EAAIS,WAAa,KACnBT,EAAIU,KAAKC,IAAKC,gBAAgBF,KAAKT,GACnCZ,EAAOwB,KAAM,cAAanB,KAAcna,OAE7B,YAAPA,GAA2B,QAAPA,EACtB8Z,EAAO9X,MAAO,6EAEd8X,EAAO9X,MAAO,mBAAkBmY,KAAcna,sDAC9Coa,EAAcE,kBAAkB5P,KAAM,GAAEyP,IAAana,MAEvDH,EAAQua,GAEZ,IACCQ,GAAG,SAAUnb,IACZqa,EAAO9X,MAAM,kFAAmFvC,GAChG2a,EAAcE,kBAAkB5P,KAAM,GAAEyP,IAAana,KACrDH,EAAQua,EAAc,GACtB,GAER,CAEO,SAASmB,EAA0BC,EAAU7H,EAAWwG,EAAYna,GACzE,OAAO,IAAI2Q,SAAQ,CAAC9Q,EAAS4b,KAE3B,MAAMC,EAAcF,EAASE,YAAY,CAAE,GAAEvB,IAAana,KAAO,aACjE0b,EAAYC,WAAa,KACvB9b,GAAS,EAEX6b,EAAYE,QAAWnS,IACrBgS,EAAOhS,EAAM,EAEf,MAAMoS,EAAcH,EAAYG,YAAa,GAAE1B,IAAana,IAAM,CAAE8b,QAAS,CAAC,KAAM,kBACpFnI,EAAUoI,SAAStB,IACbA,EAAIza,IAAMya,EAAI3H,cAChB+I,EAAYG,IAAIvB,EAClB,GACA,GAEN,CAEO,SAASwB,EAAeC,EAAUV,EAAUrB,EAAYna,GAE7D,OAAO,IAAI2Q,SAAQ,CAAC9Q,EAAS4b,KAC3B,IAAIU,GAAgB,EACpB,MAAMC,EAAUZ,EACbE,YAAY,CAAE,GAAEvB,IAAana,KAAO,YACpC6b,YAAa,GAAE1B,IAAana,IAAM,CAAE8b,QAAS,CAAC,KAAM,kBACpDO,aACHD,EAAQR,QAAU,WAChBH,EAAO,sCACT,EACAW,EAAQE,UAAY,WAClB,MAAMC,EAAWH,EAAQvL,OACrB0L,GACFJ,GAAgB,EAChBD,EAASM,IAAID,EAAS3S,OACtB2S,EAASE,aAELN,GACFrC,EAAOwB,KAAM,kBAAiBnB,KAAcna,KAE9CH,EAAQqc,GAEZ,CAAC,GAEL,CC3FA,MAAMQ,EAAkBC,WAASD,gBAC3BE,EAAUC,cAAYD,QACtBE,EAAaD,cAAYC,WAQxBjX,eAAekX,EAAqBC,EAAMpW,GAC/CA,QA6JKf,eAAmCe,GAExC,MAAMqW,QAA6BtM,QAAQuM,IAAItW,EAAamN,KAAIlO,SAQlEA,eAAoCsU,GAClC,MAAM,UAAEgD,EAAS,QAAE1W,GAAY0T,EAC/B,IAAIiD,EAAiB3W,EACL,WAAZA,SDxFC,SAAgC0T,GACrC,OAAO,IAAIxJ,SAAQ,CAAC9Q,EAAS4b,KAC3B,MAAM,UAAE0B,EAAS,YAAEE,GAAgBlD,EACnCI,IAAMC,IAAK,6BAA4B2C,KAAa,SAAU1C,GAC5D,IAAI6C,EAAO,GACX7C,EAAIG,GAAG,QAAQ,SAAUG,GACvBuC,GAAQvC,CACV,IACAN,EAAIG,GAAG,OAAO,WAAa,IAAD2C,EAAAC,EACxB,MAAMC,EAAa3W,KAAKkO,MAAMsI,GAChB,OAAVG,QAAU,IAAVA,GAAyB,QAAfF,EAAVE,EAAa,oBAAY,IAAAF,GAAQ,QAARC,EAAzBD,EAA2BG,cAAM,IAAAF,GAAjCA,EAAmC7W,OACrC9G,EAAQ4d,EAAW,aAAaC,SAEhC5D,EAAO9X,MACJ,kDACCqb,EAAc,mCAAqC,KAClDF,MAEL1B,EAAO,2BAEX,GACF,GAAE,GAEN,CCkEUkC,CAAuBxD,GAC1BvY,MAAMgc,IACLR,EAAiBQ,CAAQ,IAE1B7b,OAAM,KAGLqb,EAAiB,IAAI,IAG3B,MAAO,CAAED,YAAW1W,QAAS2W,EAC/B,CAvBiFS,CAAqBC,MAKpG,OAFqCb,EAAqBc,QAAQ5W,GAAoB,OAAdA,EAAEV,SAG5E,CArKuBuX,CAAoBpX,GAEzC,IAAIqX,QAyDC,SAAiCrX,GAA6D,IAA/CsX,EAAY/P,UAAAxH,OAAA,QAAAyH,IAAAD,UAAA,GAAAA,UAAA,GAAG,8BAC/DgQ,EAAe,CAAEC,cAAc,EAAO3X,QAAS,GACnD,OAAO,IAAIkK,SAAQ,CAAC9Q,EAAS4b,KAC3B,IAAID,EAAW,KACf,MAAM6C,EAAiBC,UAAUrW,KAAKiW,GACtCG,EAAe/B,UAAY,SAAU7S,GACnC+R,EAAW/R,EAAMJ,OAAOwH,OACxB,IAAI0N,EAAuB/C,EAASgD,iBACpCL,EAAa1X,QAAU+U,EAAS/U,QAEE,IAAhC8X,EAAqB5X,QACG,IAAxBC,EAAaD,QACb4X,EAAqBE,SAAS,cAE9BN,EAAaC,cAAe,EAC5B5C,EAASkD,QACT7e,EAAQse,KAERvX,EAAamV,SAAS+B,IACpB,MAAM,UAAEX,EAAS,QAAE1W,GAAYqX,EAC1BS,EAAqBE,SAAU,GAAEtB,IAAY1W,OAChD0X,EAAaC,cAAe,EAC9B,IAEF5C,EAASkD,QACT7e,EAAQse,GAEZ,EACAE,EAAeM,gBAAkB,SAAUlV,GACzC+R,EAAW/R,EAAMJ,OAAOwH,MAC1B,EACAwN,EAAezC,QAAU,SAAUnS,GACjCgS,EAAOhS,EACT,CAAC,GAEL,CA5F2BmV,CAAwBhY,GAC7CiY,EAAiC,CAAE7B,OAAM1C,kBAAmB,IAYhE,OAVI2D,EAAaG,cACfS,QAAuCC,EAAyB9B,EAAMiB,EAAaxX,QAAU,EAAGG,GAChGoW,EAAO6B,EAA+B7B,OAEtC6B,QAAuCC,EAAyB9B,EAAMiB,EAAaxX,QAASG,GAC5FoW,EAAO6B,EAA+B7B,YAQnC,SAAuB1C,EAAmB7T,GAAwD,IAA/CyX,EAAY/P,UAAAxH,OAAA,QAAAyH,IAAAD,UAAA,GAAAA,UAAA,GAAG,8BACvE,MAAM4Q,EAAgBC,kBAAQ1E,GAC9B,OAAO,IAAI3J,SAAQ,CAAC9Q,EAAS4b,KAC3B,IAAID,EAAW,KACf,MAAM6C,EAAiBC,UAAUrW,KAAKiW,EAAczX,GACpD4X,EAAe/B,UAAY,SAAU7S,GACnC+R,EAAW/R,EAAMJ,OAAOwH,OACxB2K,EAASkD,QACT7e,GACF,EACAwe,EAAeM,gBAAkB9Y,eAAgB4D,GAC/C+R,EAAW/R,EAAMJ,OAAOwH,OACxB,IAAI0N,EAAuB/C,EAASgD,iBAGpC,IAAK,IAAI3C,KAAe0C,QAChB,IAAI5N,SAAS9Q,IACC4J,EAAMJ,OAAOqS,YACFG,YAAa,GAAEA,KAAeoD,SAClD3C,UAAa7S,IAEC,IADTA,EAAMJ,OAAOwH,OACflK,QAAiBoY,EAAc7L,SAAS2I,IAChDkD,EAAcrU,KAAKmR,GAErBhc,GAAS,CACV,IAIL,IAAK,IAAIgW,EAAI,EAAGA,EAAIkJ,EAAcpY,OAAQkP,IACpC0I,EAAqBE,SAASM,EAAclJ,KAC9C2F,EAAS0D,kBAAkBH,EAAclJ,GAG/C,EACAwI,EAAezC,QAAU,SAAUnS,GACjCgS,EAAOhS,EACT,CAAC,GAEL,CA3CQ0V,CAAcN,EAA+BvE,kBAAmB2D,EAAaxX,QAAU,GACtFuW,CACT,CAgFOnX,eAAeiZ,EACpB5C,EACAzV,EACAG,GAGC,IAFDsX,EAAY/P,UAAAxH,OAAA,QAAAyH,IAAAD,UAAA,GAAAA,UAAA,GAAG,8BACfiR,EAAWjR,UAAAxH,OAAA,QAAAyH,IAAAD,UAAA,IAAAA,UAAA,GAEX,OAAO,IAAIwC,SAAQ,CAAC9Q,EAAS4b,KAC3B,IAAID,EAAW,KACX6D,EAAkB,GAClBjF,EAAgB,CAAE4C,KAAMN,EAAiBpC,kBAAmB,IAChE,MAAM+D,EAAiBC,UAAUrW,KAAKiW,EAAczX,GAGpD4X,EAAe/B,UAAYzW,eAAgB4D,GACzC+R,EAAW/R,EAAMJ,OAAOwH,OACxB,IAAK,IAAIgF,EAAI,EAAGA,EAAIjP,EAAaD,OAAQkP,IAAK,CAC5C,IAAIlC,EAAY,GAChByL,GAAc,EACd,MAAM,UAAEjC,EAAS,QAAE1W,GAAYG,EAAaiP,GAI5C,GAHIwJ,EAAgBnM,SAAU,GAAEiK,IAAY1W,OAC1C2Y,GAAc,GAEZA,EAAa,CACf,IAAIE,QAAoBpF,EAAkBvG,EAAWwJ,EAAW1W,GACnB,IAAzC6Y,EAAYhF,kBAAkB3T,QAChCyT,EAAcE,kBAAkB5P,KAAK4U,EAAYhF,yBAE7CiB,EAA0BC,EAAU8D,EAAYjF,YAAa8C,EAAW1W,EAChF,CACA2T,EAAc4C,WAAaf,EAAeC,EAAUV,EAAU2B,EAAW1W,EAC3E,CACA+U,EAASkD,QACT7e,EAAQua,EACV,EAGAiE,EAAeM,gBAAkB,SAAUlV,GACzC+R,EAAW/R,EAAMJ,OAAOwH,OACxB,IAAI0N,EAAuB/C,EAASgD,iBAChCD,EAAqBE,SAAS,cAChCjD,EAAS0D,kBAAkB,aAE7B,IAAK,IAAIrJ,EAAI,EAAGA,EAAIjP,EAAaD,OAAQkP,IAAK,CAC5C,MAAM,UAAEsH,EAAS,QAAE1W,GAAYG,EAAaiP,GACvC0I,EAAqBE,SAAU,GAAEtB,IAAY1W,OAChD+U,EAAS+D,kBAAmB,GAAEpC,IAAY1W,IAAW,CACnDqV,QAAS,CAAC,KAAM,kBAElBuD,EAAgB3U,KAAM,GAAEyS,IAAY1W,KAExC,CACF,EAGA4X,EAAezC,QAAU,SAAUnS,GACjCgS,EAAOhS,EACT,CAAC,GAEL,CC3KO,SAAS+V,EAAgB5Y,GAE9B,OAD0BA,EAAa6Y,MAAM,KAE1C1L,KAAKoG,IACJ,MAAMuF,EAAavF,EAAWwF,OAC9B,GAAmB,KAAfD,EACF,OAAOA,EAET,MAAOvC,EAAW1W,GAAWiZ,EAAWD,MAAM,KAC9C,MAAO,CAAEtC,YAAW1W,UAAS,IAE9BsX,QAAQ5W,GAAMA,GACnB,CCLA,MAAMyV,EAAUC,cAAYD,QACtBgD,EAAS/C,cAAY+C,OACrBC,EAAaC,cAAYD,WACzBE,EAAaC,QAAMC,MACnBC,EAAajG,QAAWgG,MACxBE,GAAeH,QAAMG,aACrBC,GAAOJ,QAAMI,KACb1D,GAAkBC,WAASD,gBAc1B7W,eAAewa,GAASC,EAAOpR,GAAU,IAADqR,EAAAC,EAC7CN,EAAWO,QACX1G,EAAiB,SAGjB,MAAM2G,EAAO,GACbJ,EAAMvE,SAAQ,CAACf,EAAUnF,KACvB,MAAM/U,EAAY,SAAQ+U,IAC1B,IACEmF,EAAWlU,KAAKkO,MAAMgG,EACxB,CAAE,MAAOvb,GAEP,YADAqa,EAAO9X,MAAO,mBAAkBlB,YAElC,CACImZ,QAAW0G,qBAAqB3F,EAAUla,IAC5C4f,EAAKhW,KAAK,IAAIkW,YAAUC,SAAS,CAAEvT,QAAS0N,GAAYla,GAC1D,IAIF,MAAMggB,EAAO,IAAIF,YAAUG,WAAWL,GACtC,IAAI1D,EAAO,IAAIN,GACf,MAAMsE,EAAS,IAAI/G,QAAWgH,aAAaH,EAAM9D,GAC3CkE,EAAgB,IAAIN,YAAUO,cAAcL,EAAME,GAGlDI,EAAoBlS,EAAQtI,aAAamN,KAAK5M,GAAMA,EAAEka,QAAQ,IAAK,OACnEC,EAAgBJ,EAAcK,cAA+B,OAAjBH,QAAiB,IAAjBA,IAAqB,IAGvE,IAAIxa,EAA4B,OAAb0a,QAAa,IAAbA,KAAe/a,OAAOK,aACxB,OAAb0a,QAAa,IAAbA,OAAa,EAAbA,EAAe/a,OAAOK,aAAamN,KAAK+J,GAAS,GAAEA,EAAIX,aAAaW,EAAIrX,YACxE,GACJG,EAAe4Y,EAAgB5Y,EAAa4a,KAAK,MAEjD,MACMC,EAAoBC,GAA2C9a,EADT,QAAvC2Z,EAAgB,OAAbe,QAAa,IAAbA,OAAa,EAAbA,EAAe/a,OAAOG,YAAY,UAAE,IAAA6Z,IAAI,SAEhE3Z,EAAa8D,QAAQ+W,GAErBzE,QAAaD,EAAqBC,EAAMpW,GAGxC,MAAM+a,QAAY1H,QAAW2H,aAAaV,EAAeI,EAAe,CAAEO,OAAQ3S,EAAQ2S,SAGpFC,EAAM,IAAIC,cAAYC,YAAYL,GAAKM,UAAU,UAGvD,OAFAnI,EAAOwB,KAAK,+BAsHd,SAA2BqG,GACzB,MAAMO,EAASC,cAAIR,EAAInO,SAAS7M,OAAOU,WAAY,IAC7C+a,EAASD,cAAIR,EAAIlO,WAAW9M,OAAOU,WAAY,IAC/Cgb,EAASF,cAAIR,EAAIjO,SAAS/M,OAAOU,WAAY,IAC7Cib,EAASH,cAAIR,EAAIhO,UAAUhN,OAAOU,WAAY,IAC9Ckb,EAAQJ,cAAIR,EAAI9N,UAAUlN,OAAOU,WAAY,IAC7Cmb,EAAQL,cAAIR,EAAI7N,YAAYnN,OAAOU,WAAY,IAC/Cob,EAAUN,cAAIR,EAAI/N,UAAUjN,OAAOU,WAAY,IAC/Cqb,EAASP,cAAIR,EAAIgB,WAAWhc,OAAOU,WAAY,IAC/Cub,EAAST,cAAIR,EAAIkB,SAASlc,OAAOU,WAAY,IAC7Cyb,EAAYX,cAAK,GAAEjC,EAAW6C,iBAAyC,IAAxB7C,EAAW6C,SAAiB,IAAM,KAAM,IACvFC,EAAYC,mBAAU,GAAE/C,EAAWgD,kBAAyC,IAAvBhD,EAAWgD,QAAgB,IAAM,KAAM,IAC5FC,EAAoCC,iBAAOjD,GAAaD,EAAW6C,SAAU7C,EAAWgD,SAAU,IAGlGG,EAAU,CACd,0UACA,2YACA,oGACA,2YACO,iBAASnB,YAAqBE,YAAoBC,kBACzD,2YACA,2YACA,oGACA,2YACO,iBAASC,YAAqBC,YAAqBC,kBAC1D,2YACA,2YACA,oGACA,2YACO,iBAASC,YAAqBC,YAAoBE,kBACzD,2YACA,gFACA,qZACO,UAAGO,KAAsCL,KAAaE,WAC7D,sZAGF/gB,QAAQqhB,IAAI,KACZD,EAAQtH,SAASwH,GAAMthB,QAAQqhB,IAAIC,IACrC,CA7JEC,CAAkB7B,GACX,CAAEG,MAAKvb,OAA6B,QAAvBia,EAAe,OAAbc,QAAa,IAAbA,OAAa,EAAbA,EAAe/a,cAAM,IAAAia,IAAI,CAAC,EAClD,CAcO3a,eAAe4d,GAASnD,EAAO/Z,GAA4B,IAApBK,EAAYuH,UAAAxH,OAAA,QAAAyH,IAAAD,UAAA,GAAAA,UAAA,GAAG,GAC3D4R,EAAWU,QACX1G,EAAiB,SAGjB,IAAIiD,EAAO,IAAIN,GACf,MAAM+E,EAAoBC,GAA2C9a,EAAcL,EAAOG,YAAY,IACtGE,EAAa8D,QAAQ+W,GACrBzE,QAAaD,EAAqBC,EAAMpW,GAGxC,IAAI8c,EAAO9G,EACX,IAEE8G,EFhGG,SAAkBC,EAAUpd,GACjCuT,EAAOwB,KAAK,yBACZ,MAAMoF,EAAO5D,EAAW6G,GACxB,OAAO,IAAI/G,EAAQ8D,EAAMna,EAC3B,CE4FWqd,CADQ,CAAC,IAAIhE,EAAOU,IACH/Z,EAC1B,CAAE,MAAO9G,GAEP,YADAqa,EAAO9X,MAAM,0DAEf,CAGA,MAAM6hB,EAAY7G,EAAK8G,YAAY,sBAAuB1D,GAAK2D,UAC/D,IAAa,OAATF,QAAS,IAATA,OAAS,EAATA,EAAWpd,WAAYF,EAAOG,YAAY,GAK5C,YAJAoT,EAAO9X,MACL,yKAMJ8X,EAAOwB,KAAK,uCACZ,MAAM0I,EAAanE,EAAW6D,EAAM1G,GAE9BiH,EACJD,EAAWxQ,SAAS7M,OACpBqd,EAAWvQ,WAAW9M,OACtBqd,EAAWtQ,SAAS/M,OACpBqd,EAAWrQ,UAAUhN,OAGrBqd,EAAWpQ,UAAUmK,QAAQlI,GAAgC,WAA1BA,EAAEqO,cAAcC,QAAoBxd,OACvEqd,EAAWnQ,UAAUlN,OACrBqd,EAAWlQ,YAAYnN,OAgBzB,OAdAmT,EAAOwB,KAAM,YAAW2I,6BAExBhiB,QAAQqhB,IAAI,KAed,SAA2B3B,GACzB,MAAMoB,EAAWhD,EAAWgD,SACtBG,EAAUnD,EAAWmD,QAErBkB,EAAajC,cAAIR,EAAInO,SAAS7M,OAAOU,WAAY,IACjDgd,EAAYlC,cAAIR,EAAIlO,WAAW9M,OAAOU,WAAY,IAClDid,EAAYnC,cAAIR,EAAIjO,SAAS/M,OAAOU,WAAY,IAChDkd,EAAapC,cAAIR,EAAIhO,UAAUhN,OAAOU,WAAY,IAClDmd,EAAkBrC,cAAIR,EAAI9N,UAAUlN,OAAOU,WAAY,IACvDod,EAAiBtC,cAAIR,EAAI7N,YAAYnN,OAAOU,WAAY,IACxDqd,EAAkBvC,cAAIR,EAAI/N,UAAUjN,OAAOU,WAAY,IACvDsd,EAAcxC,cAAK,GAAEY,UAA8B,IAAbA,EAAiB,IAAM,KAAM,IACnE6B,EAAW3B,mBAAU,GAAEC,YAA8B,IAAZA,EAAgB,IAAM,KAAM,IAErEC,EAAoCC,iBAAOjD,GAAa4C,EAAUG,GAAU,IAKlE,CACd,0UACA,2YACA,yGACA,2YACO,iBAAKkB,YAAgBC,YAAeC,YAAeC,kBAC1D,2YACA,2YACA,oGACA,2YACO,iBAAKC,YAAqBC,YAAoBC,kBACrD,2YACA,gFACA,qZACO,UAAGvB,KAAqCwB,KAAeC,WAC9D,sZAEM7I,SAASwH,GAAMthB,QAAQqhB,IAAIC,IAErC,CApDEsB,CAAkBb,GAGlBA,EAAWxQ,SAAWwQ,EAAWxQ,SAASO,KAAK+Q,GAAMA,EAAEC,QAAO,KAC9Df,EAAWvQ,WAAauQ,EAAWvQ,WAAWM,KAAKtU,GAAMA,EAAEslB,QAAO,KAClEf,EAAWtQ,SAAWsQ,EAAWtQ,SAASK,KAAKiR,GAAMA,EAAED,QAAO,KAC9Df,EAAWrQ,UAAYqQ,EAAWrQ,UAAUI,KAAKwP,GAAMA,EAAEwB,QAAO,KAGhEf,EAAWpQ,UAAYoQ,EAAWpQ,UAAUmK,QAAQlI,GAAgC,WAA1BA,EAAEqO,cAAcC,QAEnEH,CACT,CAoFA,SAAStC,GAA2C9a,EAAcqe,GAChE,MAAMxD,EAAoB,GACpByD,EAAkB,CACtB/H,UAAWgI,GAA6BF,GACxCxe,QAASwe,GAcX,OAZoBG,GAAcxe,EAAcse,IAE9CzD,EAAkB/W,KAAKwa,GAEzBG,GAAuBtH,QACpBD,GAA4B,MAApBA,EAAIwH,cAAwBxH,EAAIwH,aAAaC,MAAMte,GAAMie,EAAgBze,QAAQ+e,WAAWve,OACrG8U,SAAS+B,IACT,MAAM2H,EAAkB,CAAEtI,UAAWW,EAAIX,UAAW1W,QAASqX,EAAIrX,QAAS4W,aAAa,GAClF+H,GAAcxe,EAAc6e,GAAiB,IAChDhE,EAAkB/W,KAAK+a,EACzB,IAEKhE,CACT,CAEA,SAAS2D,GAAcM,EAAkBC,GAA2C,IAAxBC,EAAazX,UAAAxH,OAAA,QAAAyH,IAAAD,UAAA,IAAAA,UAAA,GACvE,OAAOuX,EAAiBH,MACrBzH,GACCA,EAAIX,YAAcwI,EAAkBxI,YAAcyI,GAAiB9H,EAAIrX,UAAYkf,EAAkBlf,UAE3G,CAEO,SAAS0e,GAA6Bze,GAC3C,MAAI,YAAYmf,KAAKnf,GACX,mBACC,cAAcmf,KAAKnf,GACpB,oBACC,cAAcmf,KAAKnf,GACpB,mBAEA,kBAEZ,CAEA,MAAM2e,GAAyB,CAC7B,CACElI,UAAW,oBACX1W,QAAS,UAEX,CACE0W,UAAW,qBACX1W,QAAS,SACT6e,aAAc,CAAC,MAAO,QAExB,CACEnI,UAAW,qBACX1W,QAAS,SACT6e,aAAc,CAAC,QAEjB,CACEnI,UAAW,4BACX1W,QAAS,SACT6e,aAAc,CAAC,MAAO,QAExB,CACEnI,UAAW,4BACX1W,QAAS,SACT6e,aAAc,CAAC,S,4CCtQnB,MAAMnjB,GAAYC,aAAYC,IAAK,CACjC4I,IAAK,CACHtI,QAASN,EAAMyjB,QAAQ,GACvBvjB,MAAOF,EAAMG,QAAQM,KAAKC,QAC1BsI,WAAYhJ,EAAMG,QAAQ6I,WAAWiF,MACrCjN,QAAS,QACTE,WAAY,SACZD,eAAgB,UAElByiB,cAAe,CACbC,SAAU,WACVlc,MAAO,QAETmc,aAAc,CACZD,SAAU,WACVE,KAAM,QAERC,gBAAiB,CACf5jB,MAAOF,EAAMG,QAAQ0K,QAAQC,KAC7B,UAAW,CACT9B,WAAYhJ,EAAMG,QAAQC,OAAO2jB,cAGrCC,kBAAmB,CACjBxjB,MAAO,OACPqI,OAAQ,QAEVob,SAAU,CACRpb,OAAQ,iBACRrI,MAAO,iBACP4P,cAAe,SACflQ,MAAOF,EAAMG,QAAQC,OAAOC,OAE9B+O,OAAQ,CACNlP,MAAOF,EAAMG,QAAQC,OAAOC,MAC5B2I,WAAYhJ,EAAMG,QAAQ0K,QAAQC,KAClC/J,aAAc,IACdmJ,aAAc,OACd/I,YAAa,OACb,UAAW,CACT6H,WAAYhJ,EAAMG,QAAQ0K,QAAQwE,OAGtC6U,WAAY,CACVna,MAAO,QACP8Z,KAAM,WAERM,YAAa,CACXpa,MAAO,OACPtC,MAAO,WAET2c,QAAS,CACP9jB,QAAS,OAEX+jB,YAAa,CACXC,UAAW,OACX3Z,UAAW,QAEb4Z,cAAe,CACbtjB,eAAgB,iBAElBujB,qBAAsB,CACpBC,UAAW,SACXnkB,QAAS,eAIb,SAASokB,GAASvQ,EAAK5M,GACrB,GAAY,WAAR4M,EAGJ,OAAO5M,CACT,CAEe,SAASod,GAAY9mB,GAClC,MAAMyD,EAAUxB,MACT8kB,EAAcC,GAAmBpjB,oBAAS,IAC1CqjB,EAAYC,GAAiBtjB,oBAAS,IACtC0C,EAAW6gB,GAAgBvjB,mBAAS,KACpC2C,EAAS6gB,GAAcxjB,mBAAS,KAChC4C,EAAa6gB,GAAkBzjB,mBAAS,KACxC8C,EAAc4gB,GAAmB1jB,mBAAS,KAC1C2jB,EAAiBC,GAAsB5jB,oBAAS,IAChD6jB,EAAgBC,GAAqB9jB,oBAAS,IAC9C+jB,EAAgBC,GAAqBhkB,oBAAS,IAC9CikB,EAAmBC,GAAwBlkB,oBAAS,IACpDmkB,EAAgBC,GAAqBpkB,mBAAS,KAC9CqkB,EAAoBC,GAAyBtkB,mBAAS,IAE7D8Q,qBAAU,KAAO,IAAD9O,EAAAC,EAAAC,EAAAqiB,EAAApiB,EACdohB,GAAyB,QAAZvhB,EAAA5F,EAAMqG,cAAM,IAAAT,OAAA,EAAZA,EAAcU,YAAa,IACxC8gB,GAAuB,QAAZvhB,EAAA7F,EAAMqG,cAAM,IAAAR,OAAA,EAAZA,EAAcU,UAAW,IACpC8gB,GAA2B,QAAZvhB,EAAA9F,EAAMqG,cAAM,IAAAP,GAAa,QAAbqiB,EAAZriB,EAAcU,mBAAW,IAAA2hB,OAAb,EAAZA,EAA2B1hB,QAAS,EAAIzG,EAAMqG,OAAOG,YAAY4hB,GAAG,GAAK,IACxFd,GAA4B,QAAZvhB,EAAA/F,EAAMqG,cAAM,IAAAN,OAAA,EAAZA,EAAcW,eAAgB,GAAG,GAChD,CAAC1G,EAAMqG,SAEV,MAIMgiB,EAAsBA,KAC1BrB,GAAgB,GAChBgB,EAAkB,GAAG,EAOjBM,EAAoBA,KACxBpB,GAAc,GACdlnB,EAAMuoB,eAAe,CAAEjiB,YAAWC,UAASC,YAAa,CAACA,GAAcE,eAAc6gB,mBAAkB,EAyHzG,MAeMiB,GAAcC,GAClBroB,eAACsoB,KAAQ,CAAgBC,OAAQF,EAAM3oB,GAAIuJ,MAAOof,EAAMjjB,KAAKrF,SAC1DsoB,EAAMtoB,SAAWsoB,EAAMtoB,SAAS0T,KAAK+U,GAAUA,EAAKzoB,SAAWqoB,GAAWI,GAjB3DA,IAClBxoB,eAAC+E,IAAO,CAENC,MACEpF,EAAM6oB,gBAAgBD,EAAK9oB,KAAOE,EAAM6oB,gBAAgBD,EAAK9oB,IAAIgpB,YAC7D9oB,EAAM6oB,gBAAgBD,EAAK9oB,IAAIgpB,YAC/BF,EAAKpjB,KAEXH,UAAU,SACVC,OAAK,EAAAnF,SAELC,eAACsoB,KAAQ,CAAeC,OAAQC,EAAK9oB,GAAIuJ,MAAOuf,EAAKpjB,KAAMC,UAAWhC,EAAQslB,UAA/DH,EAAK9oB,KATf8oB,EAAK9oB,IAeyEkpB,CAAWJ,KAAU,MAD3FH,EAAM3oB,IAKvB,OACEG,gBAACqI,IAAG,CAAC7C,UAAWhC,EAAQsH,IAAI5K,SAAA,CAC1BF,gBAACgpB,IAAI,CAACC,WAAS,EAAA/oB,SAAA,CACbC,eAAC6oB,IAAI,CAAC9X,MAAI,EAACgY,GAAI,EAAEhpB,SACfF,gBAAC2I,IAAM,CAACnD,UAAW2I,YAAK3K,EAAQ8N,OAAQ9N,EAAQ4iB,YAAa3gB,QAtHrEC,iBACE,GAAI3F,EAAMgV,UAER,OAGFhV,EAAMopB,mBACNppB,EAAMqpB,cAAa,EAAM,CAAC,KAAK,GAC/B3B,GAAkB,GAClB,MAAM4B,EAAqBhK,EAAgB5Y,GACrCL,EAAS,CACbC,UAAWA,GAAwB,qBACnCC,QAASA,GAAoB,QAC7BgjB,SAAS,EACT/iB,YAAaA,EAAc,CAACA,GAAe,CAAC,UAExCsd,QAAmBP,GAASvjB,EAAMwpB,QAASnjB,EAAQijB,GACzD,IAAIG,EAAa7iB,KAAKC,UAAUid,EAAY+C,GAAU,GAClD/C,GAAcA,EAAWlQ,cAExBkQ,EAAWlQ,YAAYnN,QACvBqd,EAAWvQ,WAAW9M,QACtBqd,EAAWpQ,UAAUjN,QACrBqd,EAAWxQ,SAAS7M,QACpBqd,EAAWtQ,SAAS/M,QACpBqd,EAAWrQ,UAAUhN,QACrBqd,EAAWnQ,UAAUlN,UAKxBgjB,EAAa,CAAC,KAGhBzpB,EAAMqpB,cAAa,EAAMI,GAAY,GACrC/B,GAAkB,EACpB,EAkFgGgC,OAAO,SAAQvpB,SAAA,CAAC,kBAErGsnB,EACCrnB,eAAA,OAAKqF,UAAWhC,EAAQ0iB,kBAAkBhmB,SACxCC,eAACupB,IAAgB,CAAClkB,UAAWhC,EAAQ2iB,aAGvChmB,eAACwpB,IAAS,CAACnkB,UAAWhC,EAAQ8iB,eAIpCnmB,eAAC6oB,IAAI,CAAC9X,MAAI,EAACgY,GAAI,EAAEhpB,SACfF,gBAAC2I,IAAM,CACLnD,UAAW2I,YAAK3K,EAAQ8N,OAAQ9N,EAAQ6iB,aACxC5gB,QA9FVC,iBACE,GAAI3F,EAAMgV,UAER,OAGFhV,EAAMopB,mBACNppB,EAAM6pB,aAAa,IAAI,GACvBjC,GAAkB,GAClB,MAAMkC,EAAoB9pB,EAAM+pB,UAAUlW,KAAKlB,GAAQA,EAAIA,MAAKkL,QAAQ5W,GAAMA,IACxEqiB,EAAsC,KAAjB5iB,EAAsB,GAAKA,EAAa6Y,MAAM,KAGzE,GAAIjZ,GAAaC,GAA2B,KAAhBC,EAAoB,CAC9C,MAAMwjB,EAAa,CACjBpX,aAAc,sBACdpM,YAAaA,EAAc,CAACA,GAAe,CAAC,SAC5C1G,GAAI,OACAwG,GAAa,CAAE2jB,IAAM,GAAE3jB,8BACvBC,GAAW,CAAEA,QAASA,IAE5BujB,EAAkBtf,KAAK5D,KAAKC,UAAUmjB,EAAY,KAAM,GAC1D,CAEA,MAAMhb,EAAU,CAAEtI,aAAc4iB,EAAoB3H,OAAQ4F,IACtD,IAAE3F,EAAG,OAAEvb,SAAiB8Z,GAAS2J,EAAmB9a,GAC1DhP,EAAM6pB,aAAajI,GAAK,GACxBgG,GAAkB,GACA,KAAdthB,GAAoBD,EAAOC,WAAW6gB,EAAa9gB,EAAOC,WAC9C,KAAZC,GAAkBF,EAAOE,SAAS6gB,EAAW/gB,EAAOE,SACpC,KAAhBC,GAAsBH,EAAOG,aAAa6gB,EAAehhB,EAAOG,YAAY4hB,GAAG,GACrF,EAgEUsB,OAAO,eAAcvpB,SAAA,CAEpBwnB,EACCvnB,eAAA,OAAKqF,UAAWhC,EAAQ0iB,kBAAkBhmB,SACxCC,eAACupB,IAAgB,CAAClkB,UAAWhC,EAAQ2iB,aAGvChmB,eAACwpB,IAAS,CAACnkB,UAAWhC,EAAQ8iB,QAAS3e,MAAO,CAAEC,UAAW,gBAC3D,yBAMRzH,eAAA,OAAKqF,UAAWhC,EAAQsiB,aAAa5lB,SACnCF,gBAAC2I,IAAM,CAACpD,KAAK,WAAWC,UAAWhC,EAAQ8N,OAAQ7L,QA/L9BwkB,KACzBlD,GAAgB,EAAK,EA8L8D7mB,SAAA,CAC7EC,eAAC+pB,IAAgB,IAAG,0BAIxBlqB,gBAAA,OAAKwF,UAAWhC,EAAQoiB,cAAc1lB,SAAA,CACpCF,gBAAC2I,IAAM,CAACpD,KAAK,UAAUC,UAAWhC,EAAQwiB,gBAAiBvgB,QAAS1F,EAAMoqB,QAAQjqB,SAAA,CAChFC,eAACsO,IAAO,IAAG,eAEbzO,gBAAC2I,IAAM,CAACpD,KAAK,gBAAgBC,UAAWhC,EAAQwiB,gBAAiBvgB,QA/L9C2kB,KACvBnD,GAAc,EAAK,EA8L4E/mB,SAAA,CACzFC,eAACkqB,IAAQ,IAAG,uBAIhBrqB,gBAAC6H,IAAM,CAACC,KAAMkf,EAAYjf,QAASsgB,EAAmB,kBAAgB,oBAAmBnoB,SAAA,CACvFC,eAAC+H,IAAW,CAACrI,GAAG,oBAAmBK,SAAC,2BACpCF,gBAACmI,IAAa,CAAAjI,SAAA,CACZC,eAACiI,IAAiB,CAAAlI,SAAC,2FAGnBC,eAACgJ,IAAS,CACRtJ,GAAG,YACH+R,OAAO,QACP3J,WAAS,EACTmB,MAAM,gBACNkhB,WAAW,8BACXC,aAAclkB,EACdgD,SAxMeC,IACvB,MAAMkhB,EAAelhB,EAAMJ,OAAOO,MAClCyd,EAAasD,EAAa,IAwMpBrqB,eAACgJ,IAAS,CACRtJ,GAAG,UACH+R,OAAO,QACP3J,WAAS,EACTmB,MAAM,UACNkhB,WAAW,iBACXC,aAAcjkB,EACd+C,SA5MaC,IACrB,MAAMmhB,EAAanhB,EAAMJ,OAAOO,MAChC0d,EAAWsD,EAAW,IA4MhBzqB,gBAACmJ,IAAS,CACRtJ,GAAG,sBACH+R,OAAO,QACP3J,WAAS,EACTyiB,QAAM,EACNthB,MAAM,eACNkhB,WAAW,sBACX7gB,MAAOlD,EACP8C,SAjNiBC,IACzB,MAAMqhB,EAAiBrhB,EAAMJ,OAAOO,MACpC2d,EAAeuD,EAAe,EA+MMzqB,SAAA,CAE5BC,eAACyqB,IAAQ,CAACnhB,MAAO,QAAQvJ,SAAC,eAC1BC,eAACyqB,IAAQ,CAACnhB,MAAO,QAAQvJ,SAAC,gBAC1BC,eAACyqB,IAAQ,CAACnhB,MAAO,QAAQvJ,SAAC,kBAE5BC,eAACgJ,IAAS,CACRtJ,GAAG,eACH+R,OAAO,QACP3J,WAAS,EACTmB,MAAM,eACNkhB,WAAW,8EACXC,aAAc9jB,EACd4C,SAzNsBC,IAC9B,MAAMuhB,EAAmBvhB,EAAMJ,OAAOO,MACtC4d,EAAgBwD,EAAiB,IAyN3B1qB,eAAC2qB,IAAgB,CACfjrB,GAAG,cACH+R,OAAO,QACPmZ,QAAS5qB,eAAC6qB,IAAQ,CAACC,QAAS3D,EAAiBllB,MAAM,YACnDgH,MAAM,kCACNC,SA3NqBC,IAC7B,MAAM4hB,EAAa5hB,EAAMJ,OAAO+hB,QAChC1D,EAAmB2D,EAAW,IA2NxB/qB,eAACgrB,IAAc,CAAAjrB,SAAC,+DAElBC,eAACuI,IAAa,CAAAxI,SACZC,eAACwI,IAAM,CAAClD,QAAS4iB,EAAmBjmB,MAAM,UAASlC,SAAC,cAKxDF,gBAAC6H,IAAM,CACLC,KAAMgf,EACN/e,QAASqgB,EACT,kBAAgB,oBAChBpgB,SAAS,KACTC,WAAS,EACTmjB,OAAO,QACP5nB,QAAS,CAAE2M,MAAO3M,EAAQ+iB,aAAcrmB,SAAA,CAExCC,eAAC+H,IAAW,CAACrI,GAAG,oBAAmBK,SAAC,iBACpCC,eAACgI,IAAa,CAAAjI,SACZF,gBAACgpB,IAAI,CAACC,WAAS,EAACthB,MAAO,CAAEW,SAAU,SAAUuE,UAAW,QAAS3M,SAAA,CAC/DC,eAAC6oB,IAAI,CAAC9X,MAAI,EAACgY,GAAI,EAAEhpB,SACfC,eAACkrB,KAAQ,CACP7lB,UAAWhC,EAAQ8nB,SACnBC,oBAAqBprB,eAACqrB,IAAc,IACpCC,kBAAmBtrB,eAACurB,IAAgB,IACpCC,aA1KdjmB,eAA+B4D,EAAOG,GACpC,IAAKA,EAAMmiB,SAAS,QAAS,OAC7B,MAAMhD,EAAkB7oB,EAAM6oB,gBAAgBnf,GAC9Coe,GAAqB,GACrBI,EAAsBW,EAAgBrjB,MACtC,MAAMsmB,EAAc,IAAIC,YAAY,SACpC,IAAIC,QAAuBC,MAAMpD,EAAgBvoB,MAAMoB,MAAMwqB,GAAaA,EAAS9O,KAAK+O,cACpFC,EAAY,GAChB,MAAQ1iB,MAAOmR,SAAgBmR,EAAeK,OAC9CD,GAAaN,EAAYQ,OAAOzR,GAChCiN,GAAqB,GACrBE,EAAkBoE,EACpB,EA8J4CjsB,SAE7BH,EAAMusB,cAAc1Y,KAAK2Y,GAAahE,GAAWgE,SAGtDpsB,eAAC6oB,IAAI,CAAC9X,MAAI,EAACgY,GAAI,EAAEhpB,SACfC,eAACmN,KAAmB,CAClB/H,KAAMuiB,EAAiBE,EAAqB,GAC5C1Z,YAAY,EACZ7E,MAAOqe,EACPhZ,YAAagZ,EACb/X,gBAvKd,SAA4BpN,GAC1BolB,EAAkBplB,EACpB,EAsKc0L,KAAM,MACNW,YAAa4Y,EAAoB,sBAAwB,6BAKjE5nB,gBAAC0I,IAAa,CAAClD,UAAWhC,EAAQijB,cAAcvmB,SAAA,CAC9CF,gBAAA,OAAKwF,UAAWhC,EAAQkjB,qBAAqBxmB,SAAA,CAAC,wFAC0C,IACtFC,eAAC6I,IAAI,CAACC,KAAK,yDAAwD/I,SAAC,WAAa,OAEnFF,gBAAA,OAAAE,SAAA,CACEF,gBAAC2I,IAAM,CAAClD,QAhLlB,WACEnE,UAAUkrB,UAAUC,UAAU3E,EAChC,EA8KkD1lB,MAAM,UAASlC,SAAA,CACrDC,eAACusB,IAAsB,IAA0B,wBAEnDvsB,eAACwI,IAAM,CAAClD,QAAS2iB,EAAqBhmB,MAAM,YAAWlC,SAAC,qBAQpE,C,0JClce,MAA0B,4C,OCOzC,MAAM8B,EAAYC,aAAYC,IAAK,CACjCyqB,KAAM,CACJzhB,WAAYhJ,EAAMG,QAAQC,OAAOsqB,KACjC/G,SAAU,SACVgH,UAAW,KAEb1nB,MAAO,CACLuC,SAAU,GACV7E,WAAY,KAEdiqB,KAAM,CACJ/hB,OAAQ,OACRrI,MAAO,QAETqqB,WAAY,CACV3pB,WAAY,UAEd4pB,SAAU,CACR3pB,YAAa,MACbuE,UAAW,cAEbqlB,UAAW,CACT7qB,MAAOF,EAAMG,QAAQC,OAAOC,MAC5BQ,gBAAiBb,EAAMG,QAAQC,OAAOsqB,KACtCllB,SAAU,WACV7E,WAAY,IACZ,UAAW,CACTqI,WAAYhJ,EAAMG,QAAQC,OAAO4qB,YAGrCC,YAAa,CACX/qB,MAAOF,EAAMG,QAAQC,OAAOC,MAC5BmF,SAAU,SACVif,UAAW,SACX5U,UAAW,YAIA,SAASqb,IACtB,MAAM5pB,EAAUxB,IAChB,OACE7B,cAACktB,IAAM,CAAC7nB,UAAWhC,EAAQmpB,KAAKzsB,SAC9BC,cAACmtB,IAAO,CAAAptB,SACNF,eAACqI,IAAG,CAAC7C,UAAWhC,EAAQupB,WAAY7pB,QAAQ,OAAOkK,SAAU,EAAGmgB,cAAc,MAAKrtB,SAAA,CACjFF,eAACqI,IAAG,CAACwN,MAAO,EAAG3S,QAAQ,OAAOkK,SAAU,EAAGmgB,cAAc,MAAKrtB,SAAA,CAC5DC,cAACkI,IAAG,CAACwN,MAAO,EAAG2X,UAAU,SAAStqB,QAAQ,OAAMhD,SAC9CC,cAAA,OAAKstB,IAAKX,EAAMY,IAAI,OAAOloB,UAAWhC,EAAQspB,SAEhD3sB,cAACkI,IAAG,CAACwN,MAAO,EAAG2X,UAAU,SAASG,EAAG,EAAEztB,SACrCF,eAAC4tB,IAAc,CAACC,aAAW,EAAA3tB,SAAA,CACzBC,cAAC2tB,IAAU,CAACjY,MAAO,EAAGrQ,UAAWhC,EAAQ2B,MAAMjF,SAAC,eAGhDC,cAAC2tB,IAAU,CAACjY,MAAO,EAAGrQ,UAAWhC,EAAQ2pB,YAAYjtB,SAAC,qDAM5DC,cAACkI,IAAG,CAACwN,MAAO,EAAE3V,SACZC,cAACytB,IAAc,CAACC,aAAW,EAAA3tB,SACzBF,eAAC2I,IAAM,CAACnD,UAAWhC,EAAQypB,UAAWhkB,KAAK,yBAAyBC,OAAO,SAAQhJ,SAAA,CACjFC,cAAC4tB,IAAS,CAACvoB,UAAWhC,EAAQwpB,SAAUtlB,SAAS,UAAU,8BAS3E,C,uMC9EA,yRAeA,MAAM1F,EAAYC,aAAYC,IAAK,CACjC+mB,UAAW,CACTle,OAAQ,OACRqC,SAAU,GAEZ4gB,eAAgB,CACdjjB,OAAQ,QAEVkjB,WAAY,CAEV7gB,SAAU,KAGZ8gB,OAAQ,CACNnjB,OAAQ,OACRrI,MAAO,MACPyrB,OAAQ,aACR,UAAW,CACTjjB,WAAYkjB,EAAOlB,YAGvBmB,WAAY,CACVnjB,WAAY,WAEdojB,aAAc,CACZH,OAAQ,cAEVI,cAAe,CACb7rB,MAAO,OACPqI,OAAQ,+BAEVyjB,aAAc,CACZ9rB,MAAO,OACPqI,OAAQ,8BAEV0jB,iBAAkB,CAChB1jB,OAAQ,OACRrI,MAAO,QAETgsB,gBAAiB,CACf3jB,OAAQ,QACRrI,MAAO,QAETgK,IAAK,CACH3B,OAAQ,aAINqjB,EAAS,CACbnI,YAAa,UACbiH,UAAW,UACXN,KAAM,UACN+B,WAAY,UACZzc,WAAY,UACZJ,aAAc,UACd9O,UAAW,UACX4rB,KAAM,UACNzjB,WAAY,UACZgH,YAAa,UACbpJ,IAAK,WAGM7G,EAAQ2sB,YAAY,CAC/BxsB,QAAS,CACP0K,QAAS,CACPC,KAAMohB,EAAOxB,KACbrb,KAAM6c,EAAOO,WACb1hB,MAAOmhB,EAAOlB,WAEhB5qB,OAAQ8rB,GAEVU,WAAY,CACV7jB,WAAY,aAEd8jB,UAAW,CACTC,WAAY,CACVC,QAAS,CACPlsB,gBAAiBqrB,EAAOjc,YACxBzK,SAAU,QAEZrC,MAAO,CACLjD,MAAOgsB,EAAOjc,cAGlB+c,UAAW,CACTvsB,KAAM,CACJwV,cAAe,OACftV,WAAY,MAGhBssB,cAAe,CACbxC,KAAM,CACJ,UAAW,CACT5pB,gBAAiBqrB,EAAOQ,WAO5BQ,EAAY,uEAEZC,GADMvtB,QAAQqhB,IACO,oDACrBmM,EAAwB,mDAC9B,IAAIC,EAAe,CAACF,GAChB9V,EAAkB,CAAC+V,GACnB1W,EAAe,EACfS,EAAe,UACfuP,EAAkB,CAAC,EAsBvB,SAAS4G,EAAgBC,GACvBA,EAAY7T,SAAS8T,IACE,aAAjBA,EAAQ5c,MACV0c,EAAgBE,EAAQxvB,UAE1BwvB,EAAQ7vB,GAAK6vB,EAAQrvB,KAAKsvB,WAAW,MAAO,KACvB,SAAjBD,EAAQ5c,OACV8V,EAAgB8G,EAAQ7vB,IAAM,CAC5BQ,KAAO,GAAE+uB,cAAsBM,EAAQrvB,OACvCwoB,YAAa6G,EAAQ7G,YACrBtjB,KAAMmqB,EAAQnqB,cAGXmqB,EAAQ5c,YACR4c,EAAQrvB,IAAI,GAEvB,CAEAqF,eAAekqB,IACb,IAAIC,QAAqB7D,MAAO,GAAEoD,gBAAwB3tB,MAAMwqB,GAAaA,EAAS6D,SAEtF,OADAN,EAAgBK,EAAa3vB,UACtB,IAAI2vB,EAAa3vB,SAC1B,CA3CA4B,QAAQqhB,IAAM,SAAqBphB,GAC7BA,IAAYA,EAAQsjB,WAAW,UAAYtjB,EAAQsjB,WAAW,WAC5D9L,EAAgB,KAAO+V,IACzB/V,EAAkB,IAEpBX,IACAW,EAAgBhP,KAAKxI,GACjBA,EAAQsjB,WAAW,WACrBhM,EAAe,YAGfkW,EAAa,KAAOF,IACtBE,EAAe,IAEjBA,EAAahlB,KAAKxI,EACpB,EA6DO,MAAM0L,EAAyBsiB,yBAAc,GAErC,SAASxvB,EAAIR,GAC1B,MAAMyD,EAAUxB,IACVguB,EAAWjwB,EAAMc,OAChBovB,EAAiBC,GAAsBvsB,oBAAS,IAChDwsB,EAAcC,GAAmBzsB,mBAAS,KAC1C0sB,EAAeC,GAAoB3sB,mBAAS,CAAC,MAC7CmL,EAAagF,GAAkBnQ,mBAAS,KACxC4sB,EAAwBC,GAA6B7sB,oBAAS,IAC9D8sB,EAAuBC,GAA4B/sB,oBAAS,IAC5DoV,EAAeF,GAAoBlV,oBAAS,IAC5C2oB,EAAeqE,GAAoBhtB,mBAAS,KAC5CitB,EAAkBC,GAAuBltB,mBAAS,CAAC,IACnDmtB,EAAWC,GAAgBptB,mBAAS,YACpCqtB,EAAYC,GAAiBttB,oBAAS,IACtCutB,EAAeC,GAAoBxtB,mBAAS,CAAE0C,UAAW,GAAIC,QAAS,GAAIC,YAAa,GAAIE,aAAc,MACzG2qB,GAAcC,IAAmB1tB,mBAAS,CAAC,GAqFlD,SAAS2tB,GAAUhyB,GACjBA,EAAEiyB,iBACFN,GAAc,EAChB,CAUA,SAASO,GAAcC,GACrB,GAAIT,EAAY,CACd,MAAMU,EAAiBD,EAAU/wB,OAAOixB,WAAc,IAClDD,EAAgB,IAAMA,EAAgB,IACxCX,EAAaW,EAEjB,CACF,CAgBA,SAASE,GAAYrsB,EAAMssB,GACzB,GAAIA,EAAQxX,IAAI9U,GAAO,CACrB,IAAIue,EAAQ+N,EAAQxX,IAAI9U,GACpBusB,EAAiB,GAAEvsB,KAAQue,IAC/B,KAAO+N,EAAQxX,IAAIyX,IACjBhO,GAAgB,EAChBgO,EAAiB,GAAEvsB,KAAQue,IAE7B+N,EAAQE,IAAIxsB,EAAMue,EAAQ,GAC1Bve,EAAOusB,EACPD,EAAQE,IAAID,EAAe,EAC7B,MACED,EAAQE,IAAIxsB,EAAM,GAEpB,OAAOA,CACT,CAyCA,OA/KAkP,qBAAU,MACR/O,iBACE,GAAI,UAAUggB,KAAKsK,EAAS3vB,MAAO,CACjC,MAAMsC,QArDP+C,eAAyBssB,GAC9B,QAAwB/jB,IAApB+jB,EAAWrvB,KACb,MAAO,GACF,CACL,MAAMsvB,QAAoBthB,YAAWqhB,GAG/BE,EAAWD,EAAYE,SAAS3qB,MAAM,IAC5C,OAAKyqB,EAAYE,SAASpf,SAAS,6CAAmE,IAApBmf,EAAS1rB,OAGrE4rB,sBAAYC,EAAOC,KAAKJ,EAAU,WAAWhrB,SAAS,SAFnE,EAKX,CACF,CAsC2BqrB,CAAUvC,EAASwC,QAChCC,EAAa9vB,EAAK6S,QAAQ,MAC1BpP,EAASzD,EAAK6E,MAAM,EAAGirB,GAC7B,IAAIC,EACAC,EAAahwB,EACjB,IACE,MAAMiwB,EAAYjsB,KAAKkO,MAAMzO,GACV,MAAfwsB,EAAU/rB,GAA4B,MAAf+rB,EAAU9rB,GAA4B,MAAf8rB,EAAU5rB,IAC1D0rB,EAAe,CACbrsB,UAAWusB,EAAU/rB,EACrBP,QAASssB,EAAU9rB,EACnBP,YAAaqsB,EAAU7rB,GAAK,GAC5BN,aAAcmsB,EAAU5rB,GAI1B2rB,EAAahwB,EAAK6E,MAAMirB,EAAa,GAEzC,CAAE,MAAOnzB,GAEP,CAEF+xB,GAAgBqB,GAAgB,CAAC,GACjC5e,EAAe6e,EACjB,MAAO,GAAI,SAASjN,KAAKsK,EAAS3vB,MAAO,CACvC,MAAMsyB,QA7DdjtB,eAA8B8D,GAC5B,MAAMqpB,QAAoB7G,MAAO,gCAA+BxiB,KAAU/H,MAAM6Y,GAAQA,EAAIwV,SAC5F,IAAI6C,EAAa,GACjB,IAAK,IAAI5rB,KAAKkP,OAAO6c,QAAkB,OAAXD,QAAW,IAAXA,OAAW,EAAXA,EAAaE,QAAS,CAAC,GAC7ChsB,EAAEisB,UACJL,SAAoB3G,MAAMjlB,EAAEksB,SAASxxB,MAAM6Y,GAAQA,EAAI3X,SAEvDgwB,GAAc5rB,EAAEoG,QAElBwlB,GAAc,OAEhB,OAAOA,EAAWnT,MACpB,CAiDiC0T,CAAelD,EAASwC,OAAO3yB,IACxDiU,EAAe6e,EACjB,CACF,CAKAQ,GAJAztB,iBACEirB,QAAuBf,KACvBiB,EAAoBjI,EACtB,CAEAwK,EAAe,GACd,CAACpD,IA0IF7vB,cAACkzB,IAAa,CAACnxB,MAAOA,EAAMhC,SAC1BF,eAAA,OAAKwF,UAAU,OAAOmC,MAAO,CAAEoD,OAAQ,SAAU7K,SAAA,CAC/CF,eAAA,OAAKwF,UAAWhC,EAAQkJ,IAAIxM,SAAA,CAC1BC,cAACitB,IAAM,IACPjtB,cAAC0mB,IAAW,CACVuC,aAtIV,SAA6B1U,EAAa4e,EAAave,GACrDmb,EAAmBxb,GACnB4b,EAAiBgD,GACjB9C,EAA0Bzb,EAC5B,EAmIU6U,aAjIV,SAA6B2J,EAAWxe,GACtC2b,EAAyB3b,GACzBjB,EAA6B,KAAdyf,EAAmB,KAAOA,EAC3C,EA+HUjL,eAjHV,SAA4BliB,GAC1B+qB,EAAiB/qB,EACnB,EAgHUA,OAAQgrB,GACR7H,QAAS4G,EACTrG,UAAWuG,EACXlH,iBAnJV,WACEoG,EAAe,CAACF,GAChB9V,EAAkB,CAAC+V,GACnB1W,EAAe,EACfS,EAAe,SACjB,EA+IUiT,cAAeA,EACf1D,gBAAiBgI,EACjB7b,UAAW0b,GAAyBF,EACpCpG,QAvDV,WACE,MAAM0H,EAAU,IAAI2B,IAGdC,EAAM,IAAIC,IAChBD,EAAIE,KAAK,UAAWxD,GAGpB,MAAOyD,EAAWC,GAAqBC,oBAAUzD,GAAgB3d,GAAQA,EAAI7S,IAAiB,aAAX6S,EAAI7S,KACvF+zB,EAAUhY,SAASlJ,IAAS,IAAD2E,EAAA0c,EACzB,IAAIxc,EACJ,IACEA,EAAc5Q,KAAKkO,MAAMnC,EAAIA,IAC/B,CAAE,MACiE,CAEnE,MAAMnN,EAAOqsB,GAAuB,QAAXva,EAAAE,SAAW,IAAAF,GAAXA,EAAa1E,aAAgB,GAAE4E,EAAY5E,gBAAgBD,EAAI7S,KAAO6S,EAAI7S,GAAIgyB,GACjGpoB,EAAe,QAAVsqB,EAAGrhB,EAAIA,WAAG,IAAAqhB,IAAI,KACzBN,EAAIE,KAAM,GAAEpuB,SAAakE,EAAM,IAEjCoqB,EAAkBjY,SAASlJ,IAAS,IAADshB,EAAAC,EACjC,IAAI1c,EACJ,IACEA,EAAc5Q,KAAKkO,MAAMnC,EAAIA,IAC/B,CAAE,MACiE,CAEnE,MAAM7S,EAAW,QAATm0B,EAAGthB,EAAI7S,UAAE,IAAAm0B,IAAI,WACfzuB,EAAOqsB,GAAYra,EAAY5E,aAAgB,GAAE4E,EAAY5E,gBAAgB9S,IAAOA,EAAIgyB,GACxFpoB,EAAe,QAAVwqB,EAAGvhB,EAAIA,WAAG,IAAAuhB,IAAI,KACzBR,EAAIE,KAAM,GAAEpuB,SAAakE,EAAM,IAIjCgqB,EAAIS,cAAc,CAAEphB,KAAM,SAAUrR,MAAM0yB,IACxC3c,IAAUC,OAAO0c,EAAM,gBAAgB,GAE3C,OAqBMh0B,cAAA,OAAKqF,UAAWuT,EAAgBvV,EAAQ+qB,cAAgB/qB,EAAQgrB,aAAatuB,SAC3EC,cAACsN,EAAuB2mB,SAAQ,CAAC3qB,MAAOsP,EAAc7Y,SACpDF,eAACgpB,IAAI,CACHxjB,UAAW2I,YAAK3K,EAAQylB,UAAW+H,GAAcxtB,EAAQ8qB,cACzDrF,WAAS,EACToL,YAvFZ,SAAqB/0B,GACnB,MAAMmyB,EAAUnyB,EAAEg1B,QAAQ,GAAG7C,QACzBT,GACFuD,oBAAS,IAAM/C,GAAcC,IAAU,GAAvC8C,EAEJ,EAmFYC,YA/FZ,SAAqBl1B,GACnB,MAAMmyB,EAAUnyB,EAAEmyB,QACdT,GACFuD,oBAAS,IAAM/C,GAAcC,IAAU,GAAvC8C,EAEJ,EA2FYjD,UAAWA,GACXmD,aAAcnD,GAAUpxB,SAAA,CAExBC,cAAC6oB,IAAI,CACH9X,MAAI,EACJ1L,UAAW2I,YAAK3K,EAAQwqB,eAAgBxqB,EAAQyqB,YAChDtmB,MAAO,CAAEK,SAAW,QAAO8oB,YAAqB4D,UAAY,QAAO5D,aAAsB5wB,SAEzFC,cAAC0X,IAAS,CACRlV,KAAMwtB,EACNrhB,YAAaA,EACbiB,gBA1JhB,SAAiCpN,GAEX,KAAhBmM,GAAsC,OAAhBA,GACxBgF,EAAenR,GAEjBytB,EAAgBztB,EAClB,EAqJgBoS,UAAW0b,EACX3c,eAAgBA,EAChB1N,OAAQ8qB,MAGZ/wB,cAAC6oB,IAAI,CACH9X,MAAI,EACJ1L,UAAW2I,YAAK3K,EAAQ0qB,OAAQ8C,GAAcxtB,EAAQ6qB,YACtDsG,aArId,WACE1D,GAAc,EAChB,EAoIc2D,WAlId,WACE3D,GAAc,EAChB,EAiIc4D,YAjJd,SAAqBv1B,GACnBA,EAAEiyB,iBACFN,GAAc,EAChB,EA+Ic6D,cAtJd,WACE/D,EAAa,UACf,IAsJY5wB,cAAC6oB,IAAI,CACH9X,MAAI,EACJ1L,UAAW2I,YAAK3K,EAAQwqB,eAAgBxqB,EAAQyqB,YAChDtmB,MAAO,CACLK,SAAW,QAAO,IAAM8oB,YACxB4D,UAAY,QAAO,IAAM5D,aACzB5wB,SAEFC,cAAC0T,IAAU,CACTlR,KAAM0tB,EACN3b,YAAaub,EACbhc,eAAgBic,EAChBnb,UAAWwb,EACXxgB,gBA7KhB,SAAkCpN,GAChC2tB,EAAiB3tB,EACnB,aAiLMxC,cAAA,OAAKqF,UAAWuT,EAAgBvV,EAAQkrB,gBAAkBlrB,EAAQirB,iBAAiBvuB,SACjFC,cAAC40B,IAAgB,CACfvb,gBAAiB+V,EACjBhW,gBAAiBA,EACjBX,aAAcA,EACdS,aAAcA,EACdN,cAAeA,EACfF,iBAAkBA,UAM9B,C","file":"static/js/main.ae109394.chunk.js","sourcesContent":["function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 1213;","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport App from '../App';\n\nexport default function AppRouter(props) {\n  return (\n    <Switch>\n      <Route path=\"/share/:text\" component={App} />\n      <Route path=\"/gist/:id\" component={App} />\n      <Route path=\"\" exact component={App} />\n    </Switch>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport AppRouter from './utils/AppRouter';\nimport * as serviceWorker from './serviceWorker';\nimport { HashRouter } from 'react-router-dom';\n\nReactDOM.render(\n  <React.StrictMode>\n    <HashRouter basename=\"/\">\n      <AppRouter />\n    </HashRouter>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React, { useState } from 'react';\nimport { deflateSync } from 'browserify-zlib';\nimport { CopyToClipboard } from 'react-copy-to-clipboard';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Link as LinkIcon, FileCopy } from '@material-ui/icons';\nimport {\n  Button,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  IconButton,\n  Tooltip,\n  Link,\n  TextField,\n  Box\n} from '@material-ui/core';\nimport { generateLink } from '../utils/BitlyWorker';\nimport { theme } from '../App';\n\nconst useStyles = makeStyles((theme) => ({\n  iconButton: {\n    color: theme.palette.common.white,\n    padding: '3px'\n  },\n  textArea: {\n    width: '100%',\n    color: theme.palette.text.primary,\n    fontWeight: 'bold'\n  },\n  copyBox: {\n    backgroundColor: theme.palette.common.lightGrey,\n    borderRadius: 2,\n    display: 'flex',\n    justifyContent: 'space-between',\n    alignItems: 'center',\n    paddingLeft: '3%',\n    textOverflow: 'ellipsis'\n  }\n}));\n\nexport default function ShareLink(props) {\n  const classes = useStyles();\n  const [openShare, setOpenShare] = useState(false);\n  const [shareError, setShareError] = useState(false);\n  const [openGist, setOpenGist] = useState(false);\n  const [openGistError, setOpenGistError] = useState(false);\n  const [copyTip, setCopyTip] = useState('Copy to Clipboard');\n  const [{ fshCopied, fshCopyButton }, setFshCopied] = useState({\n    fshCopied: false,\n    fshCopyButton: 'Copy FSH to Clipboard'\n  });\n  const [link, setLink] = useState();\n  const [gistLink, setGistLink] = useState();\n  const [showCreateGistButton, setshowCreateGistButton] = useState(true);\n\n  const updateGistLink = (event) => {\n    const gistId = event.target.value.match(/gist\\.github\\.com\\/[^/]+\\/(.+)/)?.[1];\n    if (gistId) {\n      setGistLink(`https://fshschool.org/FSHOnline/#/gist/${gistId}`);\n    }\n  };\n\n  const handleShareError = () => {\n    setShareError(true);\n    handleOpenGist();\n  };\n\n  const handleOpenGist = () => {\n    setOpenShare(false);\n    setOpenGist(true);\n    setGistLink('');\n    setFshCopied({ fshCopied: false, fshCopyButton: 'Copy FSH to Clipboard' });\n  };\n\n  const handleCloseGist = () => {\n    setOpenGist(false);\n    setShareError(false);\n  };\n\n  const handleGenerateGistLink = () => {\n    if (gistLink) {\n      handleCloseGist();\n      setLink(gistLink);\n      setOpenShare(true);\n      setCopyTip('Copy to Clipboard');\n      setshowCreateGistButton(false);\n    } else {\n      setOpenGistError(true);\n    }\n  };\n\n  const handleCloseGistError = () => {\n    setOpenGistError(false);\n  };\n\n  const handleOpenShare = async () => {\n    let encoded;\n    if (\n      props.config?.canonical ||\n      props.config?.version ||\n      props.config?.fhirVersion.length > 0 ||\n      props.config?.dependencies\n    ) {\n      encoded = deflateSync(\n        JSON.stringify({\n          c: props.config?.canonical,\n          v: props.config?.version,\n          f: props.config?.fhirVersion,\n          d: props.config?.dependencies\n        }) +\n          '\\n' +\n          props.shareText\n      ).toString('base64');\n    } else {\n      encoded = deflateSync(props.shareText).toString('base64');\n    }\n    const longLink = `https://fshschool.org/FSHOnline/#/share/${encoded}`;\n    const bitlyLink = await generateLink(longLink);\n    if (bitlyLink.errorNeeded === true) {\n      handleShareError();\n    } else {\n      // Removes the encoded data from the end of the url, starting at index 15\n      const bitlySlice = bitlyLink.link.slice(15);\n      const displayLink = `https://fshschool.org/FSHOnline/#/share/${bitlySlice}`;\n      setLink(displayLink);\n      setOpenShare(true);\n      setCopyTip('Copy to Clipboard');\n      setshowCreateGistButton(true);\n    }\n  };\n\n  const handleCloseShare = () => {\n    setOpenShare(false);\n    setShareError(false);\n  };\n\n  const handleFSHcopy = () => {\n    setFshCopied({ fshCopied: true, fshCopyButton: 'FSH Copied to Clipboard' });\n  };\n\n  return (\n    <>\n      <Tooltip title=\"Share FSH\" placement=\"top\" arrow>\n        <IconButton name=\"Share FSH\" className={classes.iconButton} onClick={handleOpenShare}>\n          <LinkIcon fontSize=\"small\" style={{ transform: 'rotate(-45deg)' }} />\n        </IconButton>\n      </Tooltip>\n      <Dialog open={openShare} onClose={handleCloseShare} aria-labelledby=\"form-dialog-title\" maxWidth=\"md\" fullWidth>\n        <DialogTitle id=\"form-dialog-title\">Share</DialogTitle>\n        <DialogContent>\n          <DialogContentText>Use this link to share your FSH with others!</DialogContentText>\n          <Box className={classes.copyBox}>\n            <Box maxWidth=\"90%\" textOverflow=\"ellipsis\" overflow=\"hidden\">\n              {link}\n            </Box>\n            <Tooltip title={copyTip} placement=\"top\" arrow>\n              <CopyToClipboard text={link} onCopy={() => setCopyTip('Link Copied')}>\n                <IconButton style={{ borderRadius: '0%' }}>\n                  <FileCopy />\n                </IconButton>\n              </CopyToClipboard>\n            </Tooltip>\n          </Box>\n        </DialogContent>\n        <DialogActions>\n          {showCreateGistButton && (\n            <Button onClick={handleOpenGist} color=\"primary\" style={{ align: 'left' }}>\n              Create Link with Gist\n            </Button>\n          )}\n          <Box style={{ flex: '1 0 0', hidden: true }} />\n          <Button onClick={handleCloseShare} color=\"primary\">\n            Done\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Dialog open={openGist} onClose={handleCloseGist} aria-labelledby=\"alert-dialog-title\" maxWidth=\"md\" fullWidth>\n        <DialogTitle id=\"alert-dialog-title\">Share with Gist</DialogTitle>\n        {shareError && (\n          <DialogContent style={{ color: theme.palette.common.red }}>\n            Your FSH content is too long to share directly. Please use a Gist to share.\n          </DialogContent>\n        )}\n        <DialogContent>\n          Create a{' '}\n          <Link id=\"gistURL\" href=\"https://gist.github.com/\" target=\"_blank\">\n            Gist\n          </Link>{' '}\n          and paste the URL below to generate a shareable FSH Online link.\n          <TextField id=\"gistURLText\" label=\"Gist URL\" fullWidth onChange={updateGistLink} />\n        </DialogContent>\n        <DialogActions style={{ bottom: 0, right: 0 }}>\n          <Button onClick={handleCloseGist} color=\"primary\">\n            Cancel\n          </Button>\n          <Box style={{ flex: '1 0 0', hidden: true }} />\n          <CopyToClipboard text={props.shareText} onCopy={handleFSHcopy} style={{ align: 'left' }}>\n            <Button color={fshCopied ? 'secondary' : 'primary'}>{fshCopyButton}</Button>\n          </CopyToClipboard>\n          <Button color=\"primary\" onClick={handleGenerateGistLink} style={{ align: 'left' }}>\n            Generate Link from Gist\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Dialog open={openGistError} onClose={handleCloseGistError} aria-labelledby=\"alert-dialog-title\" maxWidth=\"lg\">\n        <DialogTitle id=\"alert-dialog-title\">Error Creating Gist Link</DialogTitle>\n        <DialogContent>\n          <DialogContentText>Could not generate a link from your Gist URL. Ensure the URL is valid.</DialogContentText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseGistError} color=\"primary\" autoFocus>\n            Keep Swimming!\n          </Button>\n        </DialogActions>\n      </Dialog>\n    </>\n  );\n}\n","import React, { useState, useContext } from 'react';\nimport clsx from 'clsx';\nimport { upperFirst } from 'lodash';\nimport { Button, Box, Drawer, IconButton, Tooltip } from '@material-ui/core';\nimport { ChevronLeft, ChevronRight, Delete, FileCopy, SaveAlt } from '@material-ui/icons';\nimport { UnControlled as ReactCodeMirror } from 'react-codemirror2';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CodeMirror from 'codemirror';\nimport { ExpandedConsoleContext } from '../App';\nimport ShareLink from './ShareLink';\nimport '../style/CodeMirrorComponent.css';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/material.css';\nimport 'codemirror/addon/fold/foldgutter.css';\nimport 'codemirror/addon/scroll/simplescrollbars.css';\nrequire('codemirror/addon/mode/simple');\nrequire('codemirror/addon/edit/closebrackets');\nrequire('codemirror/addon/display/placeholder');\nrequire('codemirror/addon/comment/comment');\nrequire('codemirror/addon/fold/foldgutter');\nrequire('codemirror/addon/fold/brace-fold');\nrequire('codemirror/mode/xml/xml');\nrequire('codemirror/mode/javascript/javascript');\nrequire('codemirror/addon/scroll/simplescrollbars');\n\n// Define FSH syntax highlighting\n// Regular expressions from https://github.com/standardhealth/vscode-language-fsh/blob/master/syntaxes/fsh.tmLanguage.json\nCodeMirror.defineSimpleMode('fsh', {\n  meta: {\n    lineComment: '//'\n  },\n  start: [\n    // The regex matches the token, the token property contains the type\n    {\n      regex: /\"(?:[^\\\\]|\\\\.)*?(?:\"|$)/,\n      token: 'atom'\n    },\n    {\n      regex:\n        /\\b(Alias|Characteristics|Context|CodeSystem|Expression|Extension|Description|Id|Instance|InstanceOf|Invariant|Logical|Mapping|Mixins|Parent|Profile|Resource|RuleSet|Severity|Source|Target|Title|Usage|ValueSet|XPath)(?=\\s*:)\\b/,\n      token: 'keyword'\n    },\n    {\n      // NOTE: Original regex has (?<=\\s|^) at start and (?=\\s) at the end, and (?<=\\\\bfrom\\\\s*) before 'system'.\n      // However, there are known shortcomings with look ahead/look behind with the simple mode approach\n      // NOTE: \"from system\" must come before \"from\" in order to properly match the full phrase.\n      regex:\n        /(\\s|^)(and|codes|contains|descendent-of|exclude|exists|from system|from|generalizes|include|in|insert|is-a|is-not-a|named|not-in|obeys|only|or|regex|units|valueset|where|D|MS|N|SU|TU|\\\\?!)(\\s|$)/,\n      token: 'def'\n    },\n    {\n      regex: /(\\(\\s*)(exactly|example|extensible|preferred|required)(\\s*\\))/,\n      token: 'def'\n    },\n    {\n      regex: /\\b(CodeableReference|Reference|Canonical)\\s*\\(/,\n      push: 'closingParen', // Matches the closing parenthesis while not highlighting the content between ( )\n      token: 'atom'\n    },\n    {\n      regex: /\\*|->|=|\\+|:/,\n      token: 'def'\n    },\n    {\n      regex: /\\b(https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_+.~#?&//=]*))\\b/,\n      token: 'atom'\n    },\n    {\n      // NOTE: Original regex has (?<=\\s|^) at start and (?=\\s) at end\n      regex: /(\\s|^)(true|false)(\\s|$)/,\n      token: 'string'\n    },\n    {\n      // NOTE: Original regex has (?<=\\s|^) and (?=\\s) at end\n      regex: /(\\s|^)(-?\\d+(\\.\\d+)?)(\\s|^)/, // numbers\n      token: 'string'\n    },\n    {\n      regex: /#\"(?:\\\\.|[^\\\\\"])*\"/, // #\"quoted code\"\n      token: 'string'\n    },\n    {\n      regex: /#[^\\s]*/, // #code\n      token: 'string'\n    },\n    {\n      regex: /'.*'/, // 'ucum'\n      token: 'string'\n    },\n    // The following two regex should be combined into: /(\\s|^)\\/\\/.*/\n    // However, the ^ doesn't work as expected. See sol section: https://codemirror.net/demo/simplemode.html\n    // Instead, we break them into two separate cases:\n    // the comment is preceded by whitespace and the comment is at the start of a line.\n    { regex: /\\s\\/\\/.*/, token: 'comment' },\n    { regex: /\\/\\/.*/, token: 'comment', sol: true },\n    // Start of multiline comment\n    { regex: /\\/\\*/, token: 'comment', next: 'comment' }\n  ],\n  closingParen: [\n    {\n      regex: /\\)/,\n      pop: true,\n      token: 'atom'\n    }\n  ],\n  comment: [\n    { regex: /.*?\\*\\//, token: 'comment', next: 'start' },\n    { regex: /.*/, token: 'comment' }\n  ]\n});\n\nconst drawerWidth = 200;\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    height: '100%'\n  },\n  header: {\n    fontFamily: 'Open Sans',\n    color: theme.palette.common.white,\n    background: theme.palette.common.darkerGrey,\n    padding: '0px',\n    paddingLeft: '29px', // width of code mirror gutter\n    height: '34px', // 24px + 10px of padding is total height\n    display: 'flex',\n    justifyContent: 'space-between',\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  headerShift: {\n    width: `calc(100% - ${drawerWidth}px - 29px)`,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginRight: drawerWidth\n  },\n  headerLabel: {\n    lineHeight: '34px',\n    float: 'left',\n\n    // Ellipse for long resource ids\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis'\n  },\n  headerActionGroup: {\n    paddingRight: '10px'\n  },\n  headerActions: {\n    alignItems: 'center',\n    display: 'flex'\n  },\n  iconButton: {\n    color: theme.palette.common.white,\n    padding: '3px'\n  },\n  drawer: {\n    width: drawerWidth,\n    flexShrink: 0\n  },\n  drawerPaper: {\n    width: drawerWidth,\n    border: 'none',\n    // necessary for content to be TopBar and in line with editor\n    height: 'calc(100vh - 116px - 34px)',\n    top: '116px'\n  },\n  drawerPaperExpandedConsole: {\n    height: 'calc(100vh - 116px - 300px)'\n  },\n  drawerHeader: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-start',\n    // Color to match header\n    color: theme.palette.common.white,\n    background: theme.palette.common.darkerGrey,\n    height: '34px', // Same height as headers on CodeMirror editors\n    minHeight: '34px'\n  },\n  drawerHeaderIcon: {\n    padding: '0px',\n    color: theme.palette.common.white,\n    background: theme.palette.success.main,\n    '&:hover': {\n      background: theme.palette.success.light\n    },\n    borderRadius: 0,\n    height: '100%',\n    width: '34px',\n    minWidth: '34px' // width and minWidth match the height so button is a square\n  },\n  content: {\n    flexGrow: 1,\n    width: '100%',\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  contentShift: {\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create(['margin', 'width'], {\n      easing: theme.transitions.easing.easeOut,\n      duration: theme.transitions.duration.enteringScreen\n    }),\n    marginRight: 0\n  }\n}));\n\nexport default function CodeMirrorComponent(props) {\n  const classes = useStyles();\n  const expandedConsoleContext = useContext(ExpandedConsoleContext);\n  const [drawerOpen, setDrawerOpen] = useState(true);\n\n  const handleDrawerOpen = () => {\n    setDrawerOpen(true);\n  };\n\n  const handleDrawerClose = () => {\n    setDrawerOpen(false);\n  };\n\n  //Updates both the text state with the codemirror value\n  function updateText(text) {\n    props.updateTextValue(text);\n  }\n\n  const renderActionIcon = (Icon, label, onClick, style = {}) => {\n    return (\n      <Tooltip title={upperFirst(label)} placement=\"top\" arrow>\n        <IconButton name={label} className={classes.iconButton} aria-label={label} onClick={onClick}>\n          <Icon fontSize=\"small\" style={style} />\n        </IconButton>\n      </Tooltip>\n    );\n  };\n\n  const renderActionIcons = () => {\n    // Render only specified actions\n    return (\n      <div className={classes.headerActions}>\n        <div className={classes.headerActionGroup}>\n          {props.mode === 'fsh' && !props.isExamples && <ShareLink shareText={props.value} config={props.config} />}\n          {props.copy && renderActionIcon(FileCopy, 'copy', () => {})}\n          {props.save && renderActionIcon(SaveAlt, 'save', props.save)}\n          {props.delete && renderActionIcon(Delete, 'delete', props.delete)}\n        </div>\n        {props.renderDrawer && !drawerOpen && (\n          <IconButton name=\"expand\" className={classes.drawerHeaderIcon} aria-label=\"expand\" onClick={handleDrawerOpen}>\n            <ChevronLeft />\n          </IconButton>\n        )}\n      </div>\n    );\n  };\n\n  const renderDrawer = () => {\n    return (\n      <Drawer\n        className={classes.drawer}\n        data-testid={'editor-drawer'}\n        variant=\"persistent\"\n        anchor=\"right\"\n        open={drawerOpen}\n        classes={{\n          paper: clsx(classes.drawerPaper, expandedConsoleContext && classes.drawerPaperExpandedConsole)\n        }}\n      >\n        <div className={classes.drawerHeader}>\n          <Button\n            name=\"collapse\"\n            aria-label=\"collapse\"\n            className={classes.drawerHeaderIcon}\n            onClick={handleDrawerClose}\n          >\n            <ChevronRight />\n          </Button>\n        </div>\n        {props.renderDrawer()}\n      </Drawer>\n    );\n  };\n\n  return (\n    <Box className={classes.box}>\n      <div\n        className={clsx(classes.header, {\n          [classes.headerShift]: props.renderDrawer && drawerOpen\n        })}\n      >\n        <div title={props.name} className={classes.headerLabel}>\n          {props.name}\n        </div>\n        {renderActionIcons()}\n      </div>\n      <ReactCodeMirror\n        className={clsx('react-codemirror2', props.renderDrawer && classes.content, {\n          [classes.contentShift]: props.renderDrawer && drawerOpen\n        })}\n        value={props.initialText}\n        options={{\n          mode: props.mode,\n          theme: 'material',\n          placeholder: props.placeholder,\n          scrollbarStyle: 'overlay',\n          autoCloseBrackets: true,\n          lineNumbers: true,\n          foldGutter: true,\n          readOnly: props.isExamples,\n          gutters: ['CodeMirror-linenumbers', 'CodeMirror-foldgutter'],\n          extraKeys: {\n            Tab: (cm) => {\n              // Replace tab character with two spaces\n              // Example described here: https://codemirror.net/doc/manual.html#keymaps\n              cm.replaceSelection('  ');\n            },\n            'Ctrl-/': 'toggleComment',\n            'Cmd-/': 'toggleComment',\n            'Ctrl-Q': (cm) => {\n              cm.foldCode(cm.getCursor());\n            }\n          }\n        }}\n        onChange={(editor, data, value) => {\n          updateText(value);\n        }}\n      />\n      {props.renderDrawer && renderDrawer()}\n    </Box>\n  );\n}\n","const BitlyClient = require('bitly').BitlyClient;\nconst bitly = new BitlyClient(process.env.REACT_APP_BITLY_KEY);\n\nexport async function generateLink(longLink) {\n  return new Promise((resolve) => {\n    bitly\n      .shorten(longLink)\n      .then(function (result) {\n        resolve({ link: result.link, errorNeeded: false });\n      })\n      .catch(function (error) {\n        if (process.env.REACT_APP_BITLY_KEY == null) {\n          console.error(\n            'Error: REACT_APP_BITLY_KEY needs to be set as an environment variable in order to share FSH Online links.'\n          );\n          resolve({ link: undefined, errorNeeded: true });\n        } else {\n          resolve({ link: undefined, errorNeeded: true });\n        }\n      });\n  });\n}\n\nexport async function expandLink(encodedFsh) {\n  const bitlyURL = `https://bit.ly/${encodedFsh.text}`;\n  return new Promise((resolve) => {\n    bitly\n      .expand(bitlyURL)\n      .then(function (result) {\n        resolve(result);\n      })\n      .catch(function (error) {\n        console.error(error);\n      });\n  });\n}\n","import React from 'react';\nimport { Button, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\n\nexport default function DeleteConfirmationModal(props) {\n  return (\n    <Dialog open={props.isOpen} onClose={props.handleCloseModal} aria-labelledby=\"delete-confirmation-dialog\">\n      <DialogTitle id=\"delete-confirmation-dialog-title\">Delete {props.title}</DialogTitle>\n      <DialogContent>\n        <DialogContentText>\n          Are you sure you want to delete {props.item}? This action cannot be undone.\n        </DialogContentText>\n      </DialogContent>\n      <DialogActions>\n        <Button onClick={props.handleCloseModal} color=\"primary\" autoFocus>\n          Cancel\n        </Button>\n        <Button onClick={props.handleDelete} color=\"secondary\">\n          Delete\n        </Button>\n      </DialogActions>\n    </Dialog>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport FileSaver from 'file-saver';\nimport { groupBy, isEqual } from 'lodash';\nimport { makeStyles } from '@material-ui/core/styles';\nimport clsx from 'clsx';\nimport { Button, List, ListItem, Tooltip } from '@material-ui/core';\nimport { Add, ErrorOutline } from '@material-ui/icons';\nimport CodeMirrorComponent from './CodeMirrorComponent';\nimport DeleteConfirmationModal from './DeleteConfirmationModal';\n\nconst useStyles = makeStyles((theme) => ({\n  fileTreeContent: {\n    overflowY: 'scroll',\n    height: '100%'\n  },\n  button: {\n    color: theme.palette.common.white,\n    background: theme.palette.success.main,\n    '&:hover': {\n      background: theme.palette.success.dark\n    },\n    border: '8px solid white',\n    fontSize: '13px',\n    width: '100%'\n  },\n  list: {\n    padding: '8px',\n    paddingLeft: '0px',\n    paddingBottom: '0px',\n    fontSize: '13px'\n  },\n  listItemError: {\n    paddingTop: '5px',\n    paddingBottom: '5px',\n    margin: 0\n  },\n  listItem: {\n    background: theme.palette.common.lightestGrey,\n    paddingTop: '5px',\n    paddingBottom: '5px',\n    marginTop: '5px',\n    marginBottom: '5px',\n    paddingLeft: '5px',\n    // paddingRight is driven by ListItem (16px)\n    margin: 0,\n    '&:hover': {\n      background: theme.palette.common.lightGrey\n    },\n\n    // Ellipse for long resource ids\n    display: 'block',\n    whiteSpace: 'nowrap',\n    overflow: 'hidden',\n    textOverflow: 'ellipsis'\n  },\n  listItemSelected: {\n    background: theme.palette.common.editorGrey, // editor background color\n    color: theme.palette.common.white,\n    '&:hover': {\n      background: theme.palette.common.darkestGrey\n    }\n  },\n  listHeader: {\n    padding: '5px',\n    paddingLeft: '15px'\n  },\n  listIcon: {\n    color: theme.palette.success.main,\n    verticalAlign: 'middle',\n    fontSize: '13px',\n    paddingLeft: '3px',\n    paddingRight: '3px'\n  },\n  listIconError: {\n    color: theme.palette.common.red\n  },\n  blankIcon: {\n    paddingLeft: '19px' // width of icon\n  }\n}));\n\nconst checkFshType = (def) => {\n  // The criteria in this function is based on isSDForInstance in GoFSH (LakeOfFHIR.ts)\n  // A Profile has kind \"resource\", \"complex-type\", or \"primitive-type\" and derivation \"constraint\".\n  // An Extension has kind \"complex-type\", derivation \"constraint\", and type \"Extension\". It's a special case of Profile.\n  // A Logical has kind \"logical\" and derivation \"specialization\".\n  // A Resource has kind \"resource\" and derivation \"specialization\".\n  // Any other combination of values for kind and derivation represents an Instance.\n  if (def.resourceType === 'ValueSet' || def.resourceType === 'CodeSystem') {\n    return def.resourceType;\n  } else if (def.resourceType === 'StructureDefinition') {\n    if (def.derivation === 'specialization') {\n      if (def.kind === 'resource') {\n        return 'Resource';\n      } else if (def.kind === 'logical') {\n        return 'Logical Model';\n      }\n    } else if (def.derivation === 'constraint') {\n      if (def.kind === 'complex-type' && def.type === 'Extension') {\n        return 'Extension';\n      } else if (['resource', 'complex-type', 'primitive-type', 'logical'].includes(def.kind)) {\n        return 'Profile';\n      }\n    }\n  }\n\n  // We could have an instance of a SD that can't be a Profile, Extension, Logical, or Resource\n  // So we want to check for any resource that hasn't already been categorized\n  if (def.resourceType != null) {\n    return 'Instance';\n  }\n\n  // Otherwise we don't know the type. This will default to 'Unknown Type' if it is missing.\n  return null;\n};\n\nconst checkIdToDisplay = (def) => {\n  if (def.id) {\n    return def.id;\n  }\n  if (def.resourceType) {\n    // Logical Model instances don't always have an id, so fall back to last part of the resourceType\n    // All other definitions are StructureDefinitions/ValueSets/CodeSystems, which are guaranteed to have id\n    // so the only time this case is reached is through Logical Model Instances or someone typing/removing an id\n    return `Instance of ${def.resourceType.substring(def.resourceType.lastIndexOf('/') + 1)}`;\n  }\n  // If can't determine an id or a best guess from the resourceType, just return 'Untitled'\n  return 'Untitled';\n};\n\n// Flatten the package so we can render and navigate it more easily,\n// but keep high level attributes we'll need accessible\nconst getIterablePackage = (defsPackage) => {\n  const defArray = [\n    ...defsPackage.profiles,\n    ...defsPackage.extensions,\n    ...defsPackage.logicals,\n    ...defsPackage.resources,\n    ...defsPackage.instances,\n    ...defsPackage.valueSets,\n    ...defsPackage.codeSystems\n  ];\n  return defArray.map((def) => ({\n    resourceType: checkFshType(def),\n    id: checkIdToDisplay(def),\n    def: JSON.stringify(def, null, 2)\n  }));\n};\n\nexport default function JSONOutput(props) {\n  const classes = useStyles();\n  const [initialText, setInitialText] = useState('');\n  const [fhirDefinitions, setFhirDefinitions] = useState([{ resourceType: null, id: 'Untitled', def: null }]);\n  const { setShowNewText, updateTextValue: propsUpdateText } = props;\n  const [currentDef, setCurrentDef] = useState(0);\n  const [defsWithErrors, setDefsWithErrors] = useState([]);\n  const [openDeleteConfirmation, setOpenDeleteConfirmation] = useState(false);\n\n  useEffect(() => {\n    // This case represents when we receive a new Package from SUSHI\n    if (props.showNewText && !isEqual(props.text, [''])) {\n      setShowNewText(false); // Indicate that we no longer have new data we need to load so we don't come back here too early\n      let packageJSON;\n      try {\n        packageJSON = JSON.parse(props.text);\n      } catch (e) {\n        packageJSON = {\n          profiles: [],\n          extensions: [],\n          logicals: [],\n          resources: [],\n          instances: [],\n          valueSets: [],\n          codeSystems: []\n        };\n      }\n      const iterablePackage = getIterablePackage(packageJSON);\n      setFhirDefinitions(iterablePackage);\n      setCurrentDef(0);\n      setInitialText(iterablePackage.length > 0 ? iterablePackage[0].def : '');\n      propsUpdateText(iterablePackage); // The value of text kept on props should be the iterable and stringified package\n    } else if (props.isWaiting) {\n      setInitialText(null); // Reset the text to null when loading to reset the editor and display placeholder text\n      setFhirDefinitions([]); // Reset FHIR definitions to clear out file tree\n    }\n  }, [props.text, props.showNewText, props.isWaiting, propsUpdateText, setShowNewText]);\n\n  const updateTextValue = (text) => {\n    // We're waiting for a new package to load, so we don't want the editor to update yet\n    if (props.isWaiting) return;\n\n    // Update the definition we're currently editing\n    const updatedDefs = [...fhirDefinitions];\n\n    // Check if there is a JSON syntax error in the editor\n    try {\n      // If the editor is blank, we want to consider it an empty JSON object so that it is valid JSON\n      const latestJSON = text === '' ? {} : JSON.parse(text);\n      // If there was an error, mark it as resolved\n      if (defsWithErrors.includes(currentDef)) {\n        const newErrors = [...defsWithErrors];\n        newErrors.splice(defsWithErrors.indexOf(currentDef), 1);\n        setDefsWithErrors(newErrors);\n      }\n\n      // If it's new, set metadata (definition text is set below)\n      if (!fhirDefinitions[currentDef]) {\n        updatedDefs[currentDef] = {\n          resourceType: checkFshType(latestJSON),\n          id: checkIdToDisplay(latestJSON)\n        };\n      }\n\n      // Update resource type if it has changed\n      if (!fhirDefinitions[currentDef] || latestJSON.resourceType !== fhirDefinitions[currentDef].resourceType) {\n        updatedDefs[currentDef].resourceType = checkFshType(latestJSON);\n      }\n\n      // Update id if it has changed or it is new\n      if (!fhirDefinitions[currentDef] || latestJSON.id !== fhirDefinitions[currentDef].id) {\n        updatedDefs[currentDef].id = checkIdToDisplay(latestJSON);\n      }\n    } catch (e) {\n      // Invalid JSON typed. Keep track of index.\n      if (!defsWithErrors.includes(currentDef)) {\n        const newErrors = [...defsWithErrors];\n        newErrors.push(currentDef);\n        setDefsWithErrors(newErrors);\n      }\n    }\n\n    // Update the text - regardless if it was valid JSON\n    if (updatedDefs[currentDef]) {\n      updatedDefs[currentDef].def = text;\n    }\n    setFhirDefinitions(updatedDefs);\n    props.updateTextValue(updatedDefs);\n\n    // This is a bit of a hack to make sure the editor can be reset by a setInitialText(null)\n    if (initialText === null) {\n      setInitialText(text);\n    }\n  };\n\n  const addDefinition = () => {\n    const updatedDefs = [...fhirDefinitions];\n    updatedDefs.push({ resourceType: null, id: 'Untitled', def: null });\n    setCurrentDef(updatedDefs.length - 1);\n    setFhirDefinitions(updatedDefs);\n    setInitialText(null);\n    props.updateTextValue(updatedDefs);\n  };\n\n  const handleCloseAndDelete = () => {\n    const index = currentDef;\n    const updatedDefs = [...fhirDefinitions];\n    updatedDefs.splice(index, 1); // Remove definition to be deleted\n    if (updatedDefs.length === 0) {\n      // Ensure list is not empty so there is always a definition in the file tree\n      updatedDefs.push({ resourceType: null, id: 'Untitled', def: null });\n    }\n    setFhirDefinitions(updatedDefs);\n\n    // If we deleted the currently viewed definition or any before it, update it\n    if (index <= currentDef) {\n      let newCurrentDef = 0;\n      if (index < currentDef) {\n        newCurrentDef = currentDef - 1;\n      }\n      setCurrentDef(newCurrentDef);\n      const newCurrentDefText = updatedDefs.length > 0 ? updatedDefs[newCurrentDef].def : null;\n      setInitialText(newCurrentDefText);\n    }\n\n    // Update error tracking\n    const newErrors = [...defsWithErrors];\n    if (defsWithErrors.includes(index)) {\n      // If the definition had an error, remove it from the list\n      newErrors.splice(defsWithErrors.indexOf(index), 1);\n    }\n    // Shift any indices that came after the deleted definition to properly track errors\n    const shiftedErrors = newErrors.map((i) => (i < index ? i : i - 1));\n    setDefsWithErrors(shiftedErrors);\n\n    setOpenDeleteConfirmation(false);\n    props.updateTextValue(updatedDefs);\n  };\n\n  const handleOpenDeleteConfirmation = () => {\n    setOpenDeleteConfirmation(true);\n  };\n\n  const handleCloseDeleteConfirmation = () => {\n    setOpenDeleteConfirmation(false);\n  };\n\n  const handleSave = (def, defaultName) => {\n    let resourceObj;\n    try {\n      resourceObj = JSON.parse(def);\n    } catch {\n      /* Ignore errors and just default to name without resourceType */\n    }\n    FileSaver.saveAs(\n      new Blob([def]),\n      resourceObj?.resourceType && resourceObj?.id\n        ? `${resourceObj.resourceType}-${resourceObj.id}.json`\n        : `${name}.json`\n    );\n  };\n\n  const renderDeleteModal = () => {\n    const defToDelete = fhirDefinitions[currentDef];\n    if (!defToDelete) {\n      return;\n    }\n    const type = defToDelete.resourceType || 'Unknown Type';\n    const id = defToDelete.id || 'Untitled';\n    return (\n      <DeleteConfirmationModal\n        title={'FHIR JSON'}\n        item={`${type} ${id}`}\n        isOpen={openDeleteConfirmation}\n        handleCloseModal={handleCloseDeleteConfirmation}\n        handleDelete={handleCloseAndDelete}\n      />\n    );\n  };\n\n  const renderFileTreeView = () => {\n    const order = [\n      'Profiles',\n      'Extensions',\n      'Logical Models',\n      'Resources',\n      'ValueSets',\n      'CodeSystems',\n      'Instances',\n      'Unknown Type'\n    ];\n    const grouped = groupBy(fhirDefinitions, (val) => {\n      if (val && val.resourceType) return `${val.resourceType}s`;\n      return 'Unknown Type';\n    });\n\n    return Object.keys(grouped)\n      .sort((a, b) => order.indexOf(a) - order.indexOf(b)) // Sort so we keep a defined order of types in the tree\n      .map((key) => {\n        return (\n          <List component=\"nav\" key={key} className={classes.list}>\n            <div className={classes.listHeader}>{key}</div>\n            {grouped[key]\n              .sort((a, b) => {\n                const aId = a.id ? a.id : 'Untitled'; // Treat missing or blank ids as \"Untitled\"\n                const bId = b.id ? b.id : 'Untitled';\n                return aId.toLowerCase() < bId.toLowerCase() ? -1 : aId.toLowerCase() > bId.toLowerCase() ? 1 : 0;\n              }) // Sort ids alphabetically\n              .map((def, i) => {\n                const currentIndex = fhirDefinitions.indexOf(def);\n                const isError = defsWithErrors.includes(currentIndex);\n                return (\n                  <ListItem\n                    button\n                    key={i}\n                    title={def?.id || 'Untitled'}\n                    data-testid={`${key}-defId`}\n                    className={clsx(\n                      classes.listItem,\n                      isError && classes.listItemError,\n                      currentIndex === currentDef && classes.listItemSelected\n                    )}\n                    onClick={() => {\n                      setCurrentDef(currentIndex);\n                      setInitialText(def.def);\n                    }}\n                  >\n                    {defsWithErrors.includes(currentIndex) ? (\n                      <Tooltip title=\"Invalid JSON\" placement=\"top\" arrow>\n                        <ErrorOutline className={clsx(classes.listIcon, classes.listIconError)} />\n                      </Tooltip>\n                    ) : (\n                      <span className={classes.blankIcon} />\n                    )}\n                    {def?.id || 'Untitled'}\n                  </ListItem>\n                );\n              })}\n          </List>\n        );\n      });\n  };\n\n  const renderDrawer = () => {\n    return (\n      <>\n        <Button className={classes.button} startIcon={<Add />} onClick={addDefinition}>\n          New JSON Editor\n        </Button>\n        <div className={classes.fileTreeContent}>{renderFileTreeView()}</div>\n      </>\n    );\n  };\n\n  const displayValue = fhirDefinitions.length > 0 ? fhirDefinitions[currentDef].def : null;\n  const name = `${fhirDefinitions.length > 0 ? fhirDefinitions[currentDef].id : 'Untitled'}`;\n\n  return (\n    <>\n      <CodeMirrorComponent\n        name={`FHIR JSON: ${name}`}\n        value={displayValue}\n        initialText={initialText}\n        updateTextValue={updateTextValue}\n        mode={'application/json'}\n        placeholder={\n          props.isWaiting\n            ? 'Loading...'\n            : 'Paste or edit single FHIR JSON artifact here... \\nCreate additional FHIR JSON artifacts to the right.'\n        }\n        renderDrawer={renderDrawer}\n        isExamples={false}\n        delete={handleOpenDeleteConfirmation}\n        save={() => handleSave(displayValue, name)}\n      />\n      {openDeleteConfirmation && renderDeleteModal()}\n    </>\n  );\n}\n","import React, { useState } from 'react';\nimport FileSaver from 'file-saver';\nimport CodeMirrorComponent from './CodeMirrorComponent';\nimport DeleteConfirmationModal from './DeleteConfirmationModal';\n\nexport default function FSHOutput(props) {\n  const [openDeleteModal, setOpenDeleteModal] = useState(false);\n\n  const handleOpenDeleteModal = () => {\n    setOpenDeleteModal(!openDeleteModal);\n  };\n\n  const handleCloseAndDelete = () => {\n    setOpenDeleteModal(false);\n    props.setInitialText('');\n  };\n\n  const handleSave = () => {\n    FileSaver.saveAs(new Blob([props.text]), 'FSH.fsh');\n  };\n\n  return (\n    <>\n      <CodeMirrorComponent\n        name={'FSH'}\n        isExamples={false}\n        value={props.text}\n        initialText={props.initialText}\n        updateTextValue={props.updateTextValue}\n        mode={'fsh'}\n        placeholder={props.isWaiting ? 'Loading...' : 'Paste or edit FSH here...'}\n        delete={handleOpenDeleteModal}\n        save={handleSave}\n        config={props.config}\n      />\n      {openDeleteModal && (\n        <DeleteConfirmationModal\n          title={'FHIR Shorthand'}\n          item={'all FSH'}\n          isOpen={openDeleteModal}\n          handleCloseModal={handleOpenDeleteModal}\n          handleDelete={handleCloseAndDelete}\n        />\n      )}\n    </>\n  );\n}\n","import React, { useState, useEffect } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Box, Button, IconButton } from '@material-ui/core';\nimport { ExpandLess, ExpandMore } from '@material-ui/icons';\n\nconst useStyles = makeStyles((theme) => ({\n  consoleControls: {\n    background: theme.palette.common.darkestGrey,\n    height: '34px',\n    boxSizing: 'border-box',\n    display: 'flex;',\n    alignItems: 'center',\n    justifyContent: 'left'\n  },\n  box: {\n    paddingLeft: '29px', // Same padding as header of code mirror\n    color: theme.palette.common.white,\n    background: theme.palette.common.darkestGrey,\n    height: 'calc(100% - 34px)',\n    overflow: 'scroll',\n    boxSizing: 'border-box'\n  },\n  button: {\n    marginRight: '10px',\n    color: theme.palette.common.white,\n    textTransform: 'none',\n    padding: 0\n  },\n  problemsButton: {\n    padding: 0,\n    color: theme.palette.common.white,\n    textTransform: 'none'\n  },\n  expandIcon: {\n    width: '29px', // Lines up with padding,\n    color: theme.palette.common.white,\n    padding: 0\n  },\n  pre: {\n    margin: '0px'\n  },\n  circle: {\n    'border-radius': '50%',\n    'border-style': 'solid',\n    'border-width': '2px',\n    'min-width': '20px',\n    height: '20px',\n    paddingLeft: 1,\n    paddingRight: 1,\n    background: '#263238',\n    'align-items': 'center',\n    display: 'flex',\n    marginLeft: 4,\n    'justify-content': 'center',\n    padding: 0\n  }\n}));\n\nexport default function Console(props) {\n  const classes = useStyles();\n  const [problemsView, setProblemsView] = useState(false);\n  const { problemCount, setExpandConsole } = props;\n\n  useEffect(() => {\n    // When props.problemCount changes and if there is a problem, make sure to open the console.\n    // If the problemCount is 0, we don't need to open it.\n    // The console should be able to be closed, so don't track whether the props.expandConsole value has changed.\n    if (problemCount) {\n      setExpandConsole(true);\n    }\n  }, [problemCount, setExpandConsole]);\n\n  const toggleExpandConsole = () => {\n    props.setExpandConsole(!props.expandConsole);\n  };\n\n  const setMessagesConsole = () => {\n    setProblemsView(false);\n    props.setExpandConsole(true);\n  };\n\n  const setProblemsConsole = () => {\n    setProblemsView(true);\n    props.setExpandConsole(true);\n  };\n\n  return (\n    <>\n      <Box className={classes.consoleControls}>\n        <IconButton\n          onClick={toggleExpandConsole}\n          aria-label={props.expandConsole ? 'collapse console' : 'expand console'}\n          className={classes.expandIcon}\n        >\n          {props.expandConsole ? <ExpandMore /> : <ExpandLess />}\n        </IconButton>\n        <Button onClick={setMessagesConsole} className={classes.button}>\n          <p\n            style={{\n              borderBottom: props.expandConsole && !problemsView ? '1px solid white' : 'none',\n              margin: '0'\n            }}\n          >\n            Console\n          </p>\n        </Button>\n        <Button onClick={setProblemsConsole} className={classes.problemsButton}>\n          <p\n            style={{\n              borderBottom:\n                props.expandConsole && problemsView\n                  ? `1px solid ${!props.problemCount ? 'white' : props.problemColor}`\n                  : 'none',\n              margin: '0'\n            }}\n          >\n            Problems\n          </p>\n          <div\n            className={classes.circle}\n            style={{ borderColor: `${!props.problemCount ? 'white' : props.problemColor}` }}\n          >\n            {props.problemCount}\n          </div>\n        </Button>\n      </Box>\n      <Box style={{ display: props.expandConsole ? 'block' : 'none' }} className={classes.box}>\n        {problemsView\n          ? props.problemMessages.map((message, i) => {\n              return (\n                <pre key={i} className={classes.pre}>\n                  {message}\n                </pre>\n              );\n            })\n          : props.consoleMessages.map((message, i) => {\n              return (\n                <pre key={i} className={classes.pre}>\n                  {message}\n                </pre>\n              );\n            })}\n      </Box>\n    </>\n  );\n}\n","import { utils as sushiUtils } from 'fsh-sushi';\nimport { utils as gofshUtils } from 'gofsh';\n\n// Default the logger to SUSHI's logger, but support switching\n// between the loggers so that any file can import one logger\n// and have the stats tracked correctly\nexport let fshOnlineLogger = sushiUtils.logger;\nexport function setCurrentLogger(loggerName) {\n  if (loggerName === 'sushi') {\n    fshOnlineLogger = sushiUtils.logger;\n  } else if (loggerName === 'gofsh') {\n    fshOnlineLogger = gofshUtils.logger;\n  }\n}\n","import tarStream from 'tar-stream';\nimport zlib from 'zlib';\nimport https from 'https';\nimport { fshOnlineLogger as logger } from './logger';\n\nexport function unzipDependencies(resources, dependency, id) {\n  let returnPackage = { resourceArr: resources, emptyDependencies: [] };\n  return new Promise((resolve) => {\n    https\n      .get(`https://packages.fhir.org/${dependency}/${id}`, function (res) {\n        const extract = tarStream.extract();\n        // Unzip files\n        extract.on('entry', function (header, stream, next) {\n          let buf = '';\n          stream.on('data', function (chunk) {\n            buf += chunk.toString();\n          });\n          stream.on('end', function () {\n            try {\n              const resource = JSON.parse(buf);\n              if (resource.resourceType) {\n                returnPackage.resourceArr.push(resource);\n              }\n            } catch {} //eslint-disable-line no-empty\n            next();\n          });\n          stream.resume();\n        });\n        extract.on('finish', function () {\n          resolve(returnPackage);\n        });\n        if (res.statusCode < 400) {\n          res.pipe(zlib.createGunzip()).pipe(extract);\n          logger.info(`Downloaded ${dependency}#${id}`);\n        } else {\n          if (id === 'current' || id === 'dev') {\n            logger.error(`FSHOnline does not currently support \"current\" or \"dev\" package versions`);\n          } else {\n            logger.error(`Your dependency ${dependency}#${id} could not be loaded. Your output may be invalid.`);\n            returnPackage.emptyDependencies.push(`${dependency}${id}`);\n          }\n          resolve(returnPackage);\n        }\n      })\n      .on('error', (e) => {\n        logger.error('An error occurred while downloading FHIR packages. Your output may be invalid: ', e);\n        returnPackage.emptyDependencies.push(`${dependency}${id}`);\n        resolve(returnPackage);\n      });\n  });\n}\n\nexport function loadDependenciesInStorage(database, resources, dependency, id) {\n  return new Promise((resolve, reject) => {\n    // Loads parsed json into indexDB\n    const transaction = database.transaction([`${dependency}${id}`], 'readwrite');\n    transaction.oncomplete = () => {\n      resolve();\n    };\n    transaction.onerror = (event) => {\n      reject(event);\n    };\n    const objectStore = transaction.objectStore(`${dependency}${id}`, { keyPath: ['id', 'resourceType'] });\n    resources.forEach((res) => {\n      if (res.id && res.resourceType) {\n        objectStore.put(res);\n      }\n    });\n  });\n}\n\nexport function loadAsFHIRDefs(FHIRdefs, database, dependency, id) {\n  // Convert database data into FHIR Definitions\n  return new Promise((resolve, reject) => {\n    let displayLoaded = false;\n    const getData = database\n      .transaction([`${dependency}${id}`], 'readonly')\n      .objectStore(`${dependency}${id}`, { keyPath: ['id', 'resourceType'] })\n      .openCursor();\n    getData.onerror = function () {\n      reject('There is an error getting data out!');\n    };\n    getData.onsuccess = function () {\n      const iterator = getData.result;\n      if (iterator) {\n        displayLoaded = true;\n        FHIRdefs.add(iterator.value);\n        iterator.continue();\n      } else {\n        if (displayLoaded) {\n          logger.info(`Loaded package ${dependency}#${id}`);\n        }\n        resolve(FHIRdefs);\n      }\n    };\n  });\n}\n\nexport function getLatestVersionNumber(dependency) {\n  return new Promise((resolve, reject) => {\n    const { packageId, isAutomatic } = dependency;\n    https.get(`https://packages.fhir.org/${packageId}`, function (res) {\n      let body = '';\n      res.on('data', function (chunk) {\n        body += chunk;\n      });\n      res.on('end', function () {\n        const parsedBody = JSON.parse(body);\n        if (parsedBody?.['dist-tags']?.latest?.length) {\n          resolve(parsedBody['dist-tags'].latest);\n        } else {\n          logger.error(\n            `Could not determine latest released version of ${\n              isAutomatic ? 'automatically-loaded dependency ' : ''\n            }${packageId}.`\n          );\n          reject('no latest version found');\n        }\n      });\n    });\n  });\n}\n","import { flatten } from 'lodash';\nimport { fhirdefs, sushiImport } from 'fsh-sushi';\nimport { getLatestVersionNumber, loadAsFHIRDefs, loadDependenciesInStorage, unzipDependencies } from './Load';\nimport { fshOnlineLogger as logger } from './logger';\n\nconst FHIRDefinitions = fhirdefs.FHIRDefinitions;\nconst FSHTank = sushiImport.FSHTank;\nconst importText = sushiImport.importText;\n\nexport function fillTank(rawFSHes, config) {\n  logger.info('Importing FSH text...');\n  const docs = importText(rawFSHes);\n  return new FSHTank(docs, config);\n}\n\nexport async function loadAndCleanDatabase(defs, dependencies) {\n  dependencies = await resolveDependencies(dependencies);\n\n  let helperUpdate = await checkForDatabaseUpgrade(dependencies);\n  let loadExternalDependenciesReturn = { defs, emptyDependencies: [] };\n\n  if (helperUpdate.shouldUpdate) {\n    loadExternalDependenciesReturn = await loadExternalDependencies(defs, helperUpdate.version + 1, dependencies);\n    defs = loadExternalDependenciesReturn.defs;\n  } else {\n    loadExternalDependenciesReturn = await loadExternalDependencies(defs, helperUpdate.version, dependencies);\n    defs = loadExternalDependenciesReturn.defs;\n  }\n\n  // Cleans out database of any empty objectStores\n  await cleanDatabase(loadExternalDependenciesReturn.emptyDependencies, helperUpdate.version + 2);\n  return defs;\n}\n\nexport function cleanDatabase(emptyDependencies, version, databaseName = 'FSH Playground Dependencies') {\n  const mergedEmpties = flatten(emptyDependencies);\n  return new Promise((resolve, reject) => {\n    let database = null;\n    const OpenIDBRequest = indexedDB.open(databaseName, version);\n    OpenIDBRequest.onsuccess = function (event) {\n      database = event.target.result;\n      database.close();\n      resolve();\n    };\n    OpenIDBRequest.onupgradeneeded = async function (event) {\n      database = event.target.result;\n      let existingObjectStores = database.objectStoreNames;\n\n      // Checks existing objectStores to see if any are empty - failsafe for users who previously had blank objectStores created\n      for (let objectStore of existingObjectStores) {\n        await new Promise((resolve) => {\n          let transaction = event.target.transaction;\n          const objStore = transaction.objectStore(`${objectStore}`).getAll();\n          objStore.onsuccess = (event) => {\n            let items = event.target.result;\n            if (items.length === 0 && !mergedEmpties.includes(objectStore)) {\n              mergedEmpties.push(objectStore);\n            }\n            resolve();\n          };\n        });\n      }\n      // Deletes objectStores that are empty\n      for (let i = 0; i < mergedEmpties.length; i++) {\n        if (existingObjectStores.contains(mergedEmpties[i])) {\n          database.deleteObjectStore(mergedEmpties[i]);\n        }\n      }\n    };\n    OpenIDBRequest.onerror = function (event) {\n      reject(event);\n    };\n  });\n}\n\nexport function checkForDatabaseUpgrade(dependencies, databaseName = 'FSH Playground Dependencies') {\n  let helperReturn = { shouldUpdate: false, version: 1 };\n  return new Promise((resolve, reject) => {\n    let database = null;\n    const OpenIDBRequest = indexedDB.open(databaseName);\n    OpenIDBRequest.onsuccess = function (event) {\n      database = event.target.result;\n      let existingObjectStores = database.objectStoreNames;\n      helperReturn.version = database.version;\n      if (\n        existingObjectStores.length === 0 ||\n        dependencies.length === 0 ||\n        existingObjectStores.contains('resources')\n      ) {\n        helperReturn.shouldUpdate = true;\n        database.close();\n        resolve(helperReturn);\n      } else {\n        dependencies.forEach((dep) => {\n          const { packageId, version } = dep;\n          if (!existingObjectStores.contains(`${packageId}${version}`)) {\n            helperReturn.shouldUpdate = true;\n          }\n        });\n        database.close();\n        resolve(helperReturn);\n      }\n    };\n    OpenIDBRequest.onupgradeneeded = function (event) {\n      database = event.target.result;\n    };\n    OpenIDBRequest.onerror = function (event) {\n      reject(event);\n    };\n  });\n}\n\nexport async function loadExternalDependencies(\n  FHIRdefs,\n  version,\n  dependencies,\n  databaseName = 'FSH Playground Dependencies',\n  shouldUnzip = false\n) {\n  return new Promise((resolve, reject) => {\n    let database = null;\n    let newDependencies = [];\n    let returnPackage = { defs: FHIRDefinitions, emptyDependencies: [] };\n    const OpenIDBRequest = indexedDB.open(databaseName, version);\n\n    // If successful the database exists\n    OpenIDBRequest.onsuccess = async function (event) {\n      database = event.target.result;\n      for (let i = 0; i < dependencies.length; i++) {\n        let resources = [];\n        shouldUnzip = false;\n        const { packageId, version } = dependencies[i];\n        if (newDependencies.includes(`${packageId}${version}`)) {\n          shouldUnzip = true;\n        }\n        if (shouldUnzip) {\n          let unzipReturn = await unzipDependencies(resources, packageId, version);\n          if (unzipReturn.emptyDependencies.length !== 0) {\n            returnPackage.emptyDependencies.push(unzipReturn.emptyDependencies);\n          }\n          await loadDependenciesInStorage(database, unzipReturn.resourceArr, packageId, version);\n        }\n        returnPackage.defs = await loadAsFHIRDefs(FHIRdefs, database, packageId, version);\n      }\n      database.close();\n      resolve(returnPackage);\n    };\n\n    // If upgrade is needed to the version, the database does not yet exist\n    OpenIDBRequest.onupgradeneeded = function (event) {\n      database = event.target.result;\n      let existingObjectStores = database.objectStoreNames;\n      if (existingObjectStores.contains('resources')) {\n        database.deleteObjectStore('resources');\n      }\n      for (let i = 0; i < dependencies.length; i++) {\n        const { packageId, version } = dependencies[i];\n        if (!existingObjectStores.contains(`${packageId}${version}`)) {\n          database.createObjectStore(`${packageId}${version}`, {\n            keyPath: ['id', 'resourceType']\n          });\n          newDependencies.push(`${packageId}${version}`);\n        }\n      }\n    };\n\n    // Checks if there is an error\n    OpenIDBRequest.onerror = function (event) {\n      reject(event);\n    };\n  });\n}\n\nexport async function resolveDependencies(dependencies) {\n  // Replace any 'latest' versions with the latest version number\n  const resolvedDependencies = await Promise.all(dependencies.map(async (dep) => replaceLatestVersion(dep)));\n\n  // Remove any dependencies that can't identify a latest version\n  const filteredResolvedDependencies = resolvedDependencies.filter((d) => d.version !== null);\n\n  return filteredResolvedDependencies;\n}\n\nasync function replaceLatestVersion(dependency) {\n  const { packageId, version } = dependency;\n  let updatedVersion = version;\n  if (version === 'latest') {\n    await getLatestVersionNumber(dependency)\n      .then((latestId) => {\n        updatedVersion = latestId;\n      })\n      .catch(() => {\n        // No 'latest' version could be found, so mark\n        // this to be filtered out of the list to be loaded\n        updatedVersion = null;\n      });\n  }\n  return { packageId, version: updatedVersion };\n}\n","export function sliceDependency(dependencies) {\n  const dependenciesArray = dependencies.split(',');\n  return dependenciesArray\n    .map((dependency) => {\n      const trimmedDep = dependency.trim();\n      if (trimmedDep === '') {\n        return trimmedDep;\n      }\n      const [packageId, version] = trimmedDep.split('#');\n      return { packageId, version };\n    })\n    .filter((d) => d); // filter out any empty strings\n}\n","import { pad, padStart, padEnd } from 'lodash';\nimport { fhirdefs, sushiExport, sushiImport, utils } from 'fsh-sushi';\nimport { gofshExport, processor, utils as gofshUtils } from 'gofsh';\nimport { fillTank, loadAndCleanDatabase } from './Processing';\nimport { sliceDependency } from './helpers';\nimport { fshOnlineLogger as logger, setCurrentLogger } from './logger';\n\nconst FSHTank = sushiImport.FSHTank;\nconst RawFSH = sushiImport.RawFSH;\nconst exportFHIR = sushiExport.exportFHIR;\nconst sushiStats = utils.stats;\nconst gofshStats = gofshUtils.stats;\nconst getRandomPun = utils.getRandomPun;\nconst Type = utils.Type;\nconst FHIRDefinitions = fhirdefs.FHIRDefinitions;\n\n/**\n * Run GoFSH\n * Note: This function is very similar to FhirToFsh in GoFSH.\n * The only difference is that FSH Online must load dependencies into IndexedDB.\n * If FhirToFsh ever supports a way to load dependencies in the browser,\n * we can update this to simply use that function.\n * @param {array} input array of JSON definitions to be processed\n * @param {object} options config options for GoFSH based on user input and defaults\n * dependencies: user set, defaults to []\n * indent: user set, defaults to false\n * @returns {string} the FSH\n */\nexport async function runGoFSH(input, options) {\n  gofshStats.reset();\n  setCurrentLogger('gofsh');\n\n  // Read in the resources as strings\n  const docs = [];\n  input.forEach((resource, i) => {\n    const location = `Input_${i}`;\n    try {\n      resource = JSON.parse(resource);\n    } catch (e) {\n      logger.error(`Could not parse ${location} to JSON`);\n      return;\n    }\n    if (gofshUtils.isProcessableContent(resource, location)) {\n      docs.push(new processor.WildFHIR({ content: resource }, location));\n    }\n  });\n\n  // Set up the FHIRProcessor\n  const lake = new processor.LakeOfFHIR(docs);\n  let defs = new FHIRDefinitions();\n  const fisher = new gofshUtils.MasterFisher(lake, defs);\n  const fhirProcessor = new processor.FHIRProcessor(lake, fisher);\n\n  // Process the configuration\n  const goFSHDependencies = options.dependencies.map((d) => d.replace('#', '@')); // GoFSH expects a different format\n  const configuration = fhirProcessor.processConfig(goFSHDependencies ?? []); // The created IG files includes the user specified FHIR Version\n\n  // Load dependencies, including those inferred from an IG file, and those given as input\n  let dependencies = configuration?.config.dependencies\n    ? configuration?.config.dependencies.map((dep) => `${dep.packageId}#${dep.version}`)\n    : [];\n  dependencies = sliceDependency(dependencies.join(','));\n\n  const coreFhirVersion = configuration?.config.fhirVersion[0] ?? '4.0.1';\n  const dependenciesToAdd = addCoreFHIRVersionAndAutomaticDependencies(dependencies, coreFhirVersion);\n  dependencies.push(...dependenciesToAdd);\n\n  defs = await loadAndCleanDatabase(defs, dependencies);\n\n  // Process the FHIR to rules, and then export to FSH\n  const pkg = await gofshUtils.getResources(fhirProcessor, configuration, { indent: options.indent });\n\n  // Return the string of FSH definitions\n  const fsh = new gofshExport.FSHExporter(pkg).apiExport('string');\n  logger.info('Done converting definitions');\n  printGoFSHresults(pkg);\n  return { fsh, config: configuration?.config ?? {} };\n}\n\n/**\n * Load dependencies (FHIR R4) and run SUSHI on provided text\n *\n * @param {string} input - string containing FSH text\n * @param {object} config - Configuration for SUSHI based on user input and defaults\n * config.canonical: user set, defaults to http://example.org\n * config.version: user set, defaults to 1.0.0\n * config.FSHOnly: true\n * config.fhirVersion: [4.0.1] - NOTE fhirVersion array will only have one item in it\n *\n * @returns Package with FHIR resources\n */\nexport async function runSUSHI(input, config, dependencies = []) {\n  sushiStats.reset();\n  setCurrentLogger('sushi');\n\n  // Load dependencies\n  let defs = new FHIRDefinitions();\n  const dependenciesToAdd = addCoreFHIRVersionAndAutomaticDependencies(dependencies, config.fhirVersion[0]);\n  dependencies.push(...dependenciesToAdd);\n  defs = await loadAndCleanDatabase(defs, dependencies);\n\n  // Load and fill FSH Tank\n  let tank = FSHTank;\n  try {\n    const rawFSH = [new RawFSH(input)];\n    tank = fillTank(rawFSH, config);\n  } catch (e) {\n    logger.error('Something went wrong when importing the FSH definitions');\n    return;\n  }\n\n  // Check for StructureDefinition\n  const structDef = defs.fishForFHIR('StructureDefinition', Type.Resource);\n  if (structDef?.version !== config.fhirVersion[0]) {\n    logger.error(\n      'StructureDefinition resource not found. The FHIR package in the browser cache' +\n        ' may be corrupt. Clear cookies and site data on this webpage to reload the FHIR package.'\n    );\n    return;\n  }\n\n  logger.info('Converting FSH to FHIR resources...');\n  const outPackage = exportFHIR(tank, defs);\n\n  const count =\n    outPackage.profiles.length +\n    outPackage.extensions.length +\n    outPackage.logicals.length +\n    outPackage.resources.length +\n    // Don't count the inline instances that won't have their own JSON output\n    // but do include them in the SUSHI Results box (so don't filter out of outPackage here)\n    outPackage.instances.filter((i) => i._instanceMeta.usage !== 'Inline').length +\n    outPackage.valueSets.length +\n    outPackage.codeSystems.length;\n\n  logger.info(`Exported ${count} FHIR resources as JSON.`);\n\n  console.log(' ');\n  printSUSHIResults(outPackage);\n\n  // Remove snapshots\n  outPackage.profiles = outPackage.profiles.map((p) => p.toJSON(false));\n  outPackage.extensions = outPackage.extensions.map((e) => e.toJSON(false));\n  outPackage.logicals = outPackage.logicals.map((l) => l.toJSON(false));\n  outPackage.resources = outPackage.resources.map((r) => r.toJSON(false));\n\n  // Filter out inline instances\n  outPackage.instances = outPackage.instances.filter((i) => i._instanceMeta.usage !== 'Inline');\n\n  return outPackage;\n}\n\nfunction printSUSHIResults(pkg) {\n  const numError = sushiStats.numError;\n  const numWarn = sushiStats.numWarn;\n  // NOTE: These variables are creatively names to align well in the strings below while keeping prettier happy\n  const profileNum = pad(pkg.profiles.length.toString(), 13);\n  const extentNum = pad(pkg.extensions.length.toString(), 12);\n  const logiclNum = pad(pkg.logicals.length.toString(), 12);\n  const resourcNum = pad(pkg.resources.length.toString(), 13);\n  const valueSetsNumber = pad(pkg.valueSets.length.toString(), 18);\n  const codeSystemsNum = pad(pkg.codeSystems.length.toString(), 17);\n  const instancesNumber = pad(pkg.instances.length.toString(), 18);\n  const errorNumMsg = pad(`${numError} Error${numError !== 1 ? 's' : ''}`, 13);\n  const wrNumMsg = padStart(`${numWarn} Warning${numWarn !== 1 ? 's' : ''}`, 12);\n\n  const aWittyMessageInvolvingABadFishPun = padEnd(getRandomPun(numError, numWarn), 36);\n  const color = numError > 0 ? 'red' : numWarn > 0 ? '#b36200' : 'green'; // eslint-disable-line no-unused-vars\n\n  /* eslint-disable no-useless-concat */\n  // NOTE: Doing some funky things w/ strings on some lines to keep overall alignment in the code\n  const results = [\n    '╔' + '════════════════════════ SUSHI RESULTS ══════════════════════════' + '╗',\n    '║' + ' ╭───────────────┬──────────────┬──────────────┬───────────────╮ ' + '║',\n    '║' + ' │    Profiles   │  Extensions  │   Logicals   │   Resources   │ ' + '║',\n    '║' + ' ├───────────────┼──────────────┼──────────────┼───────────────┤ ' + '║',\n    '║' + ` │ ${profileNum} │ ${extentNum} │ ${logiclNum} │ ${resourcNum} │ ` + '║',\n    '║' + ' ╰───────────────┴──────────────┴──────────────┴───────────────╯ ' + '║',\n    '║' + ' ╭────────────────────┬───────────────────┬────────────────────╮ ' + '║',\n    '║' + ' │      ValueSets     │    CodeSystems    │     Instances      │ ' + '║',\n    '║' + ' ├────────────────────┼───────────────────┼────────────────────┤ ' + '║',\n    '║' + ` │ ${valueSetsNumber} │ ${codeSystemsNum} │ ${instancesNumber} │ ` + '║',\n    '║' + ' ╰────────────────────┴───────────────────┴────────────────────╯ ' + '║',\n    '║' + '                                                                 ' + '║',\n    '╠' + '═════════════════════════════════════════════════════════════════' + '╣',\n    '║' + ` ${aWittyMessageInvolvingABadFishPun} ${errorNumMsg} ${wrNumMsg} ` + '║',\n    '╚' + '═════════════════════════════════════════════════════════════════' + '╝'\n  ];\n  results.forEach((r) => console.log(r));\n  // results.forEach((r) => console.log(`%c${r}`, `color:${clr}`)); // Color formatting for browser console\n}\n\nfunction printGoFSHresults(pkg) {\n  const proNum = pad(pkg.profiles.length.toString(), 18);\n  const extNum = pad(pkg.extensions.length.toString(), 17);\n  const logNum = pad(pkg.logicals.length.toString(), 18);\n  const resNum = pad(pkg.resources.length.toString(), 18);\n  const vsNum = pad(pkg.valueSets.length.toString(), 17);\n  const csNum = pad(pkg.codeSystems.length.toString(), 18);\n  const instNum = pad(pkg.instances.length.toString(), 18);\n  const invNum = pad(pkg.invariants.length.toString(), 17);\n  const mapNum = pad(pkg.mappings.length.toString(), 18);\n  const errNumMsg = pad(`${gofshStats.numError} Error${gofshStats.numError !== 1 ? 's' : ''}`, 12);\n  const wrnNumMsg = padStart(`${gofshStats.numWarn} Warning${gofshStats.numWarn !== 1 ? 's' : ''}`, 12);\n  const aWittyMessageInvolvingABadFishPun = padEnd(getRandomPun(gofshStats.numError, gofshStats.numWarn), 37);\n\n  // prettier-ignore\n  const results = [\n    '╔' + '═════════════════════════ GoFSH RESULTS ═════════════════════════' + '╗',\n    '║' + ' ╭────────────────────┬───────────────────┬────────────────────╮ ' + '║',\n    '║' + ' │      Profiles      │    Extensions     │      Logicals      │ ' + '║',\n    '║' + ' ├────────────────────┼───────────────────┼────────────────────┤ ' + '║',\n    '║' + ` │ ${    proNum     } │ ${    extNum    } │ ${    logNum     } │ ` + '║',\n    '║' + ' ╰────────────────────┴───────────────────┴────────────────────╯ ' + '║',\n    '║' + ' ╭────────────────────┬───────────────────┬────────────────────╮ ' + '║',\n    '║' + ' │     Resources      │     ValueSets     │     CodeSystems    │ ' + '║',\n    '║' + ' ├────────────────────┼───────────────────┼────────────────────┤ ' + '║',\n    '║' + ` │ ${    resNum     } │ ${    vsNum     } │ ${     csNum     } │ ` + '║',\n    '║' + ' ╰────────────────────┴───────────────────┴────────────────────╯ ' + '║',\n    '║' + ' ╭────────────────────┬───────────────────┬────────────────────╮ ' + '║',\n    '║' + ' │     Instances      │    Invariants     │      Mappings      │ ' + '║',\n    '║' + ' ├────────────────────┼───────────────────┼────────────────────┤ ' + '║',\n    '║' + ` │ ${    instNum    } │ ${    invNum    } │ ${    mapNum     } │ ` + '║',\n    '║' + ' ╰────────────────────┴───────────────────┴────────────────────╯ ' + '║',\n    '║' + '                                                                 ' + '║',\n    '╠' + '═════════════════════════════════════════════════════════════════' + '╣',\n    '║' + ` ${aWittyMessageInvolvingABadFishPun } ${errNumMsg} ${wrnNumMsg} ` + '║',\n    '╚' + '═════════════════════════════════════════════════════════════════' + '╝'\n  ];\n\n  console.log(' ');\n  results.forEach((r) => console.log(r));\n}\n\nfunction addCoreFHIRVersionAndAutomaticDependencies(dependencies, coreFHIRVersion) {\n  const dependenciesToAdd = [];\n  const coreFHIRPackage = {\n    packageId: getCoreFHIRPackageIdentifier(coreFHIRVersion),\n    version: coreFHIRVersion\n  };\n  const hasCoreFHIR = hasDependency(dependencies, coreFHIRPackage);\n  if (!hasCoreFHIR) {\n    dependenciesToAdd.push(coreFHIRPackage);\n  }\n  AUTOMATIC_DEPENDENCIES.filter(\n    (dep) => dep.fhirVersions == null || dep.fhirVersions.some((v) => coreFHIRPackage.version.startsWith(v))\n  ).forEach((dep) => {\n    const dependencyToAdd = { packageId: dep.packageId, version: dep.version, isAutomatic: true };\n    if (!hasDependency(dependencies, dependencyToAdd, true)) {\n      dependenciesToAdd.push(dependencyToAdd);\n    }\n  });\n  return dependenciesToAdd;\n}\n\nfunction hasDependency(dependenciesList, currentDependency, ignoreVersion = false) {\n  return dependenciesList.some(\n    (dep) =>\n      dep.packageId === currentDependency.packageId && (ignoreVersion || dep.version === currentDependency.version)\n  );\n}\n\nexport function getCoreFHIRPackageIdentifier(fhirVersion) {\n  if (/^4\\.0\\.1$/.test(fhirVersion)) {\n    return `hl7.fhir.r4.core`;\n  } else if (/^4\\.3\\.\\d+$/.test(fhirVersion)) {\n    return `hl7.fhir.r4b.core`;\n  } else if (/^5\\.0\\.\\d+$/.test(fhirVersion)) {\n    return `hl7.fhir.r5.core`;\n  } else {\n    return `hl7.fhir.r4.core`;\n  }\n}\n\nconst AUTOMATIC_DEPENDENCIES = [\n  {\n    packageId: 'hl7.fhir.uv.tools',\n    version: 'latest'\n  },\n  {\n    packageId: 'hl7.terminology.r4',\n    version: 'latest',\n    fhirVersions: ['4.0', '4.3']\n  },\n  {\n    packageId: 'hl7.terminology.r5',\n    version: 'latest',\n    fhirVersions: ['5.0']\n  },\n  {\n    packageId: 'hl7.fhir.uv.extensions.r4',\n    version: 'latest',\n    fhirVersions: ['4.0', '4.3']\n  },\n  {\n    packageId: 'hl7.fhir.uv.extensions.r5',\n    version: 'latest',\n    fhirVersions: ['5.0']\n  }\n];\n","import React, { useState, useEffect } from 'react';\nimport clsx from 'clsx';\nimport { makeStyles } from '@material-ui/core/styles';\nimport {\n  AssignmentOutlined as AssignmentOutlinedIcon,\n  ChevronRight as ChevronRightIcon,\n  ExpandMore as ExpandMoreIcon,\n  LibraryBooks as LibraryBooksIcon,\n  PlayArrow,\n  SaveAlt,\n  Settings\n} from '@material-ui/icons';\nimport {\n  Box,\n  Button,\n  Checkbox,\n  CircularProgress,\n  Dialog,\n  DialogActions,\n  DialogContent,\n  DialogContentText,\n  DialogTitle,\n  FormControlLabel,\n  FormHelperText,\n  Grid,\n  Link,\n  MenuItem,\n  Tooltip,\n  TextField\n} from '@material-ui/core';\nimport { runSUSHI, runGoFSH } from '../utils/FSHHelpers';\nimport { sliceDependency } from '../utils/helpers';\nimport { TreeView, TreeItem } from '@material-ui/lab';\nimport CodeMirrorComponent from './CodeMirrorComponent';\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    padding: theme.spacing(1),\n    color: theme.palette.text.primary,\n    background: theme.palette.background.paper,\n    display: 'flex;',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  rightControls: {\n    position: 'absolute',\n    right: '24px'\n  },\n  leftControls: {\n    position: 'absolute',\n    left: '28px'\n  },\n  secondaryButton: {\n    color: theme.palette.success.main,\n    '&:hover': {\n      background: theme.palette.common.lighterBlue\n    }\n  },\n  progressContainer: {\n    width: '24px',\n    height: '24px'\n  },\n  progress: {\n    height: '1em !important',\n    width: '1em !important',\n    verticalAlign: 'middle',\n    color: theme.palette.common.white\n  },\n  button: {\n    color: theme.palette.common.white,\n    background: theme.palette.success.main,\n    borderRadius: '0',\n    paddingRight: '15px',\n    paddingLeft: '15px',\n    '&:hover': {\n      background: theme.palette.success.dark\n    }\n  },\n  buttonLeft: {\n    float: 'right',\n    left: '-3.33px'\n  },\n  buttonRight: {\n    float: 'left',\n    right: '-0.67px'\n  },\n  runIcon: {\n    padding: '0px'\n  },\n  dialogPaper: {\n    maxHeight: '80vh',\n    minHeight: '80vh'\n  },\n  dialogActions: {\n    justifyContent: 'space-between'\n  },\n  dialogActionsMessage: {\n    fontStyle: 'italic',\n    padding: '6px 8px'\n  }\n}));\n\nfunction replacer(key, value) {\n  if (key === 'config') {\n    return undefined;\n  }\n  return value;\n}\n\nexport default function FSHControls(props) {\n  const classes = useStyles();\n  const [openExamples, setOpenExamples] = useState(false);\n  const [openConfig, setOpenConfig] = useState(false);\n  const [canonical, setCanonical] = useState('');\n  const [version, setVersion] = useState('');\n  const [fhirVersion, setFhirVersion] = useState('');\n  const [dependencies, setDependencies] = useState('');\n  const [isGoFSHIndented, setIsGoFSHIndented] = useState(false);\n  const [isSUSHIRunning, setIsSUSHIRunning] = useState(false);\n  const [isGoFSHRunning, setIsGoFSHRunning] = useState(false);\n  const [isFetchingExample, setIsFetchingExample] = useState(false);\n  const [currentExample, setCurrentExample] = useState('');\n  const [currentExampleName, setCurrentExampleName] = useState('');\n\n  useEffect(() => {\n    setCanonical(props.config?.canonical || '');\n    setVersion(props.config?.version || '');\n    setFhirVersion(props.config?.fhirVersion?.length > 0 ? props.config.fhirVersion.at(0) : '');\n    setDependencies(props.config?.dependencies || '');\n  }, [props.config]);\n\n  const handleOpenExamples = () => {\n    setOpenExamples(true);\n  };\n\n  const handleCloseExamples = () => {\n    setOpenExamples(false);\n    setCurrentExample('');\n  };\n\n  const handleOpenConfig = () => {\n    setOpenConfig(true);\n  };\n\n  const handleCloseConfig = () => {\n    setOpenConfig(false);\n    props.onConfigChange({ canonical, version, fhirVersion: [fhirVersion], dependencies, isGoFSHIndented });\n  };\n\n  const updateCanonical = (event) => {\n    const newCanonical = event.target.value;\n    setCanonical(newCanonical);\n  };\n\n  const updateVersion = (event) => {\n    const newVersion = event.target.value;\n    setVersion(newVersion);\n  };\n\n  const updateFhirVersion = (event) => {\n    const newFhirVersion = event.target.value;\n    setFhirVersion(newFhirVersion);\n  };\n\n  const updateDependencyString = (event) => {\n    const dependencyString = event.target.value;\n    setDependencies(dependencyString);\n  };\n\n  const updateIsGoFSHIndented = (event) => {\n    const isIndented = event.target.checked;\n    setIsGoFSHIndented(isIndented);\n  };\n\n  async function handleSUSHIClick() {\n    if (props.isWaiting) {\n      // If SUSHI or GoFSH is in the middle of processes, don't do anything\n      return;\n    }\n\n    props.resetLogMessages();\n    props.onSUSHIClick(true, [''], true);\n    setIsSUSHIRunning(true);\n    const parsedDependencies = sliceDependency(dependencies);\n    const config = {\n      canonical: canonical ? canonical : 'http://example.org',\n      version: version ? version : '1.0.0',\n      FSHOnly: true,\n      fhirVersion: fhirVersion ? [fhirVersion] : ['4.0.1']\n    };\n    const outPackage = await runSUSHI(props.fshText, config, parsedDependencies);\n    let jsonOutput = JSON.stringify(outPackage, replacer, 2);\n    if (outPackage && outPackage.codeSystems) {\n      if (\n        !outPackage.codeSystems.length &&\n        !outPackage.extensions.length &&\n        !outPackage.instances.length &&\n        !outPackage.profiles.length &&\n        !outPackage.logicals.length &&\n        !outPackage.resources.length &&\n        !outPackage.valueSets.length\n      ) {\n        jsonOutput = [''];\n      }\n    } else {\n      jsonOutput = [''];\n    }\n\n    props.onSUSHIClick(true, jsonOutput, false);\n    setIsSUSHIRunning(false);\n  }\n\n  async function handleGoFSHClick() {\n    if (props.isWaiting) {\n      // If SUSHI or GoFSH is in the middle of processes, don't do anything\n      return;\n    }\n\n    props.resetLogMessages();\n    props.onGoFSHClick('', true);\n    setIsGoFSHRunning(true);\n    const gofshInputStrings = props.gofshText.map((def) => def.def).filter((d) => d);\n    const parsedDependencies = dependencies === '' ? [] : dependencies.split(',');\n\n    // Create small ImplementationGuide resource to send canonical and version information\n    if (canonical || version || fhirVersion !== '') {\n      const igResource = {\n        resourceType: 'ImplementationGuide',\n        fhirVersion: fhirVersion ? [fhirVersion] : ['4.0.1'],\n        id: '1',\n        ...(canonical && { url: `${canonical}/ImplementationGuide/1` }),\n        ...(version && { version: version })\n      };\n      gofshInputStrings.push(JSON.stringify(igResource, null, 2));\n    }\n\n    const options = { dependencies: parsedDependencies, indent: isGoFSHIndented };\n    const { fsh, config } = await runGoFSH(gofshInputStrings, options);\n    props.onGoFSHClick(fsh, false);\n    setIsGoFSHRunning(false);\n    if (canonical === '' && config.canonical) setCanonical(config.canonical);\n    if (version === '' && config.version) setVersion(config.version);\n    if (fhirVersion === '' && config.fhirVersion) setFhirVersion(config.fhirVersion.at(0));\n  }\n\n  async function fetchExampleFSH(event, value) {\n    if (!value.endsWith('.fsh')) return;\n    const exampleMetadata = props.exampleMetadata[value];\n    setIsFetchingExample(true);\n    setCurrentExampleName(exampleMetadata.name);\n    const utf8Decoder = new TextDecoder('utf-8');\n    let responseReader = await fetch(exampleMetadata.path).then((response) => response.body.getReader());\n    let fshString = '';\n    const { value: chunk } = await responseReader.read();\n    fshString += utf8Decoder.decode(chunk);\n    setIsFetchingExample(false);\n    setCurrentExample(fshString);\n  }\n\n  function updateExampleValue(text) {\n    setCurrentExample(text);\n  }\n\n  function handleCopyToClipboard() {\n    navigator.clipboard.writeText(currentExample);\n  }\n\n  const renderItem = (node) => (\n    <Tooltip\n      key={node.id}\n      title={\n        props.exampleMetadata[node.id] && props.exampleMetadata[node.id].description\n          ? props.exampleMetadata[node.id].description\n          : node.name\n      }\n      placement=\"bottom\"\n      arrow\n    >\n      <TreeItem key={node.id} nodeId={node.id} label={node.name} className={classes.treeItem}></TreeItem>\n    </Tooltip>\n  );\n\n  const renderTree = (nodes) => (\n    <TreeItem key={nodes.id} nodeId={nodes.id} label={nodes.name}>\n      {nodes.children ? nodes.children.map((node) => (node.children ? renderTree(node) : renderItem(node))) : null}\n    </TreeItem>\n  );\n\n  return (\n    <Box className={classes.box}>\n      <Grid container>\n        <Grid item xs={5}>\n          <Button className={clsx(classes.button, classes.buttonLeft)} onClick={handleSUSHIClick} testid=\"Button\">\n            Convert to JSON\n            {isSUSHIRunning ? (\n              <div className={classes.progressContainer}>\n                <CircularProgress className={classes.progress} />\n              </div>\n            ) : (\n              <PlayArrow className={classes.runIcon} />\n            )}\n          </Button>\n        </Grid>\n        <Grid item xs={7}>\n          <Button\n            className={clsx(classes.button, classes.buttonRight)}\n            onClick={handleGoFSHClick}\n            testid=\"GoFSH-button\"\n          >\n            {isGoFSHRunning ? (\n              <div className={classes.progressContainer}>\n                <CircularProgress className={classes.progress} />\n              </div>\n            ) : (\n              <PlayArrow className={classes.runIcon} style={{ transform: 'scaleX(-1)' }} />\n            )}\n            Convert to FSH\n          </Button>\n        </Grid>\n      </Grid>\n\n      <div className={classes.leftControls}>\n        <Button name=\"Examples\" className={classes.button} onClick={handleOpenExamples}>\n          <LibraryBooksIcon /> &nbsp; FSH Examples\n        </Button>\n      </div>\n\n      <div className={classes.rightControls}>\n        <Button name=\"SaveAll\" className={classes.secondaryButton} onClick={props.saveAll}>\n          <SaveAlt /> Save All\n        </Button>\n        <Button name=\"Configuration\" className={classes.secondaryButton} onClick={handleOpenConfig}>\n          <Settings /> Configuration\n        </Button>\n      </div>\n\n      <Dialog open={openConfig} onClose={handleCloseConfig} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">Configuration Settings</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Change the Implementation Guide configuration to use when processing FSH and FHIR JSON\n          </DialogContentText>\n          <TextField\n            id=\"canonical\"\n            margin=\"dense\"\n            fullWidth\n            label=\"Canonical URL\"\n            helperText=\"Default: http://example.org\"\n            defaultValue={canonical}\n            onChange={updateCanonical}\n          />\n          <TextField\n            id=\"version\"\n            margin=\"dense\"\n            fullWidth\n            label=\"Version\"\n            helperText=\"Default: 1.0.0\"\n            defaultValue={version}\n            onChange={updateVersion}\n          />\n          <TextField\n            id=\"fhir-version-select\"\n            margin=\"dense\"\n            fullWidth\n            select\n            label=\"FHIR Version\"\n            helperText=\"Default: 4.0.1 (R4)\"\n            value={fhirVersion}\n            onChange={updateFhirVersion}\n          >\n            <MenuItem value={'4.0.1'}>4.0.1 (R4)</MenuItem>\n            <MenuItem value={'4.3.0'}>4.3.0 (R4B)</MenuItem>\n            <MenuItem value={'5.0.0'}>5.0.0 (R5)</MenuItem>\n          </TextField>\n          <TextField\n            id=\"dependencies\"\n            margin=\"dense\"\n            fullWidth\n            label=\"Dependencies\"\n            helperText=\"Format: packageId#version, packageId#version (e.g., hl7.fhir.us.core#6.0.0)\"\n            defaultValue={dependencies}\n            onChange={updateDependencyString}\n          />\n          <FormControlLabel\n            id=\"goFSHIndent\"\n            margin=\"dense\"\n            control={<Checkbox checked={isGoFSHIndented} color=\"primary\" />}\n            label=\"Indent output of Convert to FSH\"\n            onChange={updateIsGoFSHIndented}\n          />\n          <FormHelperText>If set, Convert to FSH will output FSH using path rules</FormHelperText>\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={handleCloseConfig} color=\"primary\">\n            Done\n          </Button>\n        </DialogActions>\n      </Dialog>\n      <Dialog\n        open={openExamples}\n        onClose={handleCloseExamples}\n        aria-labelledby=\"form-dialog-title\"\n        maxWidth=\"lg\"\n        fullWidth\n        scroll=\"paper\"\n        classes={{ paper: classes.dialogPaper }}\n      >\n        <DialogTitle id=\"form-dialog-title\">FSH Examples</DialogTitle>\n        <DialogContent>\n          <Grid container style={{ overflow: 'scroll', minHeight: '64vh' }}>\n            <Grid item xs={4}>\n              <TreeView\n                className={classes.treeView}\n                defaultCollapseIcon={<ExpandMoreIcon />}\n                defaultExpandIcon={<ChevronRightIcon />}\n                onNodeSelect={fetchExampleFSH}\n              >\n                {props.exampleConfig.map((category) => renderTree(category))}\n              </TreeView>\n            </Grid>\n            <Grid item xs={8}>\n              <CodeMirrorComponent\n                name={currentExample ? currentExampleName : ''}\n                isExamples={true}\n                value={currentExample}\n                initialText={currentExample}\n                updateTextValue={updateExampleValue}\n                mode={'fsh'}\n                placeholder={isFetchingExample ? 'Fetching example...' : 'Select an example'}\n              />\n            </Grid>\n          </Grid>\n        </DialogContent>\n        <DialogActions className={classes.dialogActions}>\n          <div className={classes.dialogActionsMessage}>\n            Have an example that might be bene-fish-al? Seas the day and add to our collection on{' '}\n            <Link href=\"https://github.com/FSHSchool/FSHOnline-Examples#readme\">GitHub</Link>!\n          </div>\n          <div>\n            <Button onClick={handleCopyToClipboard} color=\"primary\">\n              <AssignmentOutlinedIcon></AssignmentOutlinedIcon> Copy to clipboard\n            </Button>\n            <Button onClick={handleCloseExamples} color=\"secondary\">\n              Close\n            </Button>\n          </div>\n        </DialogActions>\n      </Dialog>\n    </Box>\n  );\n}\n","export default __webpack_public_path__ + \"static/media/FSH-online-logo.1322e272.png\";","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { AppBar, Toolbar, Button, Typography, Box } from '@material-ui/core';\nimport { StylesProvider } from '@material-ui/core/styles';\nimport { ExitToApp } from '@material-ui/icons';\nimport logo from '../style/FSH-online-logo.png';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    background: theme.palette.common.blue,\n    position: 'static',\n    boxShadow: '0'\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: 700\n  },\n  logo: {\n    height: '55px',\n    width: '63px'\n  },\n  toolbarBox: {\n    alignItems: 'center'\n  },\n  exitIcon: {\n    paddingLeft: '3px',\n    transform: 'scaleX(-1)'\n  },\n  docButton: {\n    color: theme.palette.common.white,\n    backgroundColor: theme.palette.common.blue,\n    fontSize: '0.875rem',\n    fontWeight: 700,\n    '&:hover': {\n      background: theme.palette.common.lightBlue\n    }\n  },\n  versionText: {\n    color: theme.palette.common.white,\n    fontSize: '0.8rem',\n    fontStyle: 'italic',\n    marginTop: '-5px'\n  }\n}));\n\nexport default function TopBar() {\n  const classes = useStyles();\n  return (\n    <AppBar className={classes.root}>\n      <Toolbar>\n        <Box className={classes.toolbarBox} display=\"flex\" flexGrow={1} flexDirection=\"row\">\n          <Box order={1} display=\"flex\" flexGrow={1} flexDirection=\"row\">\n            <Box order={1} alignSelf=\"center\" display=\"flex\">\n              <img src={logo} alt=\"logo\" className={classes.logo} />\n            </Box>\n            <Box order={2} alignSelf=\"center\" m={1}>\n              <StylesProvider injectFirst>\n                <Typography order={1} className={classes.title}>\n                  FSH ONLINE\n                </Typography>\n                <Typography order={2} className={classes.versionText}>\n                  Powered by SUSHI v3.8.0 and GoFSH v2.3.0\n                </Typography>\n              </StylesProvider>\n            </Box>\n          </Box>\n          <Box order={1}>\n            <StylesProvider injectFirst>\n              <Button className={classes.docButton} href=\"https://fshschool.org/\" target=\"_blank\">\n                <ExitToApp className={classes.exitIcon} fontSize=\"small\" />\n                Back to School\n              </Button>\n            </StylesProvider>\n          </Box>\n        </Box>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","import React, { createContext, useState, useEffect } from 'react';\nimport { inflateSync } from 'browserify-zlib';\nimport FileSaver from 'file-saver';\nimport JSZip from 'jszip';\nimport { debounce, partition } from 'lodash';\nimport clsx from 'clsx';\nimport { createTheme, makeStyles } from '@material-ui/core/styles';\nimport { Grid, ThemeProvider } from '@material-ui/core';\nimport { expandLink } from './utils/BitlyWorker';\nimport TopBar from './components/TopBar';\nimport JSONOutput from './components/JSONOutput';\nimport FSHOutput from './components/FSHOutput';\nimport ConsoleComponent from './components/ConsoleComponent';\nimport FSHControls from './components/FSHControls';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    height: '100%',\n    flexGrow: 1\n  },\n  fullHeightGrid: {\n    height: '100%'\n  },\n  editorPane: {\n    // From MaterialUI Grid:\n    flexGrow: '0'\n    // maxWidth and flexBasis set inline based on state\n  },\n  resize: {\n    height: '100%',\n    width: '4px',\n    cursor: 'col-resize',\n    '&:hover': {\n      background: colors.lightBlue\n    }\n  },\n  resizeBlue: {\n    background: '#487AA2'\n  },\n  resizeCursor: {\n    cursor: 'col-resize'\n  },\n  collapsedMain: {\n    width: '100%',\n    height: 'calc(100vh - 116px - 300px)'\n  },\n  expandedMain: {\n    width: '100%',\n    height: 'calc(100vh - 116px - 34px)'\n  },\n  collapsedConsole: {\n    height: '25px',\n    width: '100%'\n  },\n  expandedConsole: {\n    height: '300px',\n    width: '100%'\n  },\n  top: {\n    height: '116px'\n  }\n}));\n\nconst colors = {\n  lighterBlue: '#D8E2EA',\n  lightBlue: '#487AA2',\n  blue: '#30638e',\n  darkerBlue: '#143E61',\n  editorGrey: '#263238',\n  lightestGrey: '#E7ECEE',\n  lightGrey: '#D0D9DD',\n  grey: '#575B5C',\n  darkerGrey: '#3D4345',\n  darkestGrey: '#121D21',\n  red: '#FD6668'\n};\n\nexport const theme = createTheme({\n  palette: {\n    success: {\n      main: colors.blue,\n      dark: colors.darkerBlue,\n      light: colors.lightBlue\n    },\n    common: colors\n  },\n  typography: {\n    fontFamily: 'Open Sans'\n  },\n  overrides: {\n    MuiTooltip: {\n      tooltip: {\n        backgroundColor: colors.darkestGrey,\n        fontSize: '13px'\n      },\n      arrow: {\n        color: colors.darkestGrey\n      }\n    },\n    MuiButton: {\n      text: {\n        textTransform: 'none',\n        fontWeight: 600\n      }\n    },\n    MuiIconButton: {\n      root: {\n        '&:hover': {\n          backgroundColor: colors.grey\n        }\n      }\n    }\n  }\n});\n\nconst githubURL = 'https://raw.githubusercontent.com/FSHSchool/FSHOnline-Examples/main/';\nconst log = console.log; //eslint-disable-line no-unused-vars\nconst defaultInfoMessage = 'There are no messages to display in the console.';\nconst defaultProblemMessage = 'There are no problems to display in the console.';\nlet infoMessages = [defaultInfoMessage];\nlet problemMessages = [defaultProblemMessage];\nlet problemCount = 0;\nlet problemColor = '#FDD835'; // Default yellow color for warnings\nlet exampleMetadata = {};\nconsole.log = function getMessages(message) {\n  if (message && (message.startsWith('error') || message.startsWith('warn'))) {\n    if (problemMessages[0] === defaultProblemMessage) {\n      problemMessages = [];\n    }\n    problemCount++;\n    problemMessages.push(message);\n    if (message.startsWith('error')) {\n      problemColor = '#FD6668';\n    }\n  }\n  if (infoMessages[0] === defaultInfoMessage) {\n    infoMessages = [];\n  }\n  infoMessages.push(message);\n};\n\n/* \nParses metadata into a seperate object and converts the manifest into a form that can\nbe consumed by the TreeView component\n*/\nfunction convertManifest(childrenArr) {\n  childrenArr.forEach((element) => {\n    if (element.type === 'category') {\n      convertManifest(element.children);\n    }\n    element.id = element.path.replaceAll('%20', '-'); // Spaces in file names are replaced with '%20' in Github urls\n    if (element.type === 'file') {\n      exampleMetadata[element.id] = {\n        path: `${githubURL}/Examples/${element.path}`,\n        description: element.description,\n        name: element.name\n      };\n    }\n    delete element.type;\n    delete element.path;\n  });\n}\n\nasync function getManifestFromGit() {\n  let manifestJSON = await fetch(`${githubURL}/index.json`).then((response) => response.json());\n  convertManifest(manifestJSON.children);\n  return [...manifestJSON.children];\n}\n\nexport async function decodeFSH(encodedFSH) {\n  if (encodedFSH.text === undefined) {\n    return '';\n  } else {\n    const promisedURL = await expandLink(encodedFSH);\n\n    // Removes the encoded data from the end of the url, starting at index 38\n    const sliced64 = promisedURL.long_url.slice(40);\n    if (!promisedURL.long_url.includes('https://fshschool.org/FSHOnline/#/share/') || sliced64.length === 0) {\n      return '';\n    } else {\n      const displayText = inflateSync(Buffer.from(sliced64, 'base64')).toString('utf-8');\n      return displayText;\n    }\n  }\n}\n\nasync function getGistContent(gistId) {\n  const gistContent = await fetch(`https://api.github.com/gists/${gistId}`).then((res) => res.json());\n  let fshContent = '';\n  for (let f of Object.values(gistContent?.files || {})) {\n    if (f.truncated) {\n      fshContent += await fetch(f.raw_url).then((res) => res.text());\n    } else {\n      fshContent += f.content;\n    }\n    fshContent += '\\n\\n';\n  }\n  return fshContent.trim();\n}\n\nexport const ExpandedConsoleContext = createContext(false);\n\nexport default function App(props) {\n  const classes = useStyles();\n  const urlParam = props.match;\n  const [showNewFHIRText, setShowNewFHIRText] = useState(false);\n  const [inputFSHText, setInputFSHText] = useState('');\n  const [inputFHIRText, setInputFHIRText] = useState(['']);\n  const [initialText, setInitialText] = useState('');\n  const [isWaitingForFHIROutput, setIsWaitingForFHIROutput] = useState(false);\n  const [isWaitingForFSHOutput, setIsWaitingForFSHOutput] = useState(false);\n  const [expandConsole, setExpandConsole] = useState(false);\n  const [exampleConfig, setExampleConfig] = useState([]);\n  const [exampleFilePaths, setExampleFilePaths] = useState({});\n  const [leftWidth, setLeftWidth] = useState(41.666667); // Initial width based off grid item xs={5} size to align with FSHControls\n  const [isDragging, setIsDragging] = useState(false);\n  const [configToShare, setConfigToShare] = useState({ canonical: '', version: '', fhirVersion: [], dependencies: '' });\n  const [sharedConfig, setSharedConfig] = useState({});\n\n  useEffect(() => {\n    async function waitForFSH() {\n      if (/\\/share/.test(urlParam.path)) {\n        const text = await decodeFSH(urlParam.params);\n        const splitIndex = text.indexOf('\\n');\n        const config = text.slice(0, splitIndex);\n        let parsedConfig;\n        let fshContent = text;\n        try {\n          const rawConfig = JSON.parse(config);\n          if (rawConfig.c != null && rawConfig.v != null && rawConfig.d != null) {\n            parsedConfig = {\n              canonical: rawConfig.c,\n              version: rawConfig.v,\n              fhirVersion: rawConfig.f || [], // Need to support old share links that did not have fhirVersion\n              dependencies: rawConfig.d\n            };\n            // If the config is successfully parsed and has the expected properties,\n            // we can assume the true FSH content begins on the next line\n            fshContent = text.slice(splitIndex + 1);\n          }\n        } catch (e) {\n          // If parse fails, it is likely decoding a legacy link in which all content is FSH, so just don't\n          // set the parsedConfig, and set fshContent to all of the text\n        }\n        setSharedConfig(parsedConfig || {});\n        setInitialText(fshContent);\n      } else if (/\\/gist/.test(urlParam.path)) {\n        const fshContent = await getGistContent(urlParam.params.id);\n        setInitialText(fshContent);\n      }\n    }\n    async function fetchExamples() {\n      setExampleConfig(await getManifestFromGit());\n      setExampleFilePaths(exampleMetadata);\n    }\n    waitForFSH();\n    fetchExamples();\n  }, [urlParam]);\n\n  function resetLogMessages() {\n    infoMessages = [defaultInfoMessage];\n    problemMessages = [defaultProblemMessage];\n    problemCount = 0;\n    problemColor = '#FDD835';\n  }\n\n  function handleSUSHIControls(showNewText, sushiOutput, isWaiting) {\n    setShowNewFHIRText(showNewText);\n    setInputFHIRText(sushiOutput); // JSONOutput component handles resetting initial text, so don't reset here\n    setIsWaitingForFHIROutput(isWaiting);\n  }\n\n  function handleGoFSHControls(fshOutput, isWaiting) {\n    setIsWaitingForFSHOutput(isWaiting);\n    setInitialText(fshOutput === '' ? null : fshOutput); // Reset initial text to null if empty in order to display placeholder text\n  }\n\n  function updateInputFSHTextValue(text) {\n    // This is a bit of a hack to make sure the editor can be reset by a setInitialText(null)\n    if (initialText === '' || initialText === null) {\n      setInitialText(text);\n    }\n    setInputFSHText(text);\n  }\n\n  function updateInputFHIRTextValue(text) {\n    setInputFHIRText(text);\n  }\n\n  function handleConfigChange(config) {\n    setConfigToShare(config);\n  }\n\n  function handleResetWidth() {\n    setLeftWidth(41.666667);\n  }\n\n  function onMouseDown(e) {\n    e.preventDefault();\n    setIsDragging(true);\n  }\n\n  function onMouseUp(e) {\n    e.preventDefault();\n    setIsDragging(false);\n  }\n\n  function onTouchStart() {\n    setIsDragging(true);\n  }\n\n  function onTouchEnd() {\n    setIsDragging(false);\n  }\n\n  function debouncedMove(clientX) {\n    if (isDragging) {\n      const newPercentage = (clientX / window.innerWidth) * 100;\n      if (newPercentage > 10 && newPercentage < 76) {\n        setLeftWidth(newPercentage);\n      }\n    }\n  }\n\n  function onMouseMove(e) {\n    const clientX = e.clientX;\n    if (isDragging) {\n      debounce(() => debouncedMove(clientX), 10)();\n    }\n  }\n\n  function onTouchMove(e) {\n    const clientX = e.touches[0].clientX;\n    if (isDragging) {\n      debounce(() => debouncedMove(clientX), 10)();\n    }\n  }\n\n  function getFileName(name, nameMap) {\n    if (nameMap.get(name)) {\n      let count = nameMap.get(name);\n      let nameWithCount = `${name}-${count}`;\n      while (nameMap.get(nameWithCount)) {\n        count = count + 1;\n        nameWithCount = `${name}-${count}`;\n      }\n      nameMap.set(name, count + 1); // Keep track of how many times the name has been used in this zip file\n      name = nameWithCount; // Append a number if the file name has been used already\n      nameMap.set(nameWithCount, 1); // Keep track of the new file name we created so we don't use it again\n    } else {\n      nameMap.set(name, 1);\n    }\n    return name;\n  }\n\n  function saveAll() {\n    const nameMap = new Map();\n\n    // Build zip file\n    const zip = new JSZip();\n    zip.file('FSH.fsh', inputFSHText);\n\n    // Prioritize FHIR definitions that have a provided id when naming files\n    const [defWithId, defWithUntitledId] = partition(inputFHIRText, (def) => def.id && def.id !== 'Untitled');\n    defWithId.forEach((def) => {\n      let resourceObj;\n      try {\n        resourceObj = JSON.parse(def.def);\n      } catch {\n        /* Ignore errors and just default to name without resourceType */\n      }\n      const name = getFileName(resourceObj?.resourceType ? `${resourceObj.resourceType}-${def.id}` : def.id, nameMap);\n      const value = def.def ?? null;\n      zip.file(`${name}.json`, value);\n    });\n    defWithUntitledId.forEach((def) => {\n      let resourceObj;\n      try {\n        resourceObj = JSON.parse(def.def);\n      } catch {\n        /* Ignore errors and just default to name without resourceType */\n      }\n      const id = def.id ?? 'Untitled';\n      const name = getFileName(resourceObj.resourceType ? `${resourceObj.resourceType}-${id}` : id, nameMap);\n      const value = def.def ?? null;\n      zip.file(`${name}.json`, value);\n    });\n\n    // Generate blob of zip and save\n    zip.generateAsync({ type: 'blob' }).then((blob) => {\n      FileSaver.saveAs(blob, 'fshonline.zip');\n    });\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <div className=\"root\" style={{ height: '100vh' }}>\n        <div className={classes.top}>\n          <TopBar />\n          <FSHControls\n            onSUSHIClick={handleSUSHIControls}\n            onGoFSHClick={handleGoFSHControls}\n            onConfigChange={handleConfigChange}\n            config={sharedConfig}\n            fshText={inputFSHText}\n            gofshText={inputFHIRText}\n            resetLogMessages={resetLogMessages}\n            exampleConfig={exampleConfig}\n            exampleMetadata={exampleFilePaths}\n            isWaiting={isWaitingForFSHOutput || isWaitingForFHIROutput}\n            saveAll={saveAll}\n          />\n        </div>\n        <div className={expandConsole ? classes.collapsedMain : classes.expandedMain}>\n          <ExpandedConsoleContext.Provider value={expandConsole}>\n            <Grid\n              className={clsx(classes.container, isDragging && classes.resizeCursor)}\n              container\n              onTouchMove={onTouchMove}\n              onMouseMove={onMouseMove}\n              onMouseUp={onMouseUp}\n              onMouseLeave={onMouseUp}\n            >\n              <Grid\n                item\n                className={clsx(classes.fullHeightGrid, classes.editorPane)}\n                style={{ maxWidth: `calc(${leftWidth}% - 2px)`, flexBasis: `calc(${leftWidth}% - 2px)` }}\n              >\n                <FSHOutput\n                  text={inputFSHText}\n                  initialText={initialText}\n                  updateTextValue={updateInputFSHTextValue}\n                  isWaiting={isWaitingForFSHOutput}\n                  setInitialText={setInitialText}\n                  config={configToShare}\n                />\n              </Grid>\n              <Grid\n                item\n                className={clsx(classes.resize, isDragging && classes.resizeBlue)}\n                onTouchStart={onTouchStart}\n                onTouchEnd={onTouchEnd}\n                onMouseDown={onMouseDown}\n                onDoubleClick={handleResetWidth}\n              />\n              <Grid\n                item\n                className={clsx(classes.fullHeightGrid, classes.editorPane)}\n                style={{\n                  maxWidth: `calc(${100 - leftWidth}% - 2px)`,\n                  flexBasis: `calc(${100 - leftWidth}% - 2px)`\n                }}\n              >\n                <JSONOutput\n                  text={inputFHIRText}\n                  showNewText={showNewFHIRText}\n                  setShowNewText={setShowNewFHIRText}\n                  isWaiting={isWaitingForFHIROutput}\n                  updateTextValue={updateInputFHIRTextValue}\n                />\n              </Grid>\n            </Grid>\n          </ExpandedConsoleContext.Provider>\n        </div>\n        <div className={expandConsole ? classes.expandedConsole : classes.collapsedConsole}>\n          <ConsoleComponent\n            consoleMessages={infoMessages}\n            problemMessages={problemMessages}\n            problemCount={problemCount}\n            problemColor={problemColor}\n            expandConsole={expandConsole}\n            setExpandConsole={setExpandConsole}\n          />\n        </div>\n      </div>\n    </ThemeProvider>\n  );\n}\n"],"sourceRoot":""}
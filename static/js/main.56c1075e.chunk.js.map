{"version":3,"sources":["components/TopBar.js","components/JSONOutput.js","components/ConsoleComponent.js","components/CodeMirrorComponent.js","utils/Load.js","utils/Processing.js","utils/RunSUSHI.js","components/RunButton.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","flexGrow","color","background","position","height","docButton","margin","spacing","boxShadow","title","edge","ButtonAppBar","classes","AppBar","className","Toolbar","Typography","variant","Button","box","padding","palette","text","primary","grey","fontFamily","noWrap","JSONOutput","props","display","displaySUSHI","isObject","JSON","parse","Box","border","overflow","src","displayDataTypes","collapsed","name","common","white","black","pre","Console","msgArray","map","msg","i","key","require","CodeMirrorComponent","value","options","lineNumbers","onChange","editor","data","updateTextValue","unzipDependencies","resources","Promise","resolve","http","get","res","extract","tarStream","on","header","stream","next","buf","chunk","toString","resource","resourceType","push","resume","pipe","zlib","createGunzip","loadDependenciesInStorage","database","reject","transaction","oncomplete","onerror","event","objectStore","keyPath","forEach","add","loadAsFHIRDefs","FHIRdefs","getData","openCursor","onsuccess","iterator","result","continue","fillTank","rawFSHes","config","logger","info","docs","importText","FSHTank","loadExternalDependencies","version","a","shouldUnzip","finalDefs","FHIRDefinitions","OpenIDBRequest","indexedDB","open","target","onupgradeneeded","createObjectStore","startingErrors","startingWarns","runSUSHI","input","canonical","defs","tank","rawFSH","RawFSH","error","structDef","fishForFHIR","Type","Resource","outPackage","exportFHIR","console","log","printResults","errors","warns","pkg","startError","startWarn","resultStatus","numError","stats","numWarn","prNum","pad","profiles","length","extnNum","extensions","vstNum","valueSets","cdsysNum","codeSystems","insNum","instances","errorNumMsg","wrNumMsg","padStart","aWittyMessageInvolvingABadFishPun","padEnd","sample","MESSAGE_MAP","COLOR_MAP","r","clean","warnings","alignItems","justifyContent","button","success","dark","replacer","RunButton","resetLogMessages","onClick","jsonOutput","stringify","testid","container","itemTop","itemBottom","App","useState","doRunSUSHI","setDoRunSUSHI","inputText","setInputText","outputText","setOutputText","isOutputObject","setIsOutputObject","sushiOutput","Grid","item","xs","message","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.56c1075e.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { AppBar, Toolbar, Button, Typography } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n    color: 'white',\n    background: '#30638E',\n    position: 'static',\n    height: '50%'\n  },\n  docButton: {\n    margin: theme.spacing(1),\n    color: 'white',\n    background: 'linear-gradient(45deg, #30638E 30%, #285a85 90%)',\n    boxShadow: '0 3px 5px 2px #285a85'\n  },\n  title: {\n    flexGrow: 1,\n    edge: 'start'\n  }\n}));\n\nexport default function ButtonAppBar() {\n  const classes = useStyles();\n  return (\n    <AppBar className={classes.root}>\n      <Toolbar>\n        <Typography className={classes.title} variant=\"h6\">\n          FSH Playground\n        </Typography>\n        <Button className={classes.docButton}>Documentation</Button>\n      </Toolbar>\n    </AppBar>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Box } from '@material-ui/core';\nimport ReactJson from 'react-json-view';\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    padding: theme.spacing(0, 2),\n    color: theme.palette.text.primary,\n    background: theme.palette.grey[400],\n    height: '100%',\n    fontFamily: 'Consolas',\n    noWrap: false\n  }\n}));\n\nexport default function JSONOutput(props) {\n  const classes = useStyles();\n  let display = '';\n\n  //Checks to insure the doRunSUSHI is true (aka button has been pressed) and there is text to display for the output\n  if (props.displaySUSHI && props.text) {\n    if (props.isObject) {\n      display = JSON.parse(props.text);\n      return (\n        <Box className={classes.box} border={1} overflow=\"scroll\">\n          <h4>Your Output: </h4>\n          <ReactJson src={display} displayDataTypes={false} collapsed={1} name={false} />\n        </Box>\n      );\n    } else {\n      return (\n        <Box className={classes.box} border={1} overflow=\"scroll\">\n          <h4>Your Output: </h4>\n          <pre>{props.text}</pre>\n        </Box>\n      );\n    }\n  } else {\n    return (\n      <Box className={classes.box} border={1}>\n        <h4>Your JSON Output Will Display Here: </h4>\n      </Box>\n    );\n  }\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Box } from '@material-ui/core';\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    padding: theme.spacing(2),\n    color: theme.palette.common.white,\n    background: theme.palette.common.black,\n    height: '200%',\n    fontFamily: 'Consolas'\n  },\n  pre: {\n    margin: '0px'\n  }\n}));\n\nexport default function Console(props) {\n  const classes = useStyles();\n\n  return (\n    <Box className={classes.box} overflow=\"scroll\">\n      <h3>Console</h3>\n      {props.msgArray.map((msg, i) => {\n        return (\n          <pre key={i} className={classes.pre}>\n            {msg}\n          </pre>\n        );\n      })}\n    </Box>\n  );\n}\n","import React from 'react';\nimport { Box } from '@material-ui/core';\nimport { UnControlled as CodeMirror } from 'react-codemirror2';\nimport { makeStyles } from '@material-ui/core/styles';\nimport '../style/CodeMirrorComponent.css';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/material.css';\nrequire('codemirror/mode/xml/xml');\nrequire('codemirror/mode/javascript/javascript');\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    height: '100%'\n  }\n}));\n\nexport default function CodeMirrorComponent(props) {\n  const classes = useStyles();\n\n  //Updates both the text state with the codemirror value\n  function updateText(text) {\n    props.updateTextValue(text);\n  }\n  return (\n    <Box className={classes.box}>\n      <CodeMirror\n        className=\"react-codemirror2\"\n        value={'Edit FSH here!'}\n        options={{\n          theme: 'material',\n          lineNumbers: true\n        }}\n        onChange={(editor, data, value) => {\n          updateText(value);\n        }}\n      />\n    </Box>\n  );\n}\n","import tarStream from 'tar-stream';\nimport zlib from 'zlib';\nimport http from 'http';\n\nexport function unzipDependencies(resources) {\n  return new Promise((resolve) => {\n    http.get('http://packages.fhir.org/hl7.fhir.r4.core/4.0.1', function (res) {\n      const extract = tarStream.extract();\n      // Unzip files\n      extract.on('entry', function (header, stream, next) {\n        let buf = '';\n        stream.on('data', function (chunk) {\n          buf += chunk.toString();\n        });\n        stream.on('end', function () {\n          try {\n            const resource = JSON.parse(buf);\n            if (resource.resourceType) {\n              resources.push(resource);\n            }\n          } catch {} //eslint-disable-line no-empty\n          next();\n        });\n        stream.resume();\n      });\n      extract.on('finish', function () {\n        resolve(resources);\n      });\n      res.pipe(zlib.createGunzip()).pipe(extract);\n    });\n  });\n}\n\nexport function loadDependenciesInStorage(database, resources) {\n  return new Promise((resolve, reject) => {\n    // Loads parsed json into indexDB\n    const transaction = database.transaction(['resources'], 'readwrite');\n    transaction.oncomplete = () => {\n      resolve();\n    };\n    transaction.onerror = (event) => {\n      reject(event);\n    };\n    const objectStore = transaction.objectStore('resources', { keyPath: ['id', 'resourceType'] });\n    resources.forEach((res) => {\n      objectStore.add(res);\n    });\n  });\n}\n\nexport function loadAsFHIRDefs(FHIRdefs, database) {\n  // Convert database data into FHIR Definitions\n  return new Promise((resolve, reject) => {\n    const getData = database\n      .transaction(['resources'], 'readonly')\n      .objectStore('resources', { keyPath: ['id', 'resourceType'] })\n      .openCursor();\n    getData.onerror = function () {\n      reject('There is an error getting data out!');\n    };\n    getData.onsuccess = function () {\n      const iterator = getData.result;\n      if (iterator) {\n        FHIRdefs.add(iterator.value);\n        iterator.continue();\n      } else {\n        resolve(FHIRdefs);\n      }\n    };\n  });\n}\n","import { logger } from 'fsh-sushi/dist/utils';\nimport { loadAsFHIRDefs, loadDependenciesInStorage, unzipDependencies } from './Load';\nimport { FHIRDefinitions } from 'fsh-sushi/dist/fhirdefs';\nimport { FSHTank, importText } from 'fsh-sushi/dist/import';\n\nexport function fillTank(rawFSHes, config) {\n  logger.info('Importing FSH text...');\n  const docs = importText(rawFSHes);\n  return new FSHTank(docs, config);\n}\n\nexport async function loadExternalDependencies(FHIRdefs, version) {\n  return new Promise((resolve, reject) => {\n    let database = null;\n    let shouldUnzip = false;\n    let finalDefs = FHIRDefinitions;\n    const OpenIDBRequest = indexedDB.open('FSH Playground Dependencies', version);\n    // If successful the database exists\n    OpenIDBRequest.onsuccess = async function (event) {\n      database = event.target.result;\n      const resources = [];\n      if (shouldUnzip) {\n        await unzipDependencies(resources);\n        await loadDependenciesInStorage(database, resources);\n      }\n      finalDefs = await loadAsFHIRDefs(FHIRdefs, database);\n      resolve(finalDefs);\n    };\n    // If upgrade is needed to the version, the database does not yet exist\n    OpenIDBRequest.onupgradeneeded = function (event) {\n      shouldUnzip = true;\n      database = event.target.result;\n      database.createObjectStore('resources', {\n        keyPath: ['id', 'resourceType']\n      });\n    };\n    // Checks if there is an error\n    OpenIDBRequest.onerror = function (event) {\n      reject(event);\n    };\n  });\n}\n","import { pad, padStart, sample, padEnd } from 'lodash';\nimport { FSHTank, RawFSH } from 'fsh-sushi/dist/import';\nimport { exportFHIR } from 'fsh-sushi/dist/export';\nimport { logger, stats, Type } from 'fsh-sushi/dist/utils';\nimport { FHIRDefinitions } from 'fsh-sushi/dist/fhirdefs';\nimport { loadExternalDependencies, fillTank } from './Processing';\n\n/**\n * TODO: Keep a running tally of errors because the logger stats do not reset between SUSHI runs\n * If we have a way to clear the stats in the logger, these variables should be removed and we can\n * just use stats.numError and stats.numWarn similar to SUSHI.\n */\nlet startingErrors = 0;\nlet startingWarns = 0;\n\nexport async function runSUSHI(input) {\n  // Hard Code config\n  const config = { canonical: 'http://default.org' };\n\n  // Load dependencies\n  let defs = new FHIRDefinitions();\n  const version = 1;\n  defs = await loadExternalDependencies(defs, version);\n\n  // Load and fill FSH Tank\n  let tank = FSHTank;\n  try {\n    const rawFSH = [new RawFSH(input)];\n    tank = fillTank(rawFSH, config);\n  } catch (e) {\n    logger.error('Something went wrong when importing the FSH definitions');\n    return;\n  }\n  //Check for StructureDefinition\n  const structDef = defs.fishForFHIR('StructureDefinition', Type.Resource);\n  if (structDef?.version !== '4.0.1') {\n    logger.error(\n      'StructureDefinition resource not found for v4.0.1. The FHIR R4 package in local cache' +\n        ' may be corrupt. Local FHIR cache can be found at <home-directory>/.fhir/packages.' +\n        ' For more information, see https://wiki.hl7.org/FHIR_Package_Cache#Location.'\n    );\n    return;\n  }\n\n  logger.info('Converting FSH to FHIR resources...');\n  const outPackage = exportFHIR(tank, defs);\n\n  console.log(' ');\n  const { errors, warns } = printResults(outPackage, startingErrors, startingWarns);\n  startingErrors = errors;\n  startingWarns = warns;\n\n  return outPackage;\n}\n\nfunction printResults(pkg, startError, startWarn) {\n  const numError = stats.numError - startError;\n  const numWarn = stats.numWarn - startWarn;\n  // NOTE: These variables are creatively names to align well in the strings below while keeping prettier happy\n  const prNum = pad(pkg.profiles.length.toString(), 8);\n  const extnNum = pad(pkg.extensions.length.toString(), 10);\n  const vstNum = pad(pkg.valueSets.length.toString(), 9);\n  const cdsysNum = pad(pkg.codeSystems.length.toString(), 11);\n  const insNum = pad(pkg.instances.length.toString(), 9);\n  const errorNumMsg = pad(`${numError} Error${numError !== 1 ? 's' : ''}`, 13);\n  const wrNumMsg = padStart(`${numWarn} Warning${numWarn !== 1 ? 's' : ''}`, 12);\n  let resultStatus;\n  if (numError === 0 && numWarn === 0) {\n    resultStatus = 'clean';\n  } else if (numError > 0) {\n    resultStatus = 'errors';\n  } else {\n    resultStatus = 'warnings';\n  }\n  const aWittyMessageInvolvingABadFishPun = padEnd(sample(MESSAGE_MAP[resultStatus]), 36);\n  const color = COLOR_MAP[resultStatus]; // eslint-disable-line no-unused-vars\n\n  /* eslint-disable no-useless-concat */\n  // NOTE: Doing some funky things w/ strings on some lines to keep overall alignment in the code\n  const results = [\n    '╔' + '════════════════════════ SUSHI RESULTS ══════════════════════════' + '╗',\n    '║' + ' ╭──────────┬────────────┬───────────┬─────────────┬───────────╮ ' + '║',\n    '║' + ' │ Profiles │ Extensions │ ValueSets │ CodeSystems │ Instances │ ' + '║',\n    '║' + ' ├──────────┼────────────┼───────────┼─────────────┼───────────┤ ' + '║',\n    '║' + ` │ ${prNum} │ ${extnNum} │ ${vstNum} │ ${cdsysNum} │ ${insNum} │ ` + '║',\n    '║' + ' ╰──────────┴────────────┴───────────┴─────────────┴───────────╯ ' + '║',\n    '║' + '                                                                 ' + '║',\n    '╠' + '═════════════════════════════════════════════════════════════════' + '╣',\n    '║' + ` ${aWittyMessageInvolvingABadFishPun} ${errorNumMsg} ${wrNumMsg} ` + '║',\n    '╚' + '═════════════════════════════════════════════════════════════════' + '╝'\n  ];\n  results.forEach((r) => console.log(r));\n  // results.forEach((r) => console.log(`%c${r}`, `color:${clr}`)); // Color formatting for browser console\n  return { errors: numError, warns: numWarn };\n}\n\nconst MESSAGE_MAP = {\n  clean: [\n    'That went swimmingly!',\n    'O-fish-ally error free!',\n    \"Nice! You're totally krilling it!\",\n    'Cool and So-fish-ticated!',\n    'Well hooked and landed!',\n    'You earned a PhD in Ichthyology!',\n    'You rock, lobster!',\n    'Everything is ship-shape!',\n    'Ex-clam-ation point!',\n    'Ac-clam-ations!',\n    'Fin-tastic job!'\n  ],\n  warnings: [\n    'Not bad, but you cod do batter!',\n    'Something smells fishy...',\n    'Warnings... Water those about?',\n    'Looks like you are casting about.',\n    'A bit pitchy, but tuna-ble.'\n  ],\n  errors: [\n    'Ick! Errors!',\n    'Some-fin went wrong...',\n    'Unfor-tuna-tely, there are errors.',\n    'That really smelt.',\n    'You spawned some errors.',\n    'Just keep swimming, Dory.',\n    'This is the one that got away.',\n    'The docs might be bene-fish-al.',\n    'This was a turtle disaster.',\n    'Something went eely wrong there.'\n  ]\n};\n\nconst COLOR_MAP = {\n  clean: 'green',\n  warnings: '#b36200',\n  errors: 'red'\n};\n\nexport default runSUSHI;\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Box, Button } from '@material-ui/core';\nimport { runSUSHI } from '../utils/RunSUSHI';\nimport './CodeMirrorComponent';\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    padding: theme.spacing(1),\n    color: theme.palette.text.primary,\n    background: theme.palette.grey[400],\n    height: '4vh',\n    display: 'flex;',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    color: theme.palette.common.white,\n    background: theme.palette.success.dark\n  }\n}));\n\nfunction replacer(key, value) {\n  if (key === 'config') {\n    return undefined;\n  }\n  return value;\n}\n\nexport default function RunButton(props) {\n  const classes = useStyles();\n\n  //Sets the doRunSUSHI to true\n  async function handleClick() {\n    props.resetLogMessages();\n    props.onClick(true, 'Loading...', false);\n    let isObject = true;\n    const outPackage = await runSUSHI(props.text);\n    let jsonOutput = JSON.stringify(outPackage, replacer, 2);\n    if (outPackage.codeSystems) {\n      if (\n        !outPackage.codeSystems.length &&\n        !outPackage.extensions.length &&\n        !outPackage.instances.length &&\n        !outPackage.profiles.length &&\n        !outPackage.valueSets.length\n      ) {\n        isObject = false;\n        jsonOutput = 'Your FSH is invalid. Just keep swimming!';\n      }\n    } else {\n      isObject = false;\n      jsonOutput = 'Your FSH is invalid. Just keep swimming!';\n    }\n\n    props.onClick(true, jsonOutput, isObject);\n  }\n\n  return (\n    <Box className={classes.box}>\n      <Button className={classes.button} onClick={handleClick} testid=\"Button\">\n        Run\n      </Button>\n    </Box>\n  );\n}\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid } from '@material-ui/core';\nimport TopBar from './components/TopBar';\nimport JSONOutput from './components/JSONOutput';\nimport ConsoleComponent from './components/ConsoleComponent';\nimport CodeMirrorComponent from './components/CodeMirrorComponent';\nimport RunButton from './components/RunButton';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    flexGrow: 1\n  },\n  itemTop: {\n    height: '75vh'\n  },\n  itemBottom: {\n    height: '25vh'\n  }\n}));\n\nconst log = console.log; //eslint-disable-line no-unused-vars\nlet msgArray = [];\nconsole.log = function getMessages(message) {\n  msgArray.push(message);\n};\n\nexport default function App() {\n  const classes = useStyles();\n\n  const [doRunSUSHI, setDoRunSUSHI] = useState(false);\n  const [inputText, setInputText] = useState('Edit FSH here!');\n  const [outputText, setOutputText] = useState('Your JSON Output Will Display Here: ');\n  const [isOutputObject, setIsOutputObject] = useState(false);\n\n  function resetLogMessages() {\n    msgArray = [];\n  }\n\n  function handleRunButton(doRunSUSHI, sushiOutput, isObject) {\n    setDoRunSUSHI(doRunSUSHI);\n    setOutputText(sushiOutput);\n    setIsOutputObject(isObject);\n  }\n  function updateInputTextValue(text) {\n    setInputText(text);\n  }\n\n  return (\n    <div className=\"root\">\n      <TopBar />\n      <RunButton onClick={handleRunButton} text={inputText} resetLogMessages={resetLogMessages} />\n      <Grid className={classes.container} container>\n        <Grid className={classes.itemTop} item xs={6}>\n          <CodeMirrorComponent value={inputText} updateTextValue={updateInputTextValue} />\n        </Grid>\n        <Grid className={classes.itemTop} item xs={6}>\n          <JSONOutput displaySUSHI={doRunSUSHI} text={outputText} isObject={isOutputObject} />\n        </Grid>\n        <Grid className={classes.itemBottom} item xs={12}>\n          <ConsoleComponent msgArray={msgArray} />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}
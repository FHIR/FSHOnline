{"version":3,"sources":["components/TopBar.js","components/JSONOutput.js","components/ConsoleComponent.js","components/CodeMirrorComponent.js","utils/Load.js","utils/Processing.js","utils/RunSUSHI.js","components/SUSHIControls.js","App.js","serviceWorker.js","index.js"],"names":["useStyles","makeStyles","theme","root","background","position","height","boxShadow","title","fontSize","marginLeft","spacing","padding","fontWeight","createMuiTheme","typography","fontFamily","TopBar","classes","ThemeProvider","AppBar","className","Toolbar","Box","display","flexGrow","flexDirection","order","alignSelf","Typography","m","StylesProvider","injectFirst","Button","href","target","box","color","palette","text","primary","paper","noWrap","JSONOutput","props","errorAndWarningContent","errorsAndWarnings","length","variant","map","message","i","key","renderErrorAndWarningContent","displayContent","displaySUSHI","isObject","packageJSON","JSON","parse","src","displayDataTypes","collapsed","name","renderDisplayContent","border","overflow","common","white","black","pre","margin","Console","consoleMessages","require","CodeMirror","defineSimpleMode","start","regex","token","next","comment","CodeMirrorComponent","borderTop","value","options","mode","lineNumbers","onChange","editor","data","updateTextValue","logger","utils","unzipDependencies","resources","dependency","id","Promise","resolve","http","get","res","extract","tarStream","on","header","stream","buf","chunk","toString","resource","resourceType","push","resume","statusCode","pipe","zlib","createGunzip","info","error","loadDependenciesInStorage","database","reject","transaction","oncomplete","onerror","event","objectStore","keyPath","forEach","put","loadAsFHIRDefs","FHIRdefs","displayLoaded","getData","openCursor","onsuccess","iterator","result","add","continue","FHIRDefinitions","fhirdefs","FSHTank","sushiImport","importText","fillTank","rawFSHes","config","docs","checkForDatabaseUpgrade","dependencyArr","databaseName","helperReturn","shouldUpdate","version","OpenIDBRequest","indexedDB","open","existingObjectStores","objectStoreNames","close","contains","onupgradeneeded","loadExternalDependencies","a","newDependencies","finalDefs","findIndex","elem","shouldUnzip","includes","createObjectStore","RawFSH","exportFHIR","sushiExport","stats","Type","startingErrors","startingWarns","runSUSHI","input","defs","helperUpdate","tank","rawFSH","structDef","fishForFHIR","Resource","outPackage","console","log","printResults","errors","warns","profiles","p","toJSON","extensions","e","pkg","startError","startWarn","resultStatus","numError","numWarn","prNum","pad","extnNum","vstNum","valueSets","cdsysNum","codeSystems","insNum","instances","errorNumMsg","wrNumMsg","padStart","aWittyMessageInvolvingABadFishPun","padEnd","sample","MESSAGE_MAP","COLOR_MAP","r","clean","warnings","alignItems","justifyContent","button","success","dark","textTransform","main","secondaryButton","replacer","sliceDependency","dependencies","returnArr","arr","split","trim","singleDep","SUSHIControls","useState","setOpen","canonical","setCanonical","setVersion","setDependencies","handleClose","resetLogMessages","onClick","FSHOnly","fhirVersion","jsonOutput","stringify","borderLeft","borderRight","testid","Dialog","onClose","aria-labelledby","DialogTitle","DialogContent","DialogContentText","TextField","fullWidth","label","defaultValue","newCanonical","newVersion","helperText","dependencyString","DialogActions","container","itemTop","itemBottom","errorAndWarningMessages","App","doRunSUSHI","setDoRunSUSHI","inputText","setInputText","outputText","setOutputText","isOutputObject","setIsOutputObject","sushiOutput","Grid","item","xs","startsWith","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch"],"mappings":"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","file":"static/js/main.8ebbf982.chunk.js","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { AppBar, Toolbar, Button, Typography, ThemeProvider, Box } from '@material-ui/core';\nimport { createMuiTheme, StylesProvider } from '@material-ui/core/styles';\nimport '../style/TopBarStyling.css';\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    background: '#2c4f85',\n    position: 'static',\n    height: '50%',\n    boxShadow: '0'\n  },\n  title: {\n    fontSize: 20,\n    marginLeft: theme.spacing(-1.2),\n    padding: 2,\n    fontWeight: 700\n  }\n}));\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: 'Open Sans'\n  }\n});\n\nexport default function TopBar() {\n  const classes = useStyles();\n  return (\n    <ThemeProvider theme={theme}>\n      <AppBar className={classes.root}>\n        <Toolbar>\n          <Box display=\"flex\" flexGrow={1} flexDirection=\"row\">\n            <Box order={1} display=\"flex\" flexGrow={1} flexDirection=\"row\">\n              <Box order={1} alignSelf=\"center\">\n                <Typography className={classes.title}>FSH ONLINE</Typography>\n              </Box>\n              <Box order={2} alignSelf=\"center\" m={1}>\n                <ThemeProvider theme={theme}>\n                  <StylesProvider injectFirst>\n                    <Typography order={2} classes={{ root: 'versionText' }}>\n                      Powered by SUSHI v1.0.1\n                    </Typography>\n                  </StylesProvider>\n                </ThemeProvider>\n              </Box>\n            </Box>\n            <Box order={2}>\n              <ThemeProvider theme={theme}>\n                <StylesProvider injectFirst>\n                  <Button classes={{ root: 'docButton' }} href=\"https://fshschool.org/\" target=\"_blank\">\n                    Back to School\n                  </Button>\n                </StylesProvider>\n              </ThemeProvider>\n            </Box>\n          </Box>\n        </Toolbar>\n      </AppBar>\n    </ThemeProvider>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Box, Typography } from '@material-ui/core';\nimport ReactJson from 'react-json-view';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    padding: theme.spacing(0.2, 2),\n    color: theme.palette.text.primary,\n    background: theme.palette.background.paper,\n    height: '100%',\n    noWrap: false\n  }\n}));\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: 'Open Sans'\n  }\n});\n\nconst renderErrorAndWarningContent = (errorsAndWarnings = []) => {\n  if (errorsAndWarnings.length > 0) {\n    return (\n      <ThemeProvider theme={theme}>\n        <span>\n          <Typography variant=\"subtitle2\">Errors and Warnings</Typography>\n          {errorsAndWarnings.map((message, i) => (\n            <pre key={i}>{message}</pre>\n          ))}\n        </span>\n      </ThemeProvider>\n    );\n  }\n  return;\n};\n\nconst renderDisplayContent = (displaySUSHI, text, isObject) => {\n  if (displaySUSHI && text && isObject) {\n    const packageJSON = JSON.parse(text);\n    return (\n      <ThemeProvider theme={theme}>\n        <span>\n          <Typography variant=\"subtitle2\">Results</Typography>\n          <ReactJson src={packageJSON} displayDataTypes={false} collapsed={false} name={false} />\n        </span>\n      </ThemeProvider>\n    );\n  } else if (displaySUSHI && text) {\n    return <pre>{text}</pre>;\n  }\n  return '';\n};\n\nexport default function JSONOutput(props) {\n  const classes = useStyles();\n  const errorAndWarningContent = renderErrorAndWarningContent(props.errorsAndWarnings);\n  const displayContent = renderDisplayContent(props.displaySUSHI, props.text, props.isObject);\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Box className={classes.box} border={1} overflow=\"scroll\">\n        <Typography variant=\"subtitle1\">SUSHI Output</Typography>\n        {errorAndWarningContent}\n        {displayContent}\n      </Box>\n    </ThemeProvider>\n  );\n}\n","import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Box, Typography } from '@material-ui/core';\nimport { createMuiTheme, ThemeProvider } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    padding: theme.spacing(2),\n    color: theme.palette.common.white,\n    background: theme.palette.common.black,\n    height: '200%'\n  },\n  pre: {\n    margin: '0px'\n  }\n}));\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: 'Open Sans'\n  }\n});\n\nexport default function Console(props) {\n  const classes = useStyles();\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Box className={classes.box} overflow=\"scroll\">\n        <Typography variant=\"subtitle1\">Console</Typography>\n        {props.consoleMessages.map((message, i) => {\n          return (\n            <pre key={i} className={classes.pre}>\n              {message}\n            </pre>\n          );\n        })}\n      </Box>\n    </ThemeProvider>\n  );\n}\n","import React from 'react';\nimport { Box } from '@material-ui/core';\nimport { UnControlled as ReactCodeMirror } from 'react-codemirror2';\nimport { makeStyles } from '@material-ui/core/styles';\nimport CodeMirror from 'codemirror';\nimport '../style/CodeMirrorComponent.css';\nimport 'codemirror/lib/codemirror.css';\nimport 'codemirror/theme/material.css';\nrequire('codemirror/addon/mode/simple');\nrequire('codemirror/mode/xml/xml');\nrequire('codemirror/mode/javascript/javascript');\n\n// Define FSH syntax highlighting\n// Regular expressions from https://github.com/standardhealth/vscode-language-fsh/blob/master/syntaxes/fsh.tmLanguage.json\nCodeMirror.defineSimpleMode('fsh', {\n  start: [\n    // The regex matches the token, the token property contains the type\n    {\n      regex: /\"(?:[^\\\\]|\\\\.)*?(?:\"|$)/,\n      token: 'atom'\n    },\n    {\n      regex: /\\b(Alias|CodeSystem|Expression|Extension|Description|Id|Instance|InstanceOf|Invariant|Mapping|Mixins|Parent|Profile|RuleSet|Severity|Source|Target|Title|Usage|ValueSet|XPath)(?=\\s*:)\\b/,\n      token: 'keyword'\n    },\n    {\n      // NOTE: Original regex has (?<=\\s) at start and (?=\\s) at the end. However, there are known shortcomings with look ahead/look behind with the simple mode approach\n      regex: /\\b(and|codes|contains|exclude|from|includes|is-a|is-not-a|named|obeys|only|or|system|units|valueset|where|D|MS|N|SU|TU|\\\\?!)\\b/,\n      token: 'def'\n    },\n    {\n      regex: /(\\(\\s*)(exactly|example|extensible|preferred|required)(\\s*\\))/,\n      token: 'def'\n    },\n    {\n      regex: /\\*|->|=|:/,\n      token: 'def'\n    },\n    {\n      regex: /\\b(https?:\\/\\/(www\\.)?[-a-zA-Z0-9@:%._+~#=]{2,256}\\.[a-z]{2,6}\\b([-a-zA-Z0-9@:%_+.~#?&//=]*))\\b/,\n      token: 'atom'\n    },\n    {\n      regex: /\\b(true|false)\\b/,\n      token: 'string'\n    },\n    {\n      regex: /#[^\\s]*/,\n      token: 'string'\n    },\n    { regex: /\\/\\/.*/, token: 'comment' },\n    { regex: /\\/\\*/, token: 'comment', next: 'comment' }\n  ],\n  comment: [\n    { regex: /.*?\\*\\//, token: 'comment', next: 'start' },\n    { regex: /.*/, token: 'comment' }\n  ]\n});\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    height: '100%'\n  }\n}));\n\nexport default function CodeMirrorComponent(props) {\n  const classes = useStyles();\n\n  //Updates both the text state with the codemirror value\n  function updateText(text) {\n    props.updateTextValue(text);\n  }\n\n  return (\n    <Box className={classes.box} borderTop={1}>\n      <ReactCodeMirror\n        className=\"react-codemirror2\"\n        value={'Edit FSH here!'}\n        options={{\n          mode: 'fsh',\n          theme: 'material',\n          lineNumbers: true\n        }}\n        onChange={(editor, data, value) => {\n          updateText(value);\n        }}\n      />\n    </Box>\n  );\n}\n","import tarStream from 'tar-stream';\nimport zlib from 'zlib';\nimport http from 'http';\nimport { utils } from 'fsh-sushi';\nconst logger = utils.logger;\n\nexport function unzipDependencies(resources, dependency, id) {\n  return new Promise((resolve) => {\n    http.get(`https://packages.fhir.org/${dependency}/${id}`, function (res) {\n      const extract = tarStream.extract();\n      // Unzip files\n      extract.on('entry', function (header, stream, next) {\n        let buf = '';\n        stream.on('data', function (chunk) {\n          buf += chunk.toString();\n        });\n        stream.on('end', function () {\n          try {\n            const resource = JSON.parse(buf);\n            if (resource.resourceType) {\n              resources.push(resource);\n            }\n          } catch {} //eslint-disable-line no-empty\n          next();\n        });\n        stream.resume();\n      });\n      extract.on('finish', function () {\n        resolve(resources);\n      });\n      if (res.statusCode < 400) {\n        res.pipe(zlib.createGunzip()).pipe(extract);\n        logger.info(`Downloaded ${dependency}#${id}`);\n      } else {\n        if (id === 'current' || id === 'dev') {\n          logger.error(`FSHOnline does not currently support \"current\" or \"dev\" package versions`);\n        } else {\n          logger.error(`your dependency ${dependency}#${id} could not be loaded. Your output may be invalid.`);\n        }\n        resolve(resources);\n      }\n    });\n  });\n}\n\nexport function loadDependenciesInStorage(database, resources, dependency, id) {\n  return new Promise((resolve, reject) => {\n    // Loads parsed json into indexDB\n    const transaction = database.transaction([`${dependency}${id}`], 'readwrite');\n    transaction.oncomplete = () => {\n      resolve();\n    };\n    transaction.onerror = (event) => {\n      reject(event);\n    };\n    const objectStore = transaction.objectStore(`${dependency}${id}`, { keyPath: ['id', 'resourceType'] });\n    resources.forEach((res) => {\n      objectStore.put(res);\n    });\n  });\n}\n\nexport function loadAsFHIRDefs(FHIRdefs, database, dependency, id) {\n  // Convert database data into FHIR Definitions\n  return new Promise((resolve, reject) => {\n    let displayLoaded = false;\n    const getData = database\n      .transaction([`${dependency}${id}`], 'readonly')\n      .objectStore(`${dependency}${id}`, { keyPath: ['id', 'resourceType'] })\n      .openCursor();\n    getData.onerror = function () {\n      reject('There is an error getting data out!');\n    };\n    getData.onsuccess = function () {\n      const iterator = getData.result;\n      if (iterator) {\n        displayLoaded = true;\n        FHIRdefs.add(iterator.value);\n        iterator.continue();\n      } else {\n        if (displayLoaded) {\n          logger.info(`Loaded package ${dependency}#${id}`);\n        }\n        resolve(FHIRdefs);\n      }\n    };\n  });\n}\n","import { fhirdefs, sushiImport, utils } from 'fsh-sushi';\nimport { loadAsFHIRDefs, loadDependenciesInStorage, unzipDependencies } from './Load';\nimport { findIndex } from 'lodash';\n\nconst logger = utils.logger;\nconst FHIRDefinitions = fhirdefs.FHIRDefinitions;\nconst FSHTank = sushiImport.FSHTank;\nconst importText = sushiImport.importText;\n\nexport function fillTank(rawFSHes, config) {\n  logger.info('Importing FSH text...');\n  const docs = importText(rawFSHes);\n  return new FSHTank(docs, config);\n}\n\nexport function checkForDatabaseUpgrade(dependencyArr, databaseName = 'FSH Playground Dependencies') {\n  let helperReturn = { shouldUpdate: false, version: 1 };\n  return new Promise((resolve, reject) => {\n    let database = null;\n    const OpenIDBRequest = indexedDB.open(databaseName);\n    OpenIDBRequest.onsuccess = function (event) {\n      database = event.target.result;\n      let existingObjectStores = database.objectStoreNames;\n      helperReturn.version = database.version;\n      if (existingObjectStores.length === 0 || dependencyArr.length === 0) {\n        helperReturn.shouldUpdate = true;\n        database.close();\n        resolve(helperReturn);\n      } else {\n        for (let i = 0; i < dependencyArr.length; i++) {\n          let dependency = dependencyArr[i][0];\n          let id = dependencyArr[i][1];\n          if (!existingObjectStores.contains(`${dependency}${id}`)) {\n            helperReturn.shouldUpdate = true;\n          }\n        }\n        database.close();\n        resolve(helperReturn);\n      }\n    };\n    OpenIDBRequest.onupgradeneeded = function (event) {\n      database = event.target.result;\n    };\n    OpenIDBRequest.onerror = function (event) {\n      reject(event);\n    };\n  });\n}\n\nexport async function loadExternalDependencies(FHIRdefs, version, dependencyArr) {\n  return new Promise((resolve, reject) => {\n    let database = null;\n    let newDependencies = [];\n    let finalDefs = FHIRDefinitions;\n    const OpenIDBRequest = indexedDB.open('FSH Playground Dependencies', version);\n    // If successful the database exists\n    OpenIDBRequest.onsuccess = async function (event) {\n      database = event.target.result;\n      let findR4 = findIndex(dependencyArr, (elem) => elem[0] === 'hl7.fhir.r4.core' && elem[1] === '4.0.1');\n      if (findR4 < 0) {\n        dependencyArr.push(['hl7.fhir.r4.core', '4.0.1']);\n      }\n      for (let i = 0; i < dependencyArr.length; i++) {\n        let resources = [];\n        let shouldUnzip = false;\n        const dependency = dependencyArr[i][0];\n        const id = dependencyArr[i][1];\n        if (newDependencies.includes(`${dependency}${id}`)) {\n          shouldUnzip = true;\n        }\n        if (shouldUnzip) {\n          resources = await unzipDependencies(resources, dependency, id);\n          await loadDependenciesInStorage(database, resources, dependency, id);\n        }\n        finalDefs = await loadAsFHIRDefs(FHIRdefs, database, dependency, id);\n      }\n      database.close();\n      resolve(finalDefs);\n    };\n    // If upgrade is needed to the version, the database does not yet exist\n    OpenIDBRequest.onupgradeneeded = function (event) {\n      let findR4 = findIndex(dependencyArr, (elem) => elem[0] === 'hl7.fhir.r4.core' && elem[1] === '4.0.1');\n      if (findR4 < 0) {\n        dependencyArr.push(['hl7.fhir.r4.core', '4.0.1']);\n      }\n      database = event.target.result;\n      let existingObjectStores = database.objectStoreNames;\n      for (let i = 0; i < dependencyArr.length; i++) {\n        const dependency = dependencyArr[i][0];\n        const id = dependencyArr[i][1];\n        if (!existingObjectStores.contains(`${dependency}${id}`)) {\n          database.createObjectStore(`${dependency}${id}`, {\n            keyPath: ['id', 'resourceType']\n          });\n          newDependencies.push(`${dependency}${id}`);\n        }\n      }\n    };\n    // Checks if there is an error\n    OpenIDBRequest.onerror = function (event) {\n      reject(event);\n    };\n  });\n}\n","import { pad, padStart, sample, padEnd } from 'lodash';\nimport { fhirdefs, sushiExport, sushiImport, utils } from 'fsh-sushi';\nimport { loadExternalDependencies, fillTank, checkForDatabaseUpgrade } from './Processing';\n\nconst FSHTank = sushiImport.FSHTank;\nconst RawFSH = sushiImport.RawFSH;\nconst exportFHIR = sushiExport.exportFHIR;\nconst logger = utils.logger;\nconst stats = utils.stats;\nconst Type = utils.Type;\nconst FHIRDefinitions = fhirdefs.FHIRDefinitions;\n\n/**\n * TODO: Keep a running tally of errors because the logger stats do not reset between SUSHI runs\n * If we have a way to clear the stats in the logger, these variables should be removed and we can\n * just use stats.numError and stats.numWarn similar to SUSHI.\n */\nlet startingErrors = 0;\nlet startingWarns = 0;\n\n/**\n * Load dependencies (FHIR R4) and run SUSHI on provided text\n *\n * @param {string} input - string containing FSH text\n * @param {object} config - Configuration for SUSHI based on user input and defaults\n * config.canonical: user set, defaults to http://example.org\n * config.version: user set, defaults to 1.0.0\n * config.FSHOnly: true\n * config.fhirVersion: [4.0.1]\n *\n * @returns Package with FHIR resources\n */\nexport async function runSUSHI(input, config, dependencyArr) {\n  // Load dependencies\n  let defs = new FHIRDefinitions();\n  let helperUpdate = await checkForDatabaseUpgrade(dependencyArr);\n  if (helperUpdate.shouldUpdate) {\n    defs = await loadExternalDependencies(defs, helperUpdate.version + 1, dependencyArr);\n  } else {\n    defs = await loadExternalDependencies(defs, helperUpdate.version, dependencyArr);\n  }\n\n  // Load and fill FSH Tank\n  let tank = FSHTank;\n  try {\n    const rawFSH = [new RawFSH(input)];\n    tank = fillTank(rawFSH, config);\n  } catch (e) {\n    logger.error('Something went wrong when importing the FSH definitions');\n    return;\n  }\n  //Check for StructureDefinition\n  const structDef = defs.fishForFHIR('StructureDefinition', Type.Resource);\n  if (structDef?.version !== '4.0.1') {\n    logger.error(\n      'StructureDefinition resource not found for v4.0.1. The FHIR R4 package in local cache' +\n        ' may be corrupt. Local FHIR cache can be found at <home-directory>/.fhir/packages.' +\n        ' For more information, see https://wiki.hl7.org/FHIR_Package_Cache#Location.'\n    );\n    return;\n  }\n\n  logger.info('Converting FSH to FHIR resources...');\n  const outPackage = exportFHIR(tank, defs);\n\n  console.log(' ');\n  const { errors, warns } = printResults(outPackage, startingErrors, startingWarns);\n  startingErrors = errors;\n  startingWarns = warns;\n\n  // Remove snapshots\n  outPackage.profiles = outPackage.profiles.map((p) => p.toJSON(false));\n  outPackage.extensions = outPackage.extensions.map((e) => e.toJSON(false));\n\n  return outPackage;\n}\n\nfunction printResults(pkg, startError, startWarn) {\n  const numError = stats.numError - startError;\n  const numWarn = stats.numWarn - startWarn;\n  // NOTE: These variables are creatively names to align well in the strings below while keeping prettier happy\n  const prNum = pad(pkg.profiles.length.toString(), 8);\n  const extnNum = pad(pkg.extensions.length.toString(), 10);\n  const vstNum = pad(pkg.valueSets.length.toString(), 9);\n  const cdsysNum = pad(pkg.codeSystems.length.toString(), 11);\n  const insNum = pad(pkg.instances.length.toString(), 9);\n  const errorNumMsg = pad(`${numError} Error${numError !== 1 ? 's' : ''}`, 13);\n  const wrNumMsg = padStart(`${numWarn} Warning${numWarn !== 1 ? 's' : ''}`, 12);\n  let resultStatus;\n  if (numError === 0 && numWarn === 0) {\n    resultStatus = 'clean';\n  } else if (numError > 0) {\n    resultStatus = 'errors';\n  } else {\n    resultStatus = 'warnings';\n  }\n  const aWittyMessageInvolvingABadFishPun = padEnd(sample(MESSAGE_MAP[resultStatus]), 36);\n  const color = COLOR_MAP[resultStatus]; // eslint-disable-line no-unused-vars\n\n  /* eslint-disable no-useless-concat */\n  // NOTE: Doing some funky things w/ strings on some lines to keep overall alignment in the code\n  const results = [\n    '╔' + '════════════════════════ SUSHI RESULTS ══════════════════════════' + '╗',\n    '║' + ' ╭──────────┬────────────┬───────────┬─────────────┬───────────╮ ' + '║',\n    '║' + ' │ Profiles │ Extensions │ ValueSets │ CodeSystems │ Instances │ ' + '║',\n    '║' + ' ├──────────┼────────────┼───────────┼─────────────┼───────────┤ ' + '║',\n    '║' + ` │ ${prNum} │ ${extnNum} │ ${vstNum} │ ${cdsysNum} │ ${insNum} │ ` + '║',\n    '║' + ' ╰──────────┴────────────┴───────────┴─────────────┴───────────╯ ' + '║',\n    '║' + '                                                                 ' + '║',\n    '╠' + '═════════════════════════════════════════════════════════════════' + '╣',\n    '║' + ` ${aWittyMessageInvolvingABadFishPun} ${errorNumMsg} ${wrNumMsg} ` + '║',\n    '╚' + '═════════════════════════════════════════════════════════════════' + '╝'\n  ];\n  results.forEach((r) => console.log(r));\n  // results.forEach((r) => console.log(`%c${r}`, `color:${clr}`)); // Color formatting for browser console\n  return { errors: numError, warns: numWarn };\n}\n\nconst MESSAGE_MAP = {\n  clean: [\n    'That went swimmingly!',\n    'O-fish-ally error free!',\n    \"Nice! You're totally krilling it!\",\n    'Cool and So-fish-ticated!',\n    'Well hooked and landed!',\n    'You earned a PhD in Ichthyology!',\n    'You rock, lobster!',\n    'Everything is ship-shape!',\n    'Ex-clam-ation point!',\n    'Ac-clam-ations!',\n    'Fin-tastic job!',\n    \"You're dolphinitely doing great!\"\n  ],\n  warnings: [\n    'Not bad, but you cod do batter!',\n    'Something smells fishy...',\n    'Warnings... Water those about?',\n    'Looks like you are casting about.',\n    'A bit pitchy, but tuna-ble.'\n  ],\n  errors: [\n    'Ick! Errors!',\n    'Some-fin went wrong...',\n    'Unfor-tuna-tely, there are errors.',\n    'That really smelt.',\n    'You spawned some errors.',\n    'Just keep swimming, Dory.',\n    'This is the one that got away.',\n    'The docs might be bene-fish-al.',\n    'This was a turtle disaster.',\n    'Something went eely wrong there.',\n    'Documentation may be kelp-ful.'\n  ]\n};\n\nconst COLOR_MAP = {\n  clean: 'green',\n  warnings: '#b36200',\n  errors: 'red'\n};\n\nexport default runSUSHI;\n","import React, { useState } from 'react';\nimport { makeStyles, createMuiTheme } from '@material-ui/core/styles';\nimport { Box, Button, ThemeProvider } from '@material-ui/core';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport { runSUSHI } from '../utils/RunSUSHI';\nimport './CodeMirrorComponent';\n\nconst useStyles = makeStyles((theme) => ({\n  box: {\n    padding: theme.spacing(1),\n    color: theme.palette.text.primary,\n    background: theme.palette.background.paper,\n    height: '4vh',\n    display: 'flex;',\n    alignItems: 'center',\n    justifyContent: 'center'\n  },\n  button: {\n    color: theme.palette.common.white,\n    background: theme.palette.success.dark,\n    textTransform: 'none',\n    fontWeight: 'bold',\n    '&:hover': {\n      background: theme.palette.success.main\n    }\n  },\n  secondaryButton: {\n    color: theme.palette.common.white,\n    background: '#2c4f85',\n    textTransform: 'none',\n    fontWeight: 'bold',\n    marginLeft: '5px',\n    '&:hover': {\n      background: '#385f9c'\n    }\n  }\n}));\n\nconst theme = createMuiTheme({\n  typography: {\n    fontFamily: 'Open Sans'\n  }\n});\n\nfunction replacer(key, value) {\n  if (key === 'config') {\n    return undefined;\n  }\n  return value;\n}\n\nexport function sliceDependency(dependencies) {\n  let returnArr = [];\n  const arr = dependencies.split(',');\n  for (let i = 0; i < arr.length; i++) {\n    arr[i] = arr[i].trim();\n    if (arr[i] === '') {\n      continue;\n    }\n    let singleDep = arr[i].split('#');\n    returnArr.push([singleDep[0], singleDep[1]]);\n  }\n  return returnArr;\n}\n\nexport default function SUSHIControls(props) {\n  const classes = useStyles();\n  const [open, setOpen] = useState(false);\n  const [canonical, setCanonical] = useState('http://example.org');\n  const [version, setVersion] = useState('1.0.0');\n  const [dependencies, setDependencies] = useState('');\n\n  const handleOpen = () => {\n    setOpen(true);\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n  const updateCanonical = (event) => {\n    const newCanonical = event.target.value;\n    setCanonical(newCanonical);\n  };\n\n  const updateVersion = (event) => {\n    const newVersion = event.target.value;\n    setVersion(newVersion);\n  };\n\n  const updateDependencyString = (event) => {\n    const dependencyString = event.target.value;\n    setDependencies(dependencyString);\n  };\n\n  //Sets the doRunSUSHI to true\n  async function handleRunClick() {\n    props.resetLogMessages();\n    props.onClick(true, 'Loading...', false);\n    let isObject = true;\n    const dependencyArr = sliceDependency(dependencies);\n    const config = { canonical, version, FSHOnly: true, fhirVersion: ['4.0.1'] };\n    const outPackage = await runSUSHI(props.text, config, dependencyArr);\n    let jsonOutput = JSON.stringify(outPackage, replacer, 2);\n    if (outPackage && outPackage.codeSystems) {\n      if (\n        !outPackage.codeSystems.length &&\n        !outPackage.extensions.length &&\n        !outPackage.instances.length &&\n        !outPackage.profiles.length &&\n        !outPackage.valueSets.length\n      ) {\n        isObject = false;\n        jsonOutput = '';\n      }\n    } else {\n      isObject = false;\n      jsonOutput = '';\n    }\n\n    props.onClick(true, jsonOutput, isObject);\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <Box className={classes.box} borderLeft={1} borderRight={1}>\n        <Button className={classes.button} onClick={handleRunClick} testid=\"Button\">\n          Run\n        </Button>\n        <Button className={classes.secondaryButton} onClick={handleOpen}>\n          Configuration\n        </Button>\n        <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n          <DialogTitle id=\"form-dialog-title\">SUSHI Configuration Settings</DialogTitle>\n          <DialogContent>\n            <DialogContentText>\n              Change the configuration options to use when running SUSHI on your FSH\n            </DialogContentText>\n            <TextField\n              id=\"canonical\"\n              margin=\"dense\"\n              fullWidth\n              label=\"Canonical URL\"\n              defaultValue={canonical}\n              onChange={updateCanonical}\n            />\n            <TextField\n              id=\"version\"\n              margin=\"dense\"\n              fullWidth\n              label=\"Version\"\n              defaultValue={version}\n              onChange={updateVersion}\n            />\n            <TextField\n              id=\"dependencies\"\n              margin=\"dense\"\n              fullWidth\n              label=\"Dependencies\"\n              helperText=\"dependencyID#version, dependencyID#version\"\n              defaultValue={dependencies}\n              onChange={updateDependencyString}\n            />\n          </DialogContent>\n          <DialogActions>\n            <Button onClick={handleClose} color=\"primary\">\n              Done\n            </Button>\n          </DialogActions>\n        </Dialog>\n      </Box>\n    </ThemeProvider>\n  );\n}\n","import React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Grid } from '@material-ui/core';\nimport TopBar from './components/TopBar';\nimport JSONOutput from './components/JSONOutput';\nimport ConsoleComponent from './components/ConsoleComponent';\nimport CodeMirrorComponent from './components/CodeMirrorComponent';\nimport SUSHIControls from './components/SUSHIControls';\n\nconst useStyles = makeStyles((theme) => ({\n  container: {\n    flexGrow: 1\n  },\n  itemTop: {\n    height: '75vh'\n  },\n  itemBottom: {\n    height: '25vh'\n  }\n}));\n\nconst log = console.log; //eslint-disable-line no-unused-vars\nlet consoleMessages = [];\nlet errorAndWarningMessages = [];\nconsole.log = function getMessages(message) {\n  consoleMessages.push(message);\n  if (message && (message.startsWith('error') || message.startsWith('warn'))) {\n    errorAndWarningMessages.push(message);\n  }\n};\n\nexport default function App() {\n  const classes = useStyles();\n\n  const [doRunSUSHI, setDoRunSUSHI] = useState(false);\n  const [inputText, setInputText] = useState('Edit FSH here!');\n  const [outputText, setOutputText] = useState('Your JSON Output Will Display Here: ');\n  const [isOutputObject, setIsOutputObject] = useState(false);\n\n  function resetLogMessages() {\n    consoleMessages = [];\n    errorAndWarningMessages = [];\n  }\n\n  function handleSUSHIControls(doRunSUSHI, sushiOutput, isObject) {\n    setDoRunSUSHI(doRunSUSHI);\n    setOutputText(sushiOutput);\n    setIsOutputObject(isObject);\n  }\n\n  function updateInputTextValue(text) {\n    setInputText(text);\n  }\n\n  return (\n    <div className=\"root\">\n      <TopBar />\n      <SUSHIControls onClick={handleSUSHIControls} text={inputText} resetLogMessages={resetLogMessages} />\n      <Grid className={classes.container} container>\n        <Grid className={classes.itemTop} item xs={6}>\n          <CodeMirrorComponent value={inputText} updateTextValue={updateInputTextValue} />\n        </Grid>\n        <Grid className={classes.itemTop} item xs={6}>\n          <JSONOutput\n            displaySUSHI={doRunSUSHI}\n            text={outputText}\n            isObject={isOutputObject}\n            errorsAndWarnings={errorAndWarningMessages}\n          />\n        </Grid>\n        <Grid className={classes.itemBottom} item xs={12}>\n          <ConsoleComponent consoleMessages={consoleMessages} />\n        </Grid>\n      </Grid>\n    </div>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (response.status === 404 || (contentType != null && contentType.indexOf('javascript') === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}